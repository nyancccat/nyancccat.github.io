(()=>{function M(){window.setTimeout(M,1e3);let s=new Date-new Date("07/27/2009 20:49:04"),l=Math.floor(s/(24*3600*1e3)),_=s%(24*3600*1e3),y=Math.floor(_/(3600*1e3)),h=_%(3600*1e3),p=Math.floor(h/(60*1e3)),t=h%(60*1e3),i=Math.floor(t/1e3),n=document.getElementById("run-time");n.innerHTML='<i class="far fa-clock fa-fw"></i> \u672C\u7AD9\u5DF2\u8FD0\u884C\u4E86 '+(l<10?"0":"")+l+" \u5929 "+(y<10?"0":"")+y+" \u65F6 "+(p<10?"0":"")+p+" \u5206 "+(i<10?"0":"")+i+" \u79D2 "}M();(function(o,r){typeof window=="object"&&(window[o]=r())})("Ribbons",function(){var o=window,r=document.body,s=document.documentElement,l=function(){if(arguments.length===1){if(Array.isArray(arguments[0])){var t=Math.round(l(0,arguments[0].length-1));return arguments[0][t]}return l(0,arguments[0])}else if(arguments.length===2)return Math.random()*(arguments[1]-arguments[0])+arguments[0];return 0},_=function(t){var i=Math.max(0,o.innerWidth||s.clientWidth||r.clientWidth||0),n=Math.max(0,o.innerHeight||s.clientHeight||r.clientHeight||0),e=Math.max(0,o.pageXOffset||s.scrollLeft||r.scrollLeft||0)-(s.clientLeft||0),a=Math.max(0,o.pageYOffset||s.scrollTop||r.scrollTop||0)-(s.clientTop||0);return{width:i,height:n,ratio:i/n,centerx:i/2,centery:n/2,scrollx:e,scrolly:a}},y=function(t){var i=_(t),n=t?Math.max(0,t.pageX||t.clientX||0):0,e=t?Math.max(0,t.pageY||t.clientY||0):0;return{mousex:n,mousey:e,centerx:n-i.width/2,centery:e-i.height/2}},h=function(t,i){this.x=0,this.y=0,this.set(t,i)};h.prototype={constructor:h,set:function(t,i){this.x=t||0,this.y=i||0},copy:function(t){return this.x=t.x||0,this.y=t.y||0,this},multiply:function(t,i){return this.x*=t||1,this.y*=i||1,this},divide:function(t,i){return this.x/=t||1,this.y/=i||1,this},add:function(t,i){return this.x+=t||0,this.y+=i||0,this},subtract:function(t,i){return this.x-=t||0,this.y-=i||0,this},clampX:function(t,i){return this.x=Math.max(t,Math.min(this.x,i)),this},clampY:function(t,i){return this.y=Math.max(t,Math.min(this.y,i)),this},flipX:function(){return this.x*=-1,this},flipY:function(){return this.y*=-1,this}};var p=function(t){this._canvas=null,this._context=null,this._sto=null,this._width=0,this._height=0,this._scroll=0,this._ribbons=[],this._options={id:"bgCanvas",colorSaturation:"70%",colorBrightness:"60%",colorAlpha:.6,colorCycleSpeed:6,verticalPosition:"center",horizontalSpeed:200,ribbonCount:3,strokeSize:0,parallaxAmount:-.5,animateSections:!0},this._onDraw=this._onDraw.bind(this),this._onResize=this._onResize.bind(this),this._onScroll=this._onScroll.bind(this),this.setOptions(t),this.init()};return p.prototype={constructor:p,setOptions:function(t){if(typeof t=="object")for(var i in t)t.hasOwnProperty(i)&&(this._options[i]=t[i])},init:function(){try{this._canvas=document.createElement("canvas"),this._canvas.style.display="block",this._canvas.style.position="fixed",this._canvas.style.margin="0",this._canvas.style.padding="0",this._canvas.style.border="0",this._canvas.style.outline="0",this._canvas.style.left="0",this._canvas.style.top="0",this._canvas.style.width="100%",this._canvas.style.height="100%",this._canvas.style["z-index"]="-1",this._canvas.style["background-color"]=this._options.backgroundColor,this._canvas.id=this._options.id,this._onResize(),this._context=this._canvas.getContext("2d"),this._context.clearRect(0,0,this._width,this._height),this._context.globalAlpha=this._options.colorAlpha,window.addEventListener("resize",this._onResize),window.addEventListener("scroll",this._onScroll),document.body.appendChild(this._canvas)}catch(t){console.warn("Canvas Context Error: "+t.toString());return}this._onDraw()},addRibbon:function(){var t=Math.round(l(1,9))>5?"right":"left",i=1e3,n=200,e=0-n,a=this._width+n,d=0,c=0,b=t==="right"?e:a,f=Math.round(l(0,this._height));/^(top|min)$/i.test(this._options.verticalPosition)?f=0+n:/^(middle|center)$/i.test(this._options.verticalPosition)?f=this._height/2:/^(bottom|max)$/i.test(this._options.verticalPosition)&&(f=this._height-n),this._options.parallaxAmount!==0&&(f+=this._scroll);for(var v=[],m=new h(b,f),u=new h(b,f),x=null,g=Math.round(l(0,360)),w=0;!(i<=0);){if(i--,d=Math.round((Math.random()*1-.2)*this._options.horizontalSpeed),c=Math.round((Math.random()*1-.5)*(this._height*.25)),x=new h,x.copy(u),t==="right"){if(x.add(d,c),u.x>=a)break}else if(t==="left"&&(x.subtract(d,c),u.x<=e))break;v.push({point1:new h(m.x,m.y),point2:new h(u.x,u.y),point3:x,color:g,delay:w,dir:t,alpha:0,phase:0}),m.copy(u),u.copy(x),w+=4,g+=this._options.colorCycleSpeed}this._ribbons.push(v)},_drawRibbonSection:function(t){if(t){if(t.phase>=1&&t.alpha<=0)return!0;if(t.delay<=0){if(t.phase+=.02,t.alpha=Math.sin(t.phase)*1,t.alpha=t.alpha<=0?0:t.alpha,t.alpha=t.alpha>=1?1:t.alpha,this._options.animateSections){var i=Math.sin(1+t.phase*Math.PI/2)*.1;t.dir==="right"?(t.point1.add(i,0),t.point2.add(i,0),t.point3.add(i,0)):(t.point1.subtract(i,0),t.point2.subtract(i,0),t.point3.subtract(i,0)),t.point1.add(0,i),t.point2.add(0,i),t.point3.add(0,i)}}else t.delay-=.5;var n=this._options.colorSaturation,e=this._options.colorBrightness,a="hsla("+t.color+", "+n+", "+e+", "+t.alpha+" )";this._context.save(),this._options.parallaxAmount!==0&&this._context.translate(0,this._scroll*this._options.parallaxAmount),this._context.beginPath(),this._context.moveTo(t.point1.x,t.point1.y),this._context.lineTo(t.point2.x,t.point2.y),this._context.lineTo(t.point3.x,t.point3.y),this._context.fillStyle=a,this._context.fill(),this._options.strokeSize>0&&(this._context.lineWidth=this._options.strokeSize,this._context.strokeStyle=a,this._context.lineCap="round",this._context.stroke()),this._context.restore()}return!1},_onDraw:function(){for(var t=0,i=this._ribbons.length;t<i;++t)this._ribbons[t]||this._ribbons.splice(t,1);this._context.clearRect(0,0,this._width,this._height);for(var n=0;n<this._ribbons.length;++n){for(var e=this._ribbons[n],a=e?e.length:0,d=0,c=0;c<a;++c)this._drawRibbonSection(e[c])&&d++;d>=a&&(this._ribbons[n]=null)}this._ribbons.length<this._options.ribbonCount&&Math.random()>.99&&this.addRibbon(),requestAnimationFrame(this._onDraw)},_onResize:function(t){var i=_(t);this._width=i.width,this._height=i.height,this._canvas&&(this._canvas.width=this._width,this._canvas.height=this._height,this._context&&(this._context.globalAlpha=this._options.colorAlpha))},_onScroll:function(t){var i=_(t);this._scroll=i.scrolly}},p});new Ribbons({ribbonCount:5,parallaxAmount:-.99});fetch("https://v1.hitokoto.cn/?c=a&c=j&c=d&c=h&c=i").then(o=>o.json()).then(o=>{let r=`\u{1F438} ${o.hitokoto} \u2014\u2014 ${o.from_who||""} \u300A${o.from}\u300B`,s=document.querySelector("#hitokoto_text");s.innerText=r}).catch(console.error);})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiPHN0ZGluPiJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiLyogXHU3QUQ5XHU3MEI5XHU4RkQwXHU4ODRDXHU2NUY2XHU5NUY0ICovXG5cbmZ1bmN0aW9uIHJ1bnRpbWUoKSB7XG4gICAgd2luZG93LnNldFRpbWVvdXQocnVudGltZSwgMTAwMCk7XG5cbiAgICAvKiBcdThCRjdcdTRGRUVcdTY1MzlcdThGRDlcdTkxQ0NcdTc2ODRcdThENzdcdTU5Q0JcdTY1RjZcdTk1RjQgKi9cbiAgICBsZXQgc3RhcnRUaW1lID0gbmV3IERhdGUoJzA3LzI3LzIwMDkgMjA6NDk6MDQnKTtcbiAgICBsZXQgZW5kVGltZSA9IG5ldyBEYXRlKCk7XG4gICAgbGV0IHVzZWRUaW1lID0gZW5kVGltZSAtIHN0YXJ0VGltZTtcbiAgICBsZXQgZGF5cyA9IE1hdGguZmxvb3IodXNlZFRpbWUgLyAoMjQgKiAzNjAwICogMTAwMCkpO1xuICAgIGxldCBsZWF2ZWwgPSB1c2VkVGltZSAlICgyNCAqIDM2MDAgKiAxMDAwKTtcbiAgICBsZXQgaG91cnMgPSBNYXRoLmZsb29yKGxlYXZlbCAvICgzNjAwICogMTAwMCkpO1xuICAgIGxldCBsZWF2ZWwyID0gbGVhdmVsICUgKDM2MDAgKiAxMDAwKTtcbiAgICBsZXQgbWludXRlcyA9IE1hdGguZmxvb3IobGVhdmVsMiAvICg2MCAqIDEwMDApKTtcbiAgICBsZXQgbGVhdmVsMyA9IGxlYXZlbDIgJSAoNjAgKiAxMDAwKTtcbiAgICBsZXQgc2Vjb25kcyA9IE1hdGguZmxvb3IobGVhdmVsMyAvICgxMDAwKSk7XG4gICAgbGV0IHJ1bmJveCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdydW4tdGltZScpO1xuICAgIHJ1bmJveC5pbm5lckhUTUwgPSAnPGkgY2xhc3M9XCJmYXIgZmEtY2xvY2sgZmEtZndcIj48L2k+IFx1NjcyQ1x1N0FEOVx1NURGMlx1OEZEMFx1ODg0Q1x1NEU4NiAnXG4gICAgICAgICsgKChkYXlzIDwgMTApID8gJzAnIDogJycpICsgZGF5cyArICcgXHU1OTI5ICdcbiAgICAgICAgKyAoKGhvdXJzIDwgMTApID8gJzAnIDogJycpICsgaG91cnMgKyAnIFx1NjVGNiAnXG4gICAgICAgICsgKChtaW51dGVzIDwgMTApID8gJzAnIDogJycpICsgbWludXRlcyArICcgXHU1MjA2ICdcbiAgICAgICAgKyAoKHNlY29uZHMgPCAxMCkgPyAnMCcgOiAnJykgKyBzZWNvbmRzICsgJyBcdTc5RDIgJztcbn1cbnJ1bnRpbWUoKTtcblxuXG5cbi8qKlxuICogUmliYm9ucyBDbGFzcyBGaWxlLlxuICogQ3JlYXRlcyBsb3ctcG9seSByaWJib25zIGJhY2tncm91bmQgZWZmZWN0IGluc2lkZSBhIHRhcmdldCBjb250YWluZXIuXG4gKi9cblxuKGZ1bmN0aW9uIChuYW1lLCBmYWN0b3J5KSB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgd2luZG93W25hbWVdID0gZmFjdG9yeSgpO1xuICAgIH1cbn0pXG4gICAgKFwiUmliYm9uc1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdyA9IHdpbmRvdywgX2IgPSBkb2N1bWVudC5ib2R5LCBfZCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcblxuICAgICAgICAvL1x1OTY4Rlx1NjczQVx1NTFGRFx1NjU3MFxuICAgICAgICB2YXIgcmFuZG9tID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShhcmd1bWVudHNbMF0pKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpbmRleCA9IE1hdGgucm91bmQocmFuZG9tKDAsIGFyZ3VtZW50c1swXS5sZW5ndGggLSAxKSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhcmd1bWVudHNbMF1baW5kZXhdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcmFuZG9tKDAsIGFyZ3VtZW50c1swXSk7XG4gICAgICAgICAgICB9IGVsc2VcbiAgICAgICAgICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gTWF0aC5yYW5kb20oKSAqIChhcmd1bWVudHNbMV0gLSBhcmd1bWVudHNbMF0pICsgYXJndW1lbnRzWzBdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vXHU1QzRGXHU1RTU1XHU0RkUxXHU2MDZGXG4gICAgICAgIHZhciBzY3JlZW5JbmZvID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHZhciB3aWR0aCA9IE1hdGgubWF4KDAsIF93LmlubmVyV2lkdGggfHwgX2QuY2xpZW50V2lkdGggfHwgX2IuY2xpZW50V2lkdGggfHwgMCksXG4gICAgICAgICAgICAgICAgaGVpZ2h0ID0gTWF0aC5tYXgoMCwgX3cuaW5uZXJIZWlnaHQgfHwgX2QuY2xpZW50SGVpZ2h0IHx8IF9iLmNsaWVudEhlaWdodCB8fCAwKSxcbiAgICAgICAgICAgICAgICBzY3JvbGx4ID0gTWF0aC5tYXgoMCwgX3cucGFnZVhPZmZzZXQgfHwgX2Quc2Nyb2xsTGVmdCB8fCBfYi5zY3JvbGxMZWZ0IHx8IDApIC0gKF9kLmNsaWVudExlZnQgfHwgMCksXG4gICAgICAgICAgICAgICAgc2Nyb2xseSA9IE1hdGgubWF4KDAsIF93LnBhZ2VZT2Zmc2V0IHx8IF9kLnNjcm9sbFRvcCB8fCBfYi5zY3JvbGxUb3AgfHwgMCkgLSAoX2QuY2xpZW50VG9wIHx8IDApO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogd2lkdGgsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgICAgICAgICAgICAgcmF0aW86IHdpZHRoIC8gaGVpZ2h0LFxuICAgICAgICAgICAgICAgIGNlbnRlcng6IHdpZHRoIC8gMixcbiAgICAgICAgICAgICAgICBjZW50ZXJ5OiBoZWlnaHQgLyAyLFxuICAgICAgICAgICAgICAgIHNjcm9sbHg6IHNjcm9sbHgsXG4gICAgICAgICAgICAgICAgc2Nyb2xseTogc2Nyb2xseVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgbW91c2VJbmZvID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHZhciBzY3JlZW4gPSBzY3JlZW5JbmZvKGUpLFxuICAgICAgICAgICAgICAgIG1vdXNleCA9IGUgPyBNYXRoLm1heCgwLCBlLnBhZ2VYIHx8IGUuY2xpZW50WCB8fCAwKSA6IDAsXG4gICAgICAgICAgICAgICAgbW91c2V5ID0gZSA/IE1hdGgubWF4KDAsIGUucGFnZVkgfHwgZS5jbGllbnRZIHx8IDApIDogMDtcblxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBtb3VzZXg6IG1vdXNleCxcbiAgICAgICAgICAgICAgICBtb3VzZXk6IG1vdXNleSxcbiAgICAgICAgICAgICAgICBjZW50ZXJ4OiBtb3VzZXggLSBzY3JlZW4ud2lkdGggLyAyLFxuICAgICAgICAgICAgICAgIGNlbnRlcnk6IG1vdXNleSAtIHNjcmVlbi5oZWlnaHQgLyAyXG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vXHU3MEI5XG4gICAgICAgIHZhciBQb2ludCA9IGZ1bmN0aW9uICh4LCB5KSB7XG4gICAgICAgICAgICB0aGlzLnggPSAwO1xuICAgICAgICAgICAgdGhpcy55ID0gMDtcbiAgICAgICAgICAgIHRoaXMuc2V0KHgsIHkpO1xuICAgICAgICB9O1xuICAgICAgICAvL1x1NzBCOVx1OEZEMFx1N0I5N1xuICAgICAgICBQb2ludC5wcm90b3R5cGUgPSB7XG4gICAgICAgICAgICBjb25zdHJ1Y3RvcjogUG9pbnQsXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uICh4LCB5KSB7XG4gICAgICAgICAgICAgICAgdGhpcy54ID0geCB8fCAwOyB0aGlzLnkgPSB5IHx8IDA7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29weTogZnVuY3Rpb24gKHBvaW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy54ID0gcG9pbnQueCB8fCAwOyB0aGlzLnkgPSBwb2ludC55IHx8IDA7IHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG11bHRpcGx5OiBmdW5jdGlvbiAoeCwgeSkge1xuICAgICAgICAgICAgICAgIHRoaXMueCAqPSB4IHx8IDE7IHRoaXMueSAqPSB5IHx8IDE7IHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRpdmlkZTogZnVuY3Rpb24gKHgsIHkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnggLz0geCB8fCAxOyB0aGlzLnkgLz0geSB8fCAxOyByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhZGQ6IGZ1bmN0aW9uICh4LCB5KSB7XG4gICAgICAgICAgICAgICAgdGhpcy54ICs9IHggfHwgMDsgdGhpcy55ICs9IHkgfHwgMDsgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3VidHJhY3Q6IGZ1bmN0aW9uICh4LCB5KSB7XG4gICAgICAgICAgICAgICAgdGhpcy54IC09IHggfHwgMDsgdGhpcy55IC09IHkgfHwgMDsgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2xhbXBYOiBmdW5jdGlvbiAobWluLCBtYXgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnggPSBNYXRoLm1heChtaW4sIE1hdGgubWluKHRoaXMueCwgbWF4KSk7IHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNsYW1wWTogZnVuY3Rpb24gKG1pbiwgbWF4KSB7XG4gICAgICAgICAgICAgICAgdGhpcy55ID0gTWF0aC5tYXgobWluLCBNYXRoLm1pbih0aGlzLnksIG1heCkpOyByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmbGlwWDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMueCAqPSAtMTsgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmxpcFk6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnkgKj0gLTE7IHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIC8vXHU0RTFEXHU1RTI2XHU3NTNCXHU2NzdGXG4gICAgICAgIHZhciBGYWN0b3J5ID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgIHRoaXMuX2NhbnZhcyA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLl9jb250ZXh0ID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuX3N0byA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLl93aWR0aCA9IDA7XG4gICAgICAgICAgICB0aGlzLl9oZWlnaHQgPSAwO1xuICAgICAgICAgICAgdGhpcy5fc2Nyb2xsID0gMDtcbiAgICAgICAgICAgIHRoaXMuX3JpYmJvbnMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuX29wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgaWQ6IFwiYmdDYW52YXNcIiwvL1x1NzUzQlx1Njc3RklkXG4gICAgICAgICAgICAgICAgLy8gYmFja2dyb3VuZENvbG9yOiBcIiMxZjFmMWZcIiwvL1x1NzUzQlx1Njc3Rlx1ODBDQ1x1NjY2RlxuICAgICAgICAgICAgICAgIGNvbG9yU2F0dXJhdGlvbjogXCI3MCVcIiwvL1x1N0VBRlx1NUVBNlxuICAgICAgICAgICAgICAgIGNvbG9yQnJpZ2h0bmVzczogXCI2MCVcIiwvL1x1NEVBRVx1NUVBNlxuICAgICAgICAgICAgICAgIGNvbG9yQWxwaGE6IDAuNiwvL1x1OTAwRlx1NjYwRVx1NUVBNlxuICAgICAgICAgICAgICAgIGNvbG9yQ3ljbGVTcGVlZDogNiwvL1x1NEUxRFx1NUUyNlx1NEUwRFx1NTQwQ1x1NTc1N1x1NEU0Qlx1OTVGNFx1NzY4NFx1ODI3Mlx1NUY2OVx1NTNEOFx1NTMxNlx1OTFDRlxuICAgICAgICAgICAgICAgIHZlcnRpY2FsUG9zaXRpb246IFwiY2VudGVyXCIsLy9cdTRFMURcdTVFMjZcdTc2RjhcdTVCRjlcdTRFOEVcdTVDNEZcdTVFNTVcdTc2ODRcdTUyMURcdTU5Q0JcdTRGNERcdTdGNkVcdUZGMUF0b3AvbWluIFx1NUM0Rlx1NUU1NVx1NjcwMFx1NEUwQVx1NjVCOVx1RkYwQ21pZGRsZXxjZW50ZXIgXHU0RTJEXHU5NUY0XHVGRjBDYm90dG9tfG1heCBcdTVDNEZcdTVFNTVcdTY3MDBcdTRFMEJcdTk3NjJcbiAgICAgICAgICAgICAgICBob3Jpem9udGFsU3BlZWQ6IDIwMCwvL1x1NEUxRFx1NUUyNlx1NkMzNFx1NUU3M1x1NjVCOVx1NTQxMVx1NzlGQlx1NTJBOFx1OTAxRlx1NUVBNlx1NTNDMlx1NjU3MFx1RkYwOFx1NEYxQVx1NEU1OFx1NEVFNVx1NEUwMFx1NEUyQVx1OTY4Rlx1NjczQVx1NTAzQ1x1RkYwOVxuICAgICAgICAgICAgICAgIHJpYmJvbkNvdW50OiAzLC8vXHU1NDBDXHU0RTAwXHU2NUY2XHU5NUY0XHU0RTFEXHU1RTI2XHU2MDNCXHU2NzYxXHU2NTcwXG4gICAgICAgICAgICAgICAgc3Ryb2tlU2l6ZTogMCwvL1x1NTE2Q1x1NTE3MVx1OEZCOVx1OERFRlx1NUY4NFx1NjgzN1x1NUYwRlxuICAgICAgICAgICAgICAgIHBhcmFsbGF4QW1vdW50OiAtMC41LC8vXHU2RURBXHU1MkE4XHU1MDRGXHU3OUZCXHU1M0MyXHU2NTcwXHVGRjBDLTFcdTg4NjhcdTc5M0FcdTRFMERcdTUwNEZcdTc5RkJcdUZGMEMwXHU4ODY4XHU3OTNBXHU1N0ZBXHU0RThFXHU0RTFEXHU1RTI2XHU1M0VBXHU1MUZBXHU3M0IwXHU1NzI4XHU5ODc1XHU5NzYyXHU2NzAwXHU0RTBBXHU5NzYyXG4gICAgICAgICAgICAgICAgYW5pbWF0ZVNlY3Rpb25zOiB0cnVlLy9cdTRFMURcdTVFMjZcdTU3NTdcdTY2MkZcdTU0MjZcdTUwNEZcdTc5RkJcdUZGMENcdTY2M0VcdTVGOTdcdTY3MDlcdTUyQThcdTYxMUZcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLl9vbkRyYXcgPSB0aGlzLl9vbkRyYXcuYmluZCh0aGlzKTtcbiAgICAgICAgICAgIHRoaXMuX29uUmVzaXplID0gdGhpcy5fb25SZXNpemUuYmluZCh0aGlzKTtcbiAgICAgICAgICAgIHRoaXMuX29uU2Nyb2xsID0gdGhpcy5fb25TY3JvbGwuYmluZCh0aGlzKTtcbiAgICAgICAgICAgIHRoaXMuc2V0T3B0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICB9O1xuICAgICAgICBGYWN0b3J5LnByb3RvdHlwZSA9IHtcbiAgICAgICAgICAgIGNvbnN0cnVjdG9yOiBGYWN0b3J5LFxuICAgICAgICAgICAgc2V0T3B0aW9uczogZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIG9wdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcHRpb25zLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9vcHRpb25zW2tleV0gPSBvcHRpb25zW2tleV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy9cdTUyMURcdTU5Q0JcdTUzMTZcbiAgICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAvL1x1NTIxRFx1NTlDQlx1NTMxNlx1NzUzQlx1Njc3RlxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NhbnZhcy5zdHlsZVtcImRpc3BsYXlcIl0gPSBcImJsb2NrXCI7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NhbnZhcy5zdHlsZVtcInBvc2l0aW9uXCJdID0gXCJmaXhlZFwiO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jYW52YXMuc3R5bGVbXCJtYXJnaW5cIl0gPSBcIjBcIjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FudmFzLnN0eWxlW1wicGFkZGluZ1wiXSA9IFwiMFwiO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jYW52YXMuc3R5bGVbXCJib3JkZXJcIl0gPSBcIjBcIjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FudmFzLnN0eWxlW1wib3V0bGluZVwiXSA9IFwiMFwiO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jYW52YXMuc3R5bGVbXCJsZWZ0XCJdID0gXCIwXCI7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NhbnZhcy5zdHlsZVtcInRvcFwiXSA9IFwiMFwiO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jYW52YXMuc3R5bGVbXCJ3aWR0aFwiXSA9IFwiMTAwJVwiO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jYW52YXMuc3R5bGVbXCJoZWlnaHRcIl0gPSBcIjEwMCVcIjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FudmFzLnN0eWxlW1wiei1pbmRleFwiXSA9IFwiLTFcIjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FudmFzLnN0eWxlW1wiYmFja2dyb3VuZC1jb2xvclwiXSA9IHRoaXMuX29wdGlvbnMuYmFja2dyb3VuZENvbG9yO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jYW52YXMuaWQgPSB0aGlzLl9vcHRpb25zLmlkO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9vblJlc2l6ZSgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jb250ZXh0ID0gdGhpcy5fY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy5fd2lkdGgsIHRoaXMuX2hlaWdodCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRleHQuZ2xvYmFsQWxwaGEgPSB0aGlzLl9vcHRpb25zLmNvbG9yQWxwaGE7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIHRoaXMuX29uUmVzaXplKTtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgdGhpcy5fb25TY3JvbGwpO1xuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuX2NhbnZhcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihcIkNhbnZhcyBDb250ZXh0IEVycm9yOiBcIiArIGUudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy9cdTVGMDBcdTU5Q0JcdTdFRDhcdTc1M0JcbiAgICAgICAgICAgICAgICB0aGlzLl9vbkRyYXcoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvL1x1NzUxRlx1NjIxMFx1NEUwMFx1Njc2MVx1NEUxRFx1NUUyNlxuICAgICAgICAgICAgYWRkUmliYm9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRpciA9IE1hdGgucm91bmQocmFuZG9tKDEsIDkpKSA+IDUgPyBcInJpZ2h0XCIgOiBcImxlZnRcIiwvL1x1NEUxRFx1NUUyNlx1NUVGNlx1NEYzOFx1NjVCOVx1NTQxMVxuICAgICAgICAgICAgICAgICAgICBzdG9wID0gMTAwMCxcbiAgICAgICAgICAgICAgICAgICAgaGlkZSA9IDIwMCxcbiAgICAgICAgICAgICAgICAgICAgbWluID0gMCAtIGhpZGUsXG4gICAgICAgICAgICAgICAgICAgIG1heCA9IHRoaXMuX3dpZHRoICsgaGlkZSxcbiAgICAgICAgICAgICAgICAgICAgbW92ZXggPSAwLFxuICAgICAgICAgICAgICAgICAgICBtb3ZleSA9IDAsXG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0eCA9IGRpciA9PT0gXCJyaWdodFwiID8gbWluIDogbWF4LC8vXHU4RDc3XHU1OUNCXHU3MEI5eFx1NURFNlx1OEZCOVxuICAgICAgICAgICAgICAgICAgICBzdGFydHkgPSBNYXRoLnJvdW5kKHJhbmRvbSgwLCB0aGlzLl9oZWlnaHQpKTsvL1x1OEQ3N1x1NTlDQlx1NzBCOXlcdTVERTZcdThGQjlcblxuICAgICAgICAgICAgICAgIC8vXHU0RTFEXHU1RTI2XHU3NTFGXHU2MjEwXHU3Njg0XHU0RjREXHU3RjZFXG4gICAgICAgICAgICAgICAgaWYgKC9eKHRvcHxtaW4pJC9pLnRlc3QodGhpcy5fb3B0aW9ucy52ZXJ0aWNhbFBvc2l0aW9uKSkgey8vXHU2NzAwXHU0RTBBXHU2NUI5XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0eSA9IDAgKyBoaWRlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoL14obWlkZGxlfGNlbnRlcikkL2kudGVzdCh0aGlzLl9vcHRpb25zLnZlcnRpY2FsUG9zaXRpb24pKSB7Ly9cdTRFMkRcdTk1RjRcbiAgICAgICAgICAgICAgICAgICAgc3RhcnR5ID0gdGhpcy5faGVpZ2h0IC8gMjtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKC9eKGJvdHRvbXxtYXgpJC9pLnRlc3QodGhpcy5fb3B0aW9ucy52ZXJ0aWNhbFBvc2l0aW9uKSkgey8vXHU2NzAwXHU0RTBCXHU2NUI5XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0eSA9IHRoaXMuX2hlaWdodCAtIGhpZGU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX29wdGlvbnMucGFyYWxsYXhBbW91bnQgIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhcnR5ICs9IHRoaXMuX3Njcm9sbDsvL1x1NTJBMFx1NEUwQVx1NkVEQVx1NTJBOFxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciByaWJib24gPSBbXSxcbiAgICAgICAgICAgICAgICAgICAgcG9pbnQxID0gbmV3IFBvaW50KHN0YXJ0eCwgc3RhcnR5KSxcbiAgICAgICAgICAgICAgICAgICAgcG9pbnQyID0gbmV3IFBvaW50KHN0YXJ0eCwgc3RhcnR5KSxcbiAgICAgICAgICAgICAgICAgICAgcG9pbnQzID0gbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgY29sb3IgPSBNYXRoLnJvdW5kKHJhbmRvbSgwLCAzNjApKSxcbiAgICAgICAgICAgICAgICAgICAgZGVsYXkgPSAwO1xuXG4gICAgICAgICAgICAgICAgLy9cdTRFQ0VcdThENzdcdTU5Q0JcdTRGNERcdTdGNkVcdTVGMDBcdTU5Q0JcdTc1MUZcdTYyMTBcdTRFMDBcdTY3NjFcdTRFMURcdTVFMjZcbiAgICAgICAgICAgICAgICAvL1x1NEUxRFx1NUUyNlx1NkJDRlx1NEUyQVx1NTIwNlx1OTBFOFx1OTBGRFx1NjYyRlx1NEUwMFx1NEUyQVx1NEUwOVx1ODlEMlx1NUY2Mlx1RkYwQ1x1NEUwOVx1NzBCOVx1Nzg2RVx1NUI5QVx1NEUwMFx1NEUyQVx1NEUwOVx1ODlEMlx1NUY2Mlx1RkYwQ1x1NzZGOFx1OTBCQlx1NEUwOVx1ODlEMlx1NUY2Mlx1NjcwOVx1NEUwMFx1Njc2MVx1NTE2Q1x1NTE3MVx1OEZCOVxuICAgICAgICAgICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdG9wIDw9IDApIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBzdG9wLS07XG4gICAgICAgICAgICAgICAgICAgIG1vdmV4ID0gTWF0aC5yb3VuZCgoTWF0aC5yYW5kb20oKSAqIDEgLSAwLjIpICogdGhpcy5fb3B0aW9ucy5ob3Jpem9udGFsU3BlZWQpO1xuICAgICAgICAgICAgICAgICAgICBtb3ZleSA9IE1hdGgucm91bmQoKE1hdGgucmFuZG9tKCkgKiAxIC0gMC41KSAqICh0aGlzLl9oZWlnaHQgKiAwLjI1KSk7XG4gICAgICAgICAgICAgICAgICAgIHBvaW50MyA9IG5ldyBQb2ludCgpO1xuICAgICAgICAgICAgICAgICAgICBwb2ludDMuY29weShwb2ludDIpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGlyID09PSBcInJpZ2h0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50My5hZGQobW92ZXgsIG1vdmV5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwb2ludDIueCA+PSBtYXgpIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRpciA9PT0gXCJsZWZ0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50My5zdWJ0cmFjdChtb3ZleCwgbW92ZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBvaW50Mi54IDw9IG1pbikgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmliYm9uLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9cdTRFMDlcdTcwQjlcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50MTogbmV3IFBvaW50KHBvaW50MS54LCBwb2ludDEueSksXG4gICAgICAgICAgICAgICAgICAgICAgICBwb2ludDI6IG5ldyBQb2ludChwb2ludDIueCwgcG9pbnQyLnkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnQzOiBwb2ludDMsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogY29sb3IsLy9cdTRFMURcdTVFMjZcdTk4OUNcdTgyNzJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGF5OiBkZWxheSwvL1x1NUVGNlx1OEZERlx1NkQ4OFx1NTkzMVxuICAgICAgICAgICAgICAgICAgICAgICAgZGlyOiBkaXIsLy9cdTY1QjlcdTU0MTFcbiAgICAgICAgICAgICAgICAgICAgICAgIGFscGhhOiAwLC8vXHU5MDBGXHU2NjBFXHU1RUE2XG4gICAgICAgICAgICAgICAgICAgICAgICBwaGFzZTogMCAvL1x1OTY4Rlx1NjczQVx1NEY0RFx1NzlGQlx1NjcwOVx1NTE3M1x1NTNDMlx1NjU3MFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgLy9cdTUxNkNcdTUxNzFcdThGQjlcbiAgICAgICAgICAgICAgICAgICAgcG9pbnQxLmNvcHkocG9pbnQyKTtcbiAgICAgICAgICAgICAgICAgICAgcG9pbnQyLmNvcHkocG9pbnQzKTtcbiAgICAgICAgICAgICAgICAgICAgZGVsYXkgKz0gNDtcbiAgICAgICAgICAgICAgICAgICAgY29sb3IgKz0gdGhpcy5fb3B0aW9ucy5jb2xvckN5Y2xlU3BlZWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuX3JpYmJvbnMucHVzaChyaWJib24pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8vXHU3RUQ4XHU1MjM2XHU0RTAwXHU0RTJBXHU0RTA5XHU4OUQyXHU1RjYyXHU2NUI5XHU1NzU3XG4gICAgICAgICAgICBfZHJhd1JpYmJvblNlY3Rpb246IGZ1bmN0aW9uIChzZWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNlY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlY3Rpb24ucGhhc2UgPj0gMSAmJiBzZWN0aW9uLmFscGhhIDw9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZWN0aW9uLmRlbGF5IDw9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rpb24ucGhhc2UgKz0gMC4wMjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rpb24uYWxwaGEgPSBNYXRoLnNpbihzZWN0aW9uLnBoYXNlKSAqIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLmFscGhhID0gc2VjdGlvbi5hbHBoYSA8PSAwID8gMCA6IHNlY3Rpb24uYWxwaGE7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLmFscGhhID0gc2VjdGlvbi5hbHBoYSA+PSAxID8gMSA6IHNlY3Rpb24uYWxwaGE7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fb3B0aW9ucy5hbmltYXRlU2VjdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbW9kID0gTWF0aC5zaW4oMSArIHNlY3Rpb24ucGhhc2UgKiBNYXRoLlBJIC8gMikgKiAwLjE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlY3Rpb24uZGlyID09PSBcInJpZ2h0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VjdGlvbi5wb2ludDEuYWRkKG1vZCwgMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rpb24ucG9pbnQyLmFkZChtb2QsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnBvaW50My5hZGQobW9kLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnBvaW50MS5zdWJ0cmFjdChtb2QsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnBvaW50Mi5zdWJ0cmFjdChtb2QsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnBvaW50My5zdWJ0cmFjdChtb2QsIDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnBvaW50MS5hZGQoMCwgbW9kKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnBvaW50Mi5hZGQoMCwgbW9kKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWN0aW9uLnBvaW50My5hZGQoMCwgbW9kKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlY3Rpb24uZGVsYXkgLT0gMC41O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHZhciBzID0gdGhpcy5fb3B0aW9ucy5jb2xvclNhdHVyYXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBsID0gdGhpcy5fb3B0aW9ucy5jb2xvckJyaWdodG5lc3MsXG4gICAgICAgICAgICAgICAgICAgICAgICBjID0gXCJoc2xhKFwiICsgc2VjdGlvbi5jb2xvciArIFwiLCBcIiArIHMgKyBcIiwgXCIgKyBsICsgXCIsIFwiICsgc2VjdGlvbi5hbHBoYSArIFwiIClcIjtcblxuICAgICAgICAgICAgICAgICAgICAvL1x1N0VEOFx1NTIzNlx1NEUwMFx1NEUyQVx1NjVCOVx1NTc1N1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jb250ZXh0LnNhdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX29wdGlvbnMucGFyYWxsYXhBbW91bnQgIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRleHQudHJhbnNsYXRlKDAsIHRoaXMuX3Njcm9sbCAqIHRoaXMuX29wdGlvbnMucGFyYWxsYXhBbW91bnQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKHNlY3Rpb24ucG9pbnQxLngsIHNlY3Rpb24ucG9pbnQxLnkpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyhzZWN0aW9uLnBvaW50Mi54LCBzZWN0aW9uLnBvaW50Mi55KTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8oc2VjdGlvbi5wb2ludDMueCwgc2VjdGlvbi5wb2ludDMueSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRleHQuZmlsbFN0eWxlID0gYztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29udGV4dC5maWxsKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLl9vcHRpb25zLnN0cm9rZVNpemUgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVXaWR0aCA9IHRoaXMuX29wdGlvbnMuc3Ryb2tlU2l6ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRleHQuc3Ryb2tlU3R5bGUgPSBjO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29udGV4dC5saW5lQ2FwID0gXCJyb3VuZFwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29udGV4dC5zdHJva2UoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jb250ZXh0LnJlc3RvcmUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8vXHU3RUQ4XHU1MjM2XHU0RTFEXHU1RTI2XG4gICAgICAgICAgICBfb25EcmF3OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgLy9cdTZFMDVcdTdBN0FcdTVERjJcdTdFQ0ZcdTdFRDhcdTUyMzZcdThGQzdcdTc2ODRcdTRFMURcdTVFMjZcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgdCA9IHRoaXMuX3JpYmJvbnMubGVuZ3RoOyBpIDwgdDsgKytpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5fcmliYm9uc1tpXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fcmliYm9ucy5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5fY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy5fd2lkdGgsIHRoaXMuX2hlaWdodCk7Ly9cdTZFMDVcdTdBN0FcdTc1M0JcdTY3N0ZcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBhID0gMDsgYSA8IHRoaXMuX3JpYmJvbnMubGVuZ3RoOyArK2EpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJpYmJvbiA9IHRoaXMuX3JpYmJvbnNbYV0sXG4gICAgICAgICAgICAgICAgICAgICAgICBudW1TZWN0aW9ucyA9IHJpYmJvbiA/IHJpYmJvbi5sZW5ndGggOiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgbnVtRG9uZSA9IDA7XG5cbiAgICAgICAgICAgICAgICAgICAgLy9cdTdFRDhcdTUyMzZcdTY1NzRcdTY3NjFcdTRFMURcdTVFMjZcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgYiA9IDA7IGIgPCBudW1TZWN0aW9uczsgKytiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fZHJhd1JpYmJvblNlY3Rpb24ocmliYm9uW2JdKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bURvbmUrKztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvL1x1NEUxRFx1NUUyNlx1NURGMlx1N0VDRlx1NTE2OFx1OTBFOFx1OThEOFx1OEZDN1x1NUM0Rlx1NUU1NVx1RkYwQ1x1OEJCRVx1N0Y2RVx1NEUzQW51bGwsXHU1MUZEXHU2NTcwXHU1MjREXHU5NzYyXHU0RjFBXHU4MUVBXHU1MkE4XHU2RTA1XHU3NDA2XG4gICAgICAgICAgICAgICAgICAgIGlmIChudW1Eb25lID49IG51bVNlY3Rpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9yaWJib25zW2FdID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvL1x1OTY4Rlx1NjczQVx1NzUxRlx1NjIxMFx1NEUwMFx1Njc2MVx1NEUxRFx1NUUyNlxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9yaWJib25zLmxlbmd0aCA8IHRoaXMuX29wdGlvbnMucmliYm9uQ291bnQgJiYgTWF0aC5yYW5kb20oKSA+IDAuOTkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRSaWJib24oKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL1x1OEMwM1x1NUVBNlx1NEVBNFx1N0VEOVx1N0NGQlx1N0VERlx1RkYwQ1x1NUY1M1x1OTcwMFx1ODk4MVx1NTIzN1x1NjVCMFx1NzUzQlx1Njc3Rlx1NjVGNlx1OEMwM1x1NzUyOFx1NjMwN1x1NUI5QVx1NzY4NFx1NTZERVx1OEMwM1x1NTFGRFx1NjU3MFx1RkYwQ1x1NzUyOFx1NEU4RVx1NjNEMFx1OUFEOFx1NjAyN1x1ODBGRFxuICAgICAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLl9vbkRyYXcpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8vXHU5MUNEXHU2NUIwXHU4QkJFXHU3RjZFXHU3QTk3XHU0RjUzXHU1OTI3XHU1QzBGXHU2NUY2XHU5NzAwXHU4OTgxXHU4M0I3XHU1M0Q2XHU3QTk3XHU0RjUzXHU1OTI3XHU1QzBGXG4gICAgICAgICAgICBfb25SZXNpemU6IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNjcmVlbiA9IHNjcmVlbkluZm8oZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fd2lkdGggPSBzY3JlZW4ud2lkdGg7XG4gICAgICAgICAgICAgICAgdGhpcy5faGVpZ2h0ID0gc2NyZWVuLmhlaWdodDtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fY2FudmFzKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NhbnZhcy53aWR0aCA9IHRoaXMuX3dpZHRoO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jYW52YXMuaGVpZ2h0ID0gdGhpcy5faGVpZ2h0O1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fY29udGV4dCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29udGV4dC5nbG9iYWxBbHBoYSA9IHRoaXMuX29wdGlvbnMuY29sb3JBbHBoYTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvL1x1NkVEQVx1NTJBOFx1NjVGNlx1ODNCN1x1NTNENlx1NkVEQVx1NTJBOFx1OERERFx1NzlCQlxuICAgICAgICAgICAgX29uU2Nyb2xsOiBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIHZhciBzY3JlZW4gPSBzY3JlZW5JbmZvKGUpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3Njcm9sbCA9IHNjcmVlbi5zY3JvbGx5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9OyByZXR1cm4gRmFjdG9yeTtcbiAgICB9KTtcblxuLy9cdTUyMURcdTU5Q0JcdTUzMTZcdTVFNzZcdTdFRDhcdTUyMzZcbm5ldyBSaWJib25zKHtcbiAgICByaWJib25Db3VudDogNSxcbiAgICBwYXJhbGxheEFtb3VudDogLTAuOTlcbn0pO1xuXG5cblxuZmV0Y2goXCJodHRwczovL3YxLmhpdG9rb3RvLmNuLz9jPWEmYz1qJmM9ZCZjPWgmYz1pXCIpXG4gICAgLnRoZW4oKHJlc3BvbnNlKSA9PiByZXNwb25zZS5qc29uKCkpXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgbGV0IHN0ciA9IGBcdUQ4M0RcdURDMzggJHtkYXRhLmhpdG9rb3RvfSBcdTIwMTRcdTIwMTQgJHtkYXRhLmZyb21fd2hvIHx8IFwiXCJ9IFx1MzAwQSR7ZGF0YS5mcm9tfVx1MzAwQmA7XG4gICAgICAgIGNvbnN0IGhpdG9rb3RvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNoaXRva290b190ZXh0XCIpO1xuICAgICAgICBoaXRva290by5pbm5lclRleHQgPSBzdHI7XG4gICAgfSlcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcik7XG5cbiJdLAogICJtYXBwaW5ncyI6ICJNQUVBLFNBQVNBLEdBQVUsQ0FDZixPQUFPLFdBQVdBLEVBQVMsR0FBSSxFQUsvQixJQUFJQyxFQURVLElBQUksS0FERixJQUFJLEtBQUsscUJBQXFCLEVBRzFDQyxFQUFPLEtBQUssTUFBTUQsR0FBWSxHQUFLLEtBQU8sSUFBSyxFQUMvQ0UsRUFBU0YsR0FBWSxHQUFLLEtBQU8sS0FDakNHLEVBQVEsS0FBSyxNQUFNRCxHQUFVLEtBQU8sSUFBSyxFQUN6Q0UsRUFBVUYsR0FBVSxLQUFPLEtBQzNCRyxFQUFVLEtBQUssTUFBTUQsR0FBVyxHQUFLLElBQUssRUFDMUNFLEVBQVVGLEdBQVcsR0FBSyxLQUMxQkcsRUFBVSxLQUFLLE1BQU1ELEVBQVcsR0FBSyxFQUNyQ0UsRUFBUyxTQUFTLGVBQWUsVUFBVSxFQUMvQ0EsRUFBTyxVQUFZLDRFQUNYUCxFQUFPLEdBQU0sSUFBTSxJQUFNQSxFQUFPLFlBQ2hDRSxFQUFRLEdBQU0sSUFBTSxJQUFNQSxFQUFRLFlBQ2xDRSxFQUFVLEdB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RUFBVSxFQUdMQyxFQUFJLEVBQUdBLEVBQUlGLEVBQWEsRUFBRUUsRUFDM0IsS0FBSyxtQkFBbUJoQixFQUFPZ0IsQ0FBQyxDQUFDLEdBQ2pDRCxJQUlKQSxHQUFXRCxJQUNYLEtBQUssU0FBU0QsQ0FBQyxFQUFJLEtBRTNCLENBRUksS0FBSyxTQUFTLE9BQVMsS0FBSyxTQUFTLGFBQWUsS0FBSyxPQUFPLEVBQUksS0FDcEUsS0FBSyxVQUFVLEVBSW5CLHNCQUFzQixLQUFLLE9BQU8sQ0FDdEMsRUFFQSxVQUFXLFNBQVV0QyxFQUFHLENBQ3BCLElBQUlNLEVBQVNQLEVBQVdDLENBQUMsRUFDekIsS0FBSyxPQUFTTSxFQUFPLE1BQ3JCLEtBQUssUUFBVUEsRUFBTyxPQUNsQixLQUFLLFVBQ0wsS0FBSyxRQUFRLE1BQVEsS0FBSyxPQUMxQixLQUFLLFFBQVEsT0FBUyxLQUFLLFFBQ3ZCLEtBQUssV0FDTCxLQUFLLFNBQVMsWUFBYyxLQUFLLFNBQVMsWUFHdEQsRUFFQSxVQUFXLFNBQVVOLEVBQUcsQ0FDcEIsSUFBSU0sRUFBU1AsRUFBV0MsQ0FBQyxFQUN6QixLQUFLLFFBQVVNLEVBQU8sT0FDMUIsQ0FDSixFQUFVUyxDQUNkLENBQUMsRUFHTCxJQUFJLFFBQVEsQ0FDUixZQUFhLEVBQ2IsZUFBZ0IsSUFDcEIsQ0FBQyxFQUlELE1BQU0sNkNBQTZDLEVBQzlDLEtBQU0yQixHQUFhQSxFQUFTLEtBQUssQ0FBQyxFQUNsQyxLQUFNQyxHQUFTLENBQ1osSUFBSUMsRUFBTSxhQUFNRCxFQUFLLFFBQVEsaUJBQU9BLEVBQUssVUFBWSxFQUFFLFVBQUtBLEVBQUssSUFBSSxTQUMvREUsRUFBVyxTQUFTLGNBQWMsZ0JBQWdCLEVBQ3hEQSxFQUFTLFVBQVlELENBQ3pCLENBQUMsRUFDQSxNQUFNLFFBQVEsS0FBSyIsCiAgIm5hbWVzIjogWyJydW50aW1lIiwgInVzZWRUaW1lIiwgImRheXMiLCAibGVhdmVsIiwgImhvdXJzIiwgImxlYXZlbDIiLCAibWludXRlcyIsICJsZWF2ZWwzIiwgInNlY29uZHMiLCAicnVuYm94IiwgIm5hbWUiLCAiZmFjdG9yeSIsICJfdyIsICJfYiIsICJfZCIsICJyYW5kb20iLCAiaW5kZXgiLCAic2NyZWVuSW5mbyIsICJlIiwgIndpZHRoIiwgImhlaWdodCIsICJzY3JvbGx4IiwgInNjcm9sbHkiLCAibW91c2VJbmZvIiwgInNjcmVlbiIsICJtb3VzZXgiLCAibW91c2V5IiwgIlBvaW50IiwgIngiLCAieSIsICJwb2ludCIsICJtaW4iLCAibWF4IiwgIkZhY3RvcnkiLCAib3B0aW9ucyIsICJrZXkiLCAiZGlyIiwgInN0b3AiLCAiaGlkZSIsICJtb3ZleCIsICJtb3ZleSIsICJzdGFydHgiLCAic3RhcnR5IiwgInJpYmJvbiIsICJwb2ludDEiLCAicG9pbnQyIiwgInBvaW50MyIsICJjb2xvciIsICJkZWxheSIsICJzZWN0aW9uIiwgIm1vZCIsICJzIiwgImwiLCAiYyIsICJpIiwgInQiLCAiYSIsICJudW1TZWN0aW9ucyIsICJudW1Eb25lIiwgImIiLCAicmVzcG9uc2UiLCAiZGF0YSIsICJzdHIiLCAiaGl0b2tvdG8iXQp9Cg==
