[{"categories":["学习备忘"],"content":"简单记录一下 redis 安装过程","date":"2022-11-15","objectID":"/redis-install/","tags":["Redis"],"title":"简单记录 Redis 安装","uri":"/redis-install/"},{"categories":["学习备忘"],"content":"Redis 简介 Redis 是什么？ REmote DIctionary Server(Redis) 是一个由 Salvatore Sanfilippo 写的 key-value 存储系统，是跨平台的非关系型数据库。 Redis 是一个开源的使用 ANSI C 语言编写、遵守 BSD 协议、支持网络、可基于内存、分布式、可选持久性的键值对(Key-Value)存储数据库，并提供多种语言的 API。 Redis 通常被称为数据结构服务器，因为值（value）可以是字符串(String)、哈希(Hash)、列表(list)、集合(sets)和有序集合(sorted sets)等类型。 Redis 的特点 性能极高 – Redis 能读的速度是 110000 次/s,写的速度是 81000 次/s。 丰富的数据类型 – Redis 支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。 原子 – Redis 的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过 MULTI 和 EXEC 指令包起来。 丰富的特性 – Redis 还支持 publish/subscribe, 通知, key 过期等等特性。 ","date":"2022-11-15","objectID":"/redis-install/:0:1","tags":["Redis"],"title":"简单记录 Redis 安装","uri":"/redis-install/"},{"categories":["学习备忘"],"content":"Redis 相关资源 Redis 的官网： https://redis.io/ 源码地址： https://redis.io/ Redis 官方不建议在 windows 下使用 Redis，所以官网没有 windows 版本可以下载。虽然有微软维护的版本使用，但这里我是在 CentOS 7 下安装的。 ","date":"2022-11-15","objectID":"/redis-install/:0:2","tags":["Redis"],"title":"简单记录 Redis 安装","uri":"/redis-install/"},{"categories":["学习备忘"],"content":"Redis 安装 Redis 基于 C ,先安装所需要的 gcc 依赖，root 登录 CentOS，安装依赖: yum install -y gcc tcl 发文时候官网最新 7.0.5 版本，–\u003e Download 7.0.5 ，下载后上传放至 CentOS /usr/local/src 目录，解压： tar -zxvf redis-7.0.5.tar.gz 进入redis-7.0.5目录： cd redis-7.0.5 编译： make \u0026\u0026 make install 完成安装，默认的安装路径是在/usr/local/bin目录下，运行： redis-server 安装完成启动 Redis ","date":"2022-11-15","objectID":"/redis-install/:0:3","tags":["Redis"],"title":"简单记录 Redis 安装","uri":"/redis-install/"},{"categories":["学习备忘"],"content":"Redis 配置 当前目录：redis-7.0.5 下，配置文件为 redis.conf。 vi redis.conf 修改这些： 信息 #允许访问的地址，默认是 127.0.0.1，会导致只能在本地访问。修改为 0.0.0.0 则可以在任意 IP 访问，为了方便设置为 0.0.0.0，正式环境请勿这样使用。 bind 0.0.0.0 #去掉保护模式 protected-mode no #守护进程，修改为 yes 后即可后台运行 daemonize yes #设置访问 Redis 密码 pass requirepass pass 修改后 :wq 保存。 ","date":"2022-11-15","objectID":"/redis-install/:0:4","tags":["Redis"],"title":"简单记录 Redis 安装","uri":"/redis-install/"},{"categories":["学习备忘"],"content":"Redis 自启动 vi /etc/systemd/system/redis.service 写入内容如下，注意路径。 [Unit] Description=redis-server After=network.target [Service] Type=forking ExecStart=/usr/local/bin/redis-server /usr/local/src/redis-7.0.5/redis.conf PrivateTmp=true [Install] WantedBy=multi-user.target 重载系统服务： systemctl daemon-reload CentOS 修改防火墙设置，通过 6379 端口： firewall-cmd --zone=public --permanent --add-port=6379/tcp 设置开机启动： systemctl enable redis 可以用下面命令来操作 redis ： systemctl start redis # 启动 systemctl stop redis # 停止 systemctl restart redis # 重启 systemctl status redis # 查看状态 ","date":"2022-11-15","objectID":"/redis-install/:0:5","tags":["Redis"],"title":"简单记录 Redis 安装","uri":"/redis-install/"},{"categories":["学习备忘"],"content":"Redis 可视化客户端 一般用的是 Redis Desktop Manager，但是好像要自己编译。 这里换了一个 Another-Redis-Desktop-Manager，也挺好用的。 下载地址: Another-Redis-Desktop-Manager 最后截个图 ： Another-Redis-Desktop-Manager ","date":"2022-11-15","objectID":"/redis-install/:0:6","tags":["Redis"],"title":"简单记录 Redis 安装","uri":"/redis-install/"},{"categories":["学习备忘"],"content":"简单记录一下 GitHub Action 自动部署 Hugo 到 GitHub Pages","date":"2022-09-29","objectID":"/github-action-auto-build-deploy/","tags":["GitHub Action","Hugo"],"title":"GitHub Action 自动部署 Hugo 到 GitHub Pages","uri":"/github-action-auto-build-deploy/"},{"categories":["学习备忘"],"content":"原因 自从换到 Hugo 以来，都是本地运行 Hugo 命令生成生成静态网页 .public目录，然后推送到 GitHub Pages 项目仓库，感觉每次发布还要切换目录来上一堆 Git 操作： git add . git status git commit -m \"xxx\" git push 略为繁琐，虽然这几行命令可以写个脚本简化一下，但是只推送.public目录没有办法对本地源文件进行备份和版本管理，于是决定把源文件推送到仓库，触发 Github Action 构建生成静态文件。 ","date":"2022-09-29","objectID":"/github-action-auto-build-deploy/:1:0","tags":["GitHub Action","Hugo"],"title":"GitHub Action 自动部署 Hugo 到 GitHub Pages","uri":"/github-action-auto-build-deploy/"},{"categories":["学习备忘"],"content":"配置 GitHub Action 没有在原来项目上新建分支，而是新建了一个仓库用来管理源文件，Github Action 触发后生成静态文件推到原来的 GitHub Pages 项目。在这之前，需要在新建项目仓库设置下验证 key , 具体仓库页面 Settings - secrets - Actions - New Repository secrets 设置一下私钥就好了。 注意 名称注意和下面要设置的 workflows 配置一样，我的为 ACTIONS_DEPLOY_KEY 然后本地 Hugo 博客目录新建.github/workflows下，配置以 .yml 后缀结尾，我的为.github/workflows/deploy.yml，编辑这个配置文件： name: Auto Deploy hugo on: push: workflow_dispatch: schedule: # 定时执行 - cron: \"0 2 * * *\" jobs: Explore-GitHub-Actions: runs-on: ubuntu-latest steps: - name: Check out repository code uses: actions/checkout@v2 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: latest extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }} # secret 中设置好私钥，名称和上面设置的一样 external_repository: xxx/xxx.github.io # Page 仓库地址 publish_branch: master # Page 仓库的分支 publish_dir: ./public # 静态网页路径 commit_message: ${{ github.event.head_commit.message }} on 这里有三种触发方式： 触发方式： push：git push 推送时执行。 workflow_dispatch：项目仓库的 Action 手动执行。 schedule：定时执行。 ","date":"2022-09-29","objectID":"/github-action-auto-build-deploy/:2:0","tags":["GitHub Action","Hugo"],"title":"GitHub Action 自动部署 Hugo 到 GitHub Pages","uri":"/github-action-auto-build-deploy/"},{"categories":["学习备忘"],"content":"执行结果 像平时一样提交源文件仓库的代码推送到 GitHub，就会触发 GitHub Actions 执行生成静态文件推送到 GitHub Pages 项目上了。 详情流程可以到源文件仓库的 actions -- workflows 下查看。 Explore-GitHub-Actions ","date":"2022-09-29","objectID":"/github-action-auto-build-deploy/:3:0","tags":["GitHub Action","Hugo"],"title":"GitHub Action 自动部署 Hugo 到 GitHub Pages","uri":"/github-action-auto-build-deploy/"},{"categories":["学习备忘"],"content":"简单部署脚本 为了方便，几个命令打包个简单部署脚本： #!/bin/bash echo -e \"Deploying...\" git add . git status read -p \"Enter git commit message: \" msg if [ -z $msg ];then msg=\"update $(date +'%F %a %T')\" fi git commit -m \"$msg\" git push 保存为 deploy.sh ，终端切换到博客目录 sh deploy.sh 输入 git- commit 信息即可。 ","date":"2022-09-29","objectID":"/github-action-auto-build-deploy/:4:0","tags":["GitHub Action","Hugo"],"title":"GitHub Action 自动部署 Hugo 到 GitHub Pages","uri":"/github-action-auto-build-deploy/"},{"categories":["生活点滴"],"content":"今天 NAME.COM 发来邮件，提醒我域名该续费了，我才记得这里已经很久很久没有更新了，看了一眼上次最后一次文章日期，居然已经是快是 4 年前了。 这差不多快 4 年的时间里，发生了太多太多的事情，以至于我坐在电脑前，脑中闪过这些年来发生的事情的画面，一时间不知道写些什么。 Time 2019 迷茫了一整年，2020 年和女朋友领了结婚证，2021 年办了婚礼，2022 年奶奶离世，孩子明年即将出生，喜与悲，生与死，在这些年里也算统统经历过。 年纪越大，越相信世界上最永恒的幸福就是平凡，人生中最长久的拥有就是珍惜，特别是近 3 年的疫情下，看过太多太多魔幻新闻，就越珍惜现在这种每天回家开开心心和家人一起吃饭的日子。 这些年工作很忙，休息的时间惰性就上来了，回想一下，似乎也没有怎么进行学习，也没有任何进步，宁愿躺着刷刷手机也不愿意花点时间提升一下自己， 为了避免让自己陷入到这种焦虑的情绪中，开始反思吧，好好调整一下自己的心态，给自己做一点规划，学习、饮食、运动、作息什么都可以，然后慢慢执行，希望能在以后的总结里面，至少能看到有点分量的东西。 那么就从不熬夜开始吧，现在差不多是 23：00，一首歌后就睡吧，祝我好梦吧! ","date":"2022-07-28","objectID":"/long-time-no-update/:0:0","tags":["生活"],"title":"很久没更新了","uri":"/long-time-no-update/"},{"categories":["游戏娱乐"],"content":"淘了一套太豪 PBT 奶酪绿键帽","date":"2018-12-27","objectID":"/taihao-keycaps/","tags":["键帽"],"title":"淘了一套太豪 PBT 奶酪绿键帽","uri":"/taihao-keycaps/"},{"categories":["游戏娱乐"],"content":"起因 3 年前，买了一把 Filco 忍者 87 二代侧刻青轴 键盘，这些年用下来打字真心舒服。发这篇文章的时候看了一下这把键盘的近期价格，好像都没怎么降价，甚至有点小涨，有点惊讶。不过原装键帽是 ABS 材质，长期使用打油是避免不了的。于是想着换一套 PBT 的。 ","date":"2018-12-27","objectID":"/taihao-keycaps/:1:0","tags":["键帽"],"title":"淘了一套太豪 PBT 奶酪绿键帽","uri":"/taihao-keycaps/"},{"categories":["游戏娱乐"],"content":"关于键帽的材质 一般常用的有3种： ABS / PBT / POM 信息 ABS:丙烯腈(A)、丁二烯(B)、苯乙烯(S)三种单体的三元共聚物，比较常见的工程塑料。长期使用后磨损后表面会变得光滑，就是俗称的打油现场。 PBT：聚对苯二甲酸丁二醇酯，质地较为坚硬，耐磨损，相对 ABS 表面有颗粒感，类磨砂的感觉但又不是，说不太清楚。 POM：聚甲醛，质地也较为坚硬及耐磨，但是表面较为光滑，但是又不像 ABS 键帽打油了之后那种油腻的光滑。还是说不太清楚。 一般来说使用 POM 材质的键帽比较少，忽略掉。 ABS 为常用工程塑料，成本较 PBT 低，一般会便宜一点。但是也不是说 PBT 的一定好，原因我也说不清楚，说了半天都说不清楚不是我的问题，而是材质影响最大的手感，众所周知，而对机键盘来说：手感是一门玄学！ 我个人喜好硬一点不油腻的带一点清脆的感觉，所以选择了 PBT。 ","date":"2018-12-27","objectID":"/taihao-keycaps/:2:0","tags":["键帽"],"title":"淘了一套太豪 PBT 奶酪绿键帽","uri":"/taihao-keycaps/"},{"categories":["游戏娱乐"],"content":"平民的选择–太豪 我连入门都不算，各路高级货肯定不看了，就是换套键帽让自己打字舒服一点，再选个配色让自己心情好一点。 于是搜到了 台灣太豪企業股份有限公司 产的键帽，网上风评还不错，官网访问速度实在是太慢，于是转马爸爸家，看了一会，看了一会，PBT 价格都在 120-200之间，价格区间太大是因为键盘布局，61 键，87 键，104键和 108 键，而我的键盘是 87 键的，看了想要的几个配色，87 键的没货，买 104 键的来装剩下几个键帽又没什么用，于是转到某二手鱼搜了一下，刚好有一家和我的键盘是一模一样的，宝强绿（奶酪绿）配色我还很喜欢，相对素雅一点，卖家还是老乡，聊了一会，他就只拆了包装装上用了一小段时间，80 包邮，觉得还可以吧，于是买了。 ","date":"2018-12-27","objectID":"/taihao-keycaps/:3:0","tags":["键帽"],"title":"淘了一套太豪 PBT 奶酪绿键帽","uri":"/taihao-keycaps/"},{"categories":["游戏娱乐"],"content":"太豪奶酪绿 87 键帽 今天下班拿到包裹，打开： 奶酪绿包装 先把我原来的键盘键帽拆下来，顺便清洗一下，实在是有点脏，而且以前抽烟烫坏一个，所以 WSAD 那 4 个蓝色很突兀。 原装键帽 换上宝强绿（奶酪绿）舒服多了。 奶酪绿包装 和3年前刚买键盘的时候做个对比： 奶酪绿包装 3年前 3年后 ","date":"2018-12-27","objectID":"/taihao-keycaps/:4:0","tags":["键帽"],"title":"淘了一套太豪 PBT 奶酪绿键帽","uri":"/taihao-keycaps/"},{"categories":["生活点滴"],"content":"Breo isee 16 倍轻松眼部按摩仪","date":"2018-12-24","objectID":"/breo-isee16/","tags":["眼部按摩仪","倍轻松"],"title":"Breo isee 16 倍轻松眼部按摩仪","uri":"/breo-isee16/"},{"categories":["生活点滴"],"content":"起因 4 年多前做了视力矫正手术后后一直保持比较好的用眼习惯，这些年下来视力也维持得比较好，最近玩手机玩多了，感觉眼睛比较容易累，网上学了一套眼保健操，没事经常按摩一下，感觉还挺不错，就是太麻烦了，网上看到有眼部按摩仪的推荐，于是狗东 429 元下单买了一个。 京东 isee16 ","date":"2018-12-24","objectID":"/breo-isee16/:1:0","tags":["眼部按摩仪","倍轻松"],"title":"Breo isee 16 倍轻松眼部按摩仪","uri":"/breo-isee16/"},{"categories":["生活点滴"],"content":"Breo isee 16 上面是官方页面说的功能介绍： 信息 智能气压：11 处按摩点配合 60Kpa 气动力，对眼周肌肉进行多段仿手按摩，按摩覆盖了:印堂穴明穴、承泣穴、瞳子髎穴鱼腰穴、丝竹三天阳穴等穴位。 恒温热敷：温和的 42℃，像热毛巾一般的温热敷双目舒缓疲劳的眼周肌肉，非常舒适。 微频震动：微微一震很“倾城”，双动力驱动高频震动规律按压眼周 9 处穴位群，在放松享受间让眼睛活力再现。 外放音乐：律动的静心音乐匹配升级设计，在没有束缚感的产品使用状态下，为您打造非常舒适的产品使用体验，让疲劳的您放松下来。 狗东到货拆开： 到货包装 拿女朋友的熊猫玩偶做个模特： 熊猫 熊猫和 isee 16 ","date":"2018-12-24","objectID":"/breo-isee16/:2:0","tags":["眼部按摩仪","倍轻松"],"title":"Breo isee 16 倍轻松眼部按摩仪","uri":"/breo-isee16/"},{"categories":["生活点滴"],"content":"外观及材质 外壳材质应该是 ABS 工程塑料，眼罩部分材质应该是医用 PU 皮，安全卫生上应该没什么问题，鼻翼三角位置卡着也比较合适，后面的皮带可以调节松紧，就是就这一种灰了吧唧的颜色，不太喜欢。 仪器上就两个按钮，一个电源键，一个音乐播放键。，长按电源键开关机常规操作，开机后每按一下电源键切换一种模式。 ","date":"2018-12-24","objectID":"/breo-isee16/:2:1","tags":["眼部按摩仪","倍轻松"],"title":"Breo isee 16 倍轻松眼部按摩仪","uri":"/breo-isee16/"},{"categories":["生活点滴"],"content":"三种模式 按摩仪有 3 种模式： SLEEP / MED / HARD SLEEP：热敷 + 气压，时长 10 分钟，力度稍小，一张一弛的，适合睡前使用。 MED：热敷 + 震动，时长 15 分钟，就是一阵一阵咚咚咚那种震动，太吵了，我不太喜欢，适合看工作眼睛累了抽个 15 分钟使用一下。 HARD：热敷 + 震动 + 气压，力度较大，适合重度用眼后使用，用完酸酸涨涨的非常舒服。 ","date":"2018-12-24","objectID":"/breo-isee16/:2:2","tags":["眼部按摩仪","倍轻松"],"title":"Breo isee 16 倍轻松眼部按摩仪","uri":"/breo-isee16/"},{"categories":["生活点滴"],"content":"音乐播放 那个外放音乐就是流水声、鸟叫、海浪等白噪音播放帮助睡眠而已，基本上没什么用，当然对一个按摩仪来说它也不是重点。 ","date":"2018-12-24","objectID":"/breo-isee16/:2:3","tags":["眼部按摩仪","倍轻松"],"title":"Breo isee 16 倍轻松眼部按摩仪","uri":"/breo-isee16/"},{"categories":["生活点滴"],"content":"电池续航 锂电池，充满电后连续使用 2 小时是没有问题的，当然没人会这样用，按照我的使用频率充满一次可供 4 天正常使用。 ","date":"2018-12-24","objectID":"/breo-isee16/:2:4","tags":["眼部按摩仪","倍轻松"],"title":"Breo isee 16 倍轻松眼部按摩仪","uri":"/breo-isee16/"},{"categories":["生活点滴"],"content":"使用感受 对于我这种手机党，熬夜党来说，总体用了一星期下来感觉还是比较满意的，重量不大，戴在眼睛上不觉得笨重，穴位按摩得也挺到位，好几次戴着按摩太舒服了我就睡着了。 要说缺点吧，我妈说的：电动马达的声音太大了，睡眠模式也吵得不行，不过我这种习惯带耳机睡觉的影响倒不是很大。 完！ ","date":"2018-12-24","objectID":"/breo-isee16/:3:0","tags":["眼部按摩仪","倍轻松"],"title":"Breo isee 16 倍轻松眼部按摩仪","uri":"/breo-isee16/"},{"categories":["学习备忘"],"content":"Ubuntu 18.04 安装宝塔面板遇到问题及启用魔改 BBR","date":"2018-12-20","objectID":"/ubuntu-1804-bbr/","tags":["宝塔","Ubuntu"],"title":"Ubuntu 18.04 安装宝塔面板遇到问题及启用魔改 BBR","uri":"/ubuntu-1804-bbr/"},{"categories":["学习备忘"],"content":"手贱 每隔一段时间就有换 VPS 系统的坏毛病，今天看到搬瓦工后台可以直接安装 Ubuntu 18.04 了，环境管理方面这次直接用面板了，用的是宝塔面板。对于个人使用，我觉得怎么方便怎么来吧，系统的话，如果是生产环境，还是建议 CentOS。 后台安装完成后更新完系统后，安装宝塔面板： wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh \u0026\u0026 sudo bash install.sh ","date":"2018-12-20","objectID":"/ubuntu-1804-bbr/:1:0","tags":["宝塔","Ubuntu"],"title":"Ubuntu 18.04 安装宝塔面板遇到问题及启用魔改 BBR","uri":"/ubuntu-1804-bbr/"},{"categories":["学习备忘"],"content":"报错 1 安装失败，报错： 问题 Pillow installation failed 搜了下大致与 Python 有关，于是直接安装 python-setuptools 工具： apt-get install python-setuptools 完成后再次安装，这次安装成功了，但是状态显示面板一直无法启动。 ","date":"2018-12-20","objectID":"/ubuntu-1804-bbr/:2:0","tags":["宝塔","Ubuntu"],"title":"Ubuntu 18.04 安装宝塔面板遇到问题及启用魔改 BBR","uri":"/ubuntu-1804-bbr/"},{"categories":["学习备忘"],"content":"报错 2 搜了下是 Python 版本问题，我更新后 Python 版本是 3.7，而宝塔是 Python 2 写的，不兼容。 于是移除软连接： rm -rf /usr/bin/python ln -s /usr/bin/python2.7 /usr/bin/python 再次启动面板 service bt restart 看到： Stopping Bt-Tasks... done Stopping Bt-Panel... done Starting Bt-Panel... done Starting Bt-Tasks... done 没问题了！ ","date":"2018-12-20","objectID":"/ubuntu-1804-bbr/:3:0","tags":["宝塔","Ubuntu"],"title":"Ubuntu 18.04 安装宝塔面板遇到问题及启用魔改 BBR","uri":"/ubuntu-1804-bbr/"},{"categories":["学习备忘"],"content":"安装魔改版 BBR Ubuntu 18.04 内核 为 4.15，高于 BBR 内核要求为 4.9 以上，所以不用换内核了。直接使用大佬魔改版本 BBR+BBR魔改+Lotsever(锐速)一键脚本 for Centos/Debian/Ubuntu Ubuntu 18.04 使用下面： wget -N --no-check-certificate \"https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh\" apt install make gcc -y sed -i 's#/usr/bin/gcc-4.9#/usr/bin/gcc#g' '/root/tcp.sh' chmod +x tcp.sh \u0026\u0026 ./tcp.sh 完成后按提示选择就行了，如图： 安装魔改 BBR 安装过程出现下图：选择 NO。 安装过程提示 安装 不可描述软件 之后，喜闻乐见的油管动图测速： 油管水量惊人 油管非高峰期，1440P 下这个速度非常满意了。 ","date":"2018-12-20","objectID":"/ubuntu-1804-bbr/:4:0","tags":["宝塔","Ubuntu"],"title":"Ubuntu 18.04 安装宝塔面板遇到问题及启用魔改 BBR","uri":"/ubuntu-1804-bbr/"},{"categories":["游戏娱乐"],"content":"使用 CSGO Skin Changer 更换 CSGO 枪械皮肤","date":"2018-09-07","objectID":"/csgoskinchanger/","tags":["CSGO"],"title":"使用 CSGO Skin Changer 更换 CSGO 枪械皮肤","uri":"/csgoskinchanger/"},{"categories":["游戏娱乐"],"content":"偶尔打打 CSGO，中老年手残玩家，实在不好意思上各种平台受虐，偶尔开个单机打打 BOT 娱乐一下。 不是深度玩家，没必要氪金买饰品了，但是看着好多枪械皮肤挺好看，于是找到这个小软件替换下皮肤，打 BOT 的时候自娱自乐一下~ ","date":"2018-09-07","objectID":"/csgoskinchanger/:0:0","tags":["CSGO"],"title":"使用 CSGO Skin Changer 更换 CSGO 枪械皮肤","uri":"/csgoskinchanger/"},{"categories":["游戏娱乐"],"content":"CSGO Skin Changer 官网 CS:GO CHANGER 页面是俄语的，点击页面最显眼的按钮就可以下载了。运行下载好的 setup.exe 文件，一路点击就弹出程序界面了： CSGO Skin Changer 界面上使用步骤一目了然，这个软件集成了两个 Skin Changer。 技巧 第一步：选择使用哪一个，建议使用 nSkinz，另外一个 FSkinChanger 我在使用中老出点问题。 第二步：点击 Start 运行游戏，不过建议运行之前修改 CSGO 游戏启动参数，加上关闭 VAC 保护参数 -insecure，还有一个是最好把游戏语言设置为英文　-language english，要是中文的话，进游戏选择枪械皮肤名称会乱码，显示为一堆问号。 我的启动参数为 -console -freq 75 -tickrate 128 -novid -language english，如图： CS:GO 启动选项 技巧 第三步：进入游戏建好房间后，按下　Insert 调出界面： 左边　add 增加替换的枪械，右边选择你喜欢的皮肤就好了，还能加各种贴纸。然后 save 就好了。 CSGO Skin Changer 界面 选了个我最喜欢的 AK 皮肤血腥运动 BloodSport。 AK - BloodSport 不知道用这个会不会封号，反正我只打单机娱乐。 ","date":"2018-09-07","objectID":"/csgoskinchanger/:1:0","tags":["CSGO"],"title":"使用 CSGO Skin Changer 更换 CSGO 枪械皮肤","uri":"/csgoskinchanger/"},{"categories":["乱七八糟"],"content":"购买米其林车载充气泵和伟力通无线胎压监测","date":"2018-05-30","objectID":"/michelin-4389ml-and-victon-t6ls/","tags":["胎压监测"],"title":"购买米其林车载充气泵和伟力通无线胎压监测","uri":"/michelin-4389ml-and-victon-t6ls/"},{"categories":["乱七八糟"],"content":"起因 前段时间晚上开车出去宵夜，回来的路上发现胎压监测报警了，路过洗车店让老板测了下胎压，发现左后轮胎压只有 1.8 bar了，当时天黑看不清有什么东西，也没在意，就直接让老板帮充了气让我能开回来就行了，顺带说一下，除了这个轮胎异常，其他 3 个轮胎胎压太高了，全部是 3.0 bar,全部是出厂时候的胎压，上次首保的时候我就让 4S 店把胎压放低了，估计给忘了，难怪我说怎么老感觉悬挂太硬了，亏我还顶着这么高的胎压跑了这么多次高速，让老板帮我把 4 个轮胎全部调到 2.5 bar，开回来的时候感觉和以前完全是两辆车，舒服太多了，虽然油耗会有所增加，不过无所谓了。 过了 3 天，下班回家路上胎压监测又报警了，估计还是那个轮胎，唉，肯定是扎胎了，这里鄙视一下马自达，都顶配了还不给我个显示哪个轮胎胎压不正常的胎压监测。找了本地一家补胎店，和老板聊了一下发现还是老乡，他测胎压的时候发现除了左后轮，右后轮也不正常，拆下来看，左后轮一颗稍大钉子，右后轮一颗小的，小钉子扎得不深，漏气慢，所以上次在洗车店测的时候没感觉。漏了 3 天才低到报警，还不算严重，老乡手挺快，15分钟就补好了，没用火补，蘑菇钉呢我觉得这一点点也没必要，用的他推荐的自粘型补片，据说对付这种轮胎小伤比较好。 ","date":"2018-05-30","objectID":"/michelin-4389ml-and-victon-t6ls/:1:0","tags":["胎压监测"],"title":"购买米其林车载充气泵和伟力通无线胎压监测","uri":"/michelin-4389ml-and-victon-t6ls/"},{"categories":["乱七八糟"],"content":"考虑 1 经过这次，觉得自己配个测胎压的工具还是有必要的，本来想买个60多块数字显示的，跑高速之前测一下就行，后来想想，要是哪天又被扎了我光知道不正常有个毛用，还不是得找充气的地方，后备箱常备一个充气泵还是有点必要的，虽然一年估计都用不到一次，但真需要的时候一次就够本了。脚踩充气泵肯定不考虑了，因为使用的时候那个场景看起来真的好傻，还是车载接点烟器那种方便省心省力，于是京东上翻了一下，找到这货： ","date":"2018-05-30","objectID":"/michelin-4389ml-and-victon-t6ls/:2:0","tags":["胎压监测"],"title":"购买米其林车载充气泵和伟力通无线胎压监测","uri":"/michelin-4389ml-and-victon-t6ls/"},{"categories":["乱七八糟"],"content":"MICHELIN 米其林 充气泵 4389 ML 京东商品截图 米胖子家的，应该还可以，可以预设胎压自动充停还是很方便的。等了2天，到货了，外包装，使用 12V 电源： 外包装 全部配件，说明书、保修卡、保险丝，保险丝站在盒子上面的，注意看清楚别跟着盒子一起扔了 全家福 正面： 正面 背面照，背面的小盒子里面还有其他的充气头，用来充球类或者自行车、皮筏艇之类的，对我来说没什么卵用： 背面 ","date":"2018-05-30","objectID":"/michelin-4389ml-and-victon-t6ls/:3:0","tags":["胎压监测"],"title":"购买米其林车载充气泵和伟力通无线胎压监测","uri":"/michelin-4389ml-and-victon-t6ls/"},{"categories":["乱七八糟"],"content":"考虑 2 现在能自己充气了，还有个问题，前面说的马自达的坑，感觉还是需要能实时显示每一个轮胎的胎压值比较好，这一类产品一般分内置和外置两种，两者区别如图： 内置外置区别 外置的安装方便，数据不如内置准，不需要做动平衡（这里提下，那个感应器有 9 克重，按实际理论应该要做动平衡，不过就多一点点，不做也可以，看个人吧），还有外置的感应器容易丢，虽然这年头没人会偷这个，不过熊孩子手贱是很有可能的。 内置的显示数值应该比较准，但需要拆轮胎，还要做动平衡。 我对显示数值精准度要求不是很高，差不多就行，主要是嫌拆轮胎麻烦，所以这里买的是外置的，刚好在什么值得买上看到伟力通京东专供这款在搞活动，所以就买了下面这款，也没太纠结。 ","date":"2018-05-30","objectID":"/michelin-4389ml-and-victon-t6ls/:4:0","tags":["胎压监测"],"title":"购买米其林车载充气泵和伟力通无线胎压监测","uri":"/michelin-4389ml-and-victon-t6ls/"},{"categories":["乱七八糟"],"content":"伟力通太阳能胎压监测无线外置 T6SL 外置无线 到货有几天了，这这段时间一直下雨，没心思弄，先扔几个图： 包装盒子 背面 全部 懒得写了，哪天装上了再说，先这样吧。 更新一下： 看着外面不下雨了，跑到老房子那边安装了一下，先用带数显的充气泵测下胎压，全部是 2.5 bar，不用充气了。那么直接安装胎压监测器吧。 建议先打开胎压监测器，每装一个就看看有没有显示，要不后面没显示还得重新拆下来一遍。 先扭下轮胎螺帽，先顺时针扭入那个防盗垫螺环，别扭太死了，等下还要反方向扭回来，然后顺时针扭入感应器，注意每个感应器对应的轮胎，别安错了。 然后把防盗螺环片用手逆时针扭回来，手扭紧后，再用那个专门的小扳手再扭紧一点，这个小扳手别弄丢了，以后拆下来需要用到，没这个扳手很难拆下来。 安装中 4 个轮胎一起完成后，和充气泵合个影： 合影 最后胎压监测显示器在车上找个位置放就可以了，背面带 3M 胶的，想粘哪里粘哪里。我不喜欢粘在车上，就直接扔在挡把前面的储物槽了，一般也不用总是盯着看，偶尔瞄一眼就可以了。 显示器正上面是太阳能板，说明书上说晴天 2 天充满，阴天 1 周充满，要是临时没电了，还有个 usb 充电口，不过没有配数据线，看了一下，就是大多数安卓手机数据线插口，晚上回家拿一根扔在车上备用。 至于感应器的电池，用的是常见型号的纽扣电池，按照它说明书说的功率，保守估计能用 2 年吧，足够了，估计到时候这货坏了电池电量都没用完。 最后，这货显示得还挺准，和我那个充气泵显示得数值一样，都是 2.5 bar，四轮胎压显示一样看着真舒服~ 4轮胎压 ","date":"2018-05-30","objectID":"/michelin-4389ml-and-victon-t6ls/:5:0","tags":["胎压监测"],"title":"购买米其林车载充气泵和伟力通无线胎压监测","uri":"/michelin-4389ml-and-victon-t6ls/"},{"categories":["乱七八糟"],"content":"京东回收掉使用了 5 年的 Y480","date":"2018-05-29","objectID":"/bye-y480/","tags":["笔记本电脑"],"title":"京东回收掉使用了 5 年的 Y480","uri":"/bye-y480/"},{"categories":["乱七八糟"],"content":"前段时间买了 惠普 (HP) 游戏本暗影精灵 3 Plus之后，我用了 5 年的老笔记本联想 Y480 终于退役了。 这台笔记本是刚工作的时候买来打游戏的，i5 酷睿 3 代，NVIDIA GeForce GT 650M 独立显卡＋Intel GMA HD 4000 集成显卡，内存我自己加到 8 G，硬盘原来是 1 TB机械硬盘，我自己后来加了一块 120G 的 SSD 做系统盘，配置在当时还可以，玩当时大部分非硬件杀手的游戏都还凑合，除了用料看起来有点搓，整体做工还算不错，这几年用它玩游戏，刷美剧，挂机下载什么的，本身我没有关机的习惯，随开随用，保养方面就连简单的拆盖清灰我也从来没做过，能坚挺这 5 年而且从来没出现过什么问题我也是挺惊讶的，本来想扔在家里做个下载机什么的，但是扔了 3 个月好像也没怎么用上过，还是算了，直接卖掉算了。 本来想挂在闲鱼上看看，后来嫌麻烦直接京东拍拍回收填了一下货物信息，直接卖了，估价 995，我估计到最后就 700 多吧，可能还要少，无所谓，放在家里也是烂掉。 回收报价 卖之前，清除硬盘数据，我没什么特别隐私的东西在硬盘上，就直接把硬盘格式化，然后擦除分区一次就好了，毕竟老机器了，做擦除分区一次居然花了 2 个多小时，一边擦除变拍个照片留个念吧。 再见，Y480 半夜填提交的单子，今天下午京东就上们来拿货了，准备好身份证让小哥核对一下就可以了。 就这样，等到手多少钱再更新一下。 2018.11.05 更新： 过了这么久才记得没补。。。实收 750 元。 ","date":"2018-05-29","objectID":"/bye-y480/:0:0","tags":["笔记本电脑"],"title":"京东回收掉使用了 5 年的 Y480","uri":"/bye-y480/"},{"categories":["乱七八糟"],"content":"使用 Python 爬虫自动登陆京东抢购华为 P20 Pro 手机","date":"2018-05-08","objectID":"/jd-autobuy/","tags":["华为 P20 Pro","Python"],"title":"使用 Python 爬虫自动登陆京东抢购华为 P20 Pro 手机","uri":"/jd-autobuy/"},{"categories":["乱七八糟"],"content":"原因 目前使用的 iPhone 6s plus 慢慢的有点卡了，低电量降频的时候更加严重，升级到 ios 11.3.1 后不强制降频了，不卡了，但是本来掉得快的电量掉得更快了，我是不习惯有空就插着充电的那种，所以经常临时出门发现电量少点可怜了，充又来不及，挺尴尬的。 想着换一块电池满血复活，也不贵，还上门安装，挺好的，但是我妈前两年买的手机也是卡到不能正常使用了，她对手机性能和电量没什么需求，就想着把 6 sp 给她用吧，我自己再买一个。 苹果这些年尽出水桶机，这次考虑换到安卓阵营了，试了下朋友的华为 mate 10 pro，感觉这几年国产安卓手机并不像前几年说的用久必卡，软件生态虽然没有苹果好，但是我自己又不爱折腾了，常用的软件就那么几个，差不多就行，在翻阅了这个知乎问答：从 iPhone 更换成 Android 手机之后，你有怎样的不同体验？后，觉得可以换了。 ","date":"2018-05-08","objectID":"/jd-autobuy/:1:0","tags":["华为 P20 Pro","Python"],"title":"使用 Python 爬虫自动登陆京东抢购华为 P20 Pro 手机","uri":"/jd-autobuy/"},{"categories":["乱七八糟"],"content":"购买问题 前面试过华为 mate 10 pro，感觉还行，刚好出了华为新旗舰 P20 pro,看着挺不错，据说手机拍照全球第一??? 决定了就上华为官方商场一看，貌似还要显示抢购，刚好时间点对着上，我就试了一下，抢购个毛啊，一到点瞬间就没了，一直显示排队中，饥饿营销??? 那么上京东上看一下啊，也是显示没货，每晚 8 点也有个抢购时间，我试了下，是有货的，但基本是黑色和蓝色，两种渐变颜色极光色和樱粉金基本瞬间光，我有一天晚上能加上购物车，一点提交订单就显示没了。 那至少还有戏吧，不像华为官方商场那么坑。 ","date":"2018-05-08","objectID":"/jd-autobuy/:2:0","tags":["华为 P20 Pro","Python"],"title":"使用 Python 爬虫自动登陆京东抢购华为 P20 Pro 手机","uri":"/jd-autobuy/"},{"categories":["乱七八糟"],"content":"JD_AutoBuy 最反感这种抢购的，没时间守着抢，都不打算买了，但是还是忍不住，于是网上找了 Python 爬虫，项目地址在这里：JD_AutoBuy - Python爬虫，京东自动登录，在线抢购商品，看了下说明，使用环境 Python 2.7。还需要两个库： 信息 Requests: 简单好用，功能强大的Http请求库 beautifulsoup4: HTML文档格式化及便签选择器 刚好我使用的 VPS 系统是 Debian ，自带的 Python 版本就是 2.7（本来想着在本地电脑上运行的，但是我没事不可能一直开着电脑挂着，还是在服务器上运行吧）。 ","date":"2018-05-08","objectID":"/jd-autobuy/:3:0","tags":["华为 P20 Pro","Python"],"title":"使用 Python 爬虫自动登陆京东抢购华为 P20 Pro 手机","uri":"/jd-autobuy/"},{"categories":["乱七八糟"],"content":"安装脚本 登陆 VPS，先查看 Python 版本： python -v 如果是 Python 2.7，下一步，如果是 Python 3，换成 2.7 ，这个脚本在 Python 3 会出错。 然后安装上面说的两个库： pip install Requests pip install beautifulsoup4 完成后先克隆一份脚本 git clone https://github.com/Adyzng/jd-autobuy.git 进入脚本目录： cd jd-autobuy/ 到这里，先别急着运行脚本，先看看脚本配置参数。 ","date":"2018-05-08","objectID":"/jd-autobuy/:3:1","tags":["华为 P20 Pro","Python"],"title":"使用 Python 爬虫自动登陆京东抢购华为 P20 Pro 手机","uri":"/jd-autobuy/"},{"categories":["乱七八糟"],"content":"脚本参数 先看看使用帮助，运行： python scraper-jd.py -h 显示： usage: scraper-jd.py [-h] [-u USERNAME] [-p PASSWORD] [-g GOOD] [-c COUNT] [-w WAIT] [-f] [-s] Simulate to login Jing Dong, and buy sepecified good optional arguments: -h, --help show this help message and exit // 使用帮助 -u USERNAME, --username USERNAME Jing Dong login user name // 京东账号 -p PASSWORD, --password PASSWORD Jing Dong login user password // 京东密码 -g GOOD, --good GOOD Jing Dong good ID // 京东商品编号 -c COUNT, --count COUNT The count to buy // 购买数量 -w WAIT, --wait WAIT Flush time interval, unit MS // 间隔时间 单位：毫秒 -f, --flush Continue flash if good out of stock // 如果商品缺货就一直刷直至成功 -s, --submit Submit the order to Jing Dong // 有货添加到购物车并下订单 这个脚本写了两个版本，一个 Python 版本，还有一个 golang 语言版本, go 语言版本有个区域设置的参数，这个 Python 版本也有的，只不过没有在使用帮助上说明出来。 -a, -area string ship location string, default to Beijing (default \"1_72_2799_0\") // 设置商品区域 默认北京地区 首先：-u 和 -p 这两个参数基本用不到，因为这个脚本支持扫码登陆，不用去填账号和密码。 然后： -g 参数后加的是商品 id，就是商品页面浏览器地址栏那串数字，比如我要抢的华为 P20 Pro 6GB + 128 G 极光色 的 id 为 6946625,据说购物商城比较鸡贼，这个 id 会变，防止软件刷自动抢购，不过我看了京东没变过。 再然后：-c 这个没什么好说的，购买数量，买一件后面加 1，买两件加 2。 再来： -w 间隔时间，这个用它默认的时间就好了。 再继续， -f -s 不用说了，不断刷直到成功下单。 最后说说这个 -a 设置商品区域（默认北京地区），这个值在怎么填，可以先选择配送地，比如我的： 京东配送地址截图 用 Chrome 浏览器的话，就可以直接 F12 页面检查，先切到 Network,然后在过滤器上输入 stock,最后得出的 area 后面的那串数字就是了,如图： 京东配送地址截图 这样，我们所需要的参数都有了，完整举个例子： 比如我要抢购 数量为 1 台的 华为 P20 Pro 6GB + 128 G 极光色，他的商品id 为 6946625，配送区域广西柳州市XXXXXX。区域 id 为 20_1720_3659_0 ，没货刷新直至有货，有货之后添到购物车并且提交。那么可以这样运行脚本： python scraper-jd.py -c 1 -g 6946625 -a 20_1720_3659_0 -f -s 然后到这里还是不急着运行脚本，最后做点准备。 ","date":"2018-05-08","objectID":"/jd-autobuy/:3:2","tags":["华为 P20 Pro","Python"],"title":"使用 Python 爬虫自动登陆京东抢购华为 P20 Pro 手机","uri":"/jd-autobuy/"},{"categories":["乱七八糟"],"content":"运行前的准备 最后运行脚本之前，首先要保证这个抢购脚本一直在运行，不能我一断开 SSH 连接它就跟着终止了。 那么有这几种方法：具体可以看这里：Linux 技巧：让进程在后台可靠运行的几种方法 我这里用的是 screen ，先安装 apt-get install screen 然后 screen -S jd_autobuy // 名字随便起，我直接用脚本名字 jd_autobuy 了。 运行脚本： python scraper-jd.py -c 1 -g 6946625 -a 20_1720_3659_0 -f -s 没什么问题的话就会提示你扫码登陆，生成的二维码在脚本同一目录 qr.png，你可以下载到本地扫码，这里有点奇怪，我用京东手机 app 扫，没反应，只好用微信扫码，然后提示用京东手机 app 打开，再在手机上点确认登陆就可以了，有点奇葩。 遇到的2个问题： 问题 有时候第一次登陆会要验证，把终端验证那一串地址在浏览器打开，接受个手机验证码就可以了。 我试了买了一个胎压计，然后再买其他商品就添加不上购物车或者下不了订单了。只能没买完一个商品，把脚本同级目录下的 Cookie 文件删除，然后重新扫码登陆一遍就可以了。 还有，开了 screen 后就可以断开 ssh 连接了，下一次登陆终端，想恢复到脚本界面，用： screen -r jd_autobuy 附 screen 常用命令： screen -S yourname -\u003e 新建一个叫yourname的session screen -ls -\u003e 列出当前所有的session screen -r yourname -\u003e 回到yourname这个session screen -d yourname -\u003e 远程detach某个session screen -d -r yourname -\u003e 结束当前session并回到yourname这个session ","date":"2018-05-08","objectID":"/jd-autobuy/:3:3","tags":["华为 P20 Pro","Python"],"title":"使用 Python 爬虫自动登陆京东抢购华为 P20 Pro 手机","uri":"/jd-autobuy/"},{"categories":["乱七八糟"],"content":"运行界面 最后最后，动图流： 脚本运行界面 2018.05.09 更新: 一觉醒来可还是没有刷到，TMD 刷不到不买了，给惯的！ 2018.05.10 更新：晚上和朋友在吃烧烤，突然手机京东通知来了，已提交到订单： 刷到订单了 ","date":"2018-05-08","objectID":"/jd-autobuy/:4:0","tags":["华为 P20 Pro","Python"],"title":"使用 Python 爬虫自动登陆京东抢购华为 P20 Pro 手机","uri":"/jd-autobuy/"},{"categories":["乱七八糟"],"content":"到货 2018.05.14 更新： 到货了： 到货了 晚上吃宵夜，随便拍了一张，我真的不会拍照，原谅选了这么一个地方，不过照片的色调和拍摄夜景能力真的非常不错的。 随拍 ","date":"2018-05-08","objectID":"/jd-autobuy/:5:0","tags":["华为 P20 Pro","Python"],"title":"使用 Python 爬虫自动登陆京东抢购华为 P20 Pro 手机","uri":"/jd-autobuy/"},{"categories":["生活点滴"],"content":"摘橘子","date":"2018-01-14","objectID":"/pick-tangerines/","tags":["橘子"],"title":"摘橘子","uri":"/pick-tangerines/"},{"categories":["生活点滴"],"content":"终于熬过了一年中最忙的日子，刚才今天休息，本来想宅一天看看美剧。 刚好爸妈都过来我住的这边看看，突然想想自己好像极少和父母一起出去玩过，本来一起打算到附近县城寺庙上上香之类的，但是外面又下了点小雨，想想还是算了，我爸提议到柳城姑父家摘橘子，打个电话过去，刚好是这两天摘橘子卖，而且那边不但不下雨，天气也还不错。决定出发。 午饭后，爸妈还有女朋友一行四人驾车沿三柳高速一路狂奔，1 小时后到达高速洛满东出口，在出口等了一会，姑父就来接了，直接跟车穿过长长的一片甘蔗地，到了果园。 站在山坡上看，这只是一个角落。 橘子园 走近，并列好整齐： 橘子园 近看，今年结了好多果子。 橘子 再近一点： 橘子 开摘，专用小剪刀剪剪剪： 摘橘子 摘橘子 装箱： 橘子 只是一小部分，又跑回去拿了两个大塑料袋才装完。回到姑父家吃完饭，发现后院的种的杨桃和木瓜不错,又爬上去摘了一大袋。 杨桃树 最后装车回家~ 后备箱 晚饭后，回家，好累，随便贴到这吧，今天大家都很开心，休息的时候多陪陪父母。 ","date":"2018-01-14","objectID":"/pick-tangerines/:0:0","tags":["橘子"],"title":"摘橘子","uri":"/pick-tangerines/"},{"categories":["游戏娱乐"],"content":"惠普 (HP) 游戏本暗影精灵 3 Plus","date":"2018-01-04","objectID":"/new-omen-iii/","tags":["暗影精灵 3"],"title":"惠普 (HP) 游戏本暗影精灵 3 Plus","uri":"/new-omen-iii/"},{"categories":["游戏娱乐"],"content":"需求 原来沉迷手机吃鸡，买了飞智黑武士 X8 Pro 手柄玩，虽然体验比起用触摸屏玩舒服很多，但是毕竟手机版简化得太厉害了，没 PC 上玩得过瘾，刚好这段晚上有时间了，还是在电脑上玩吧，但是我原来的电脑是 4 年前买的联想 Y480。加装过内存和 SSD，日常浏览网页和看点电视剧我是真心觉得还可以再战一年，但吃鸡肯定是不行了，想想这些年虽然电脑使用频率降低了，但是有时候硬需求还是在的（估计还是想玩游戏…），还是买一台游戏本吧，性能高一点，体验好一点。台式机我不考虑，因为每个月我都一段时间不在家里住的，台式机扛不动 ~ ","date":"2018-01-04","objectID":"/new-omen-iii/:1:0","tags":["暗影精灵 3"],"title":"惠普 (HP) 游戏本暗影精灵 3 Plus","uri":"/new-omen-iii/"},{"categories":["游戏娱乐"],"content":"品牌挑选 这个最纠结了，特别对我这种有选择困难症的人，我看了几个，简单说下个人观点 (勿喷）： ","date":"2018-01-04","objectID":"/new-omen-iii/:2:0","tags":["暗影精灵 3"],"title":"惠普 (HP) 游戏本暗影精灵 3 Plus","uri":"/new-omen-iii/"},{"categories":["游戏娱乐"],"content":"戴尔外星人 (Alienware) 优点：外观霸气，颜值和杀马特灯光碾压众多竞品，散热不错，售后小完美，缺点：配置方面有点卖情怀了，对比同价格牌子性价比低。 ","date":"2018-01-04","objectID":"/new-omen-iii/:2:1","tags":["暗影精灵 3"],"title":"惠普 (HP) 游戏本暗影精灵 3 Plus","uri":"/new-omen-iii/"},{"categories":["游戏娱乐"],"content":"华硕败家之眼 (ROG) 优点：几乎没缺点。缺点：贵。 ","date":"2018-01-04","objectID":"/new-omen-iii/:2:2","tags":["暗影精灵 3"],"title":"惠普 (HP) 游戏本暗影精灵 3 Plus","uri":"/new-omen-iii/"},{"categories":["游戏娱乐"],"content":"神船 (Hasee) 优点：蓝天系加持，性价比超高。缺点:傻大黑粗，做工凑合。 ","date":"2018-01-04","objectID":"/new-omen-iii/:2:3","tags":["暗影精灵 3"],"title":"惠普 (HP) 游戏本暗影精灵 3 Plus","uri":"/new-omen-iii/"},{"categories":["游戏娱乐"],"content":"微星 (MSI)MSI 优点：外观配置售后都还不错。缺点：塞这么多铜管上去散热还是搓。 ","date":"2018-01-04","objectID":"/new-omen-iii/:2:4","tags":["暗影精灵 3"],"title":"惠普 (HP) 游戏本暗影精灵 3 Plus","uri":"/new-omen-iii/"},{"categories":["游戏娱乐"],"content":"未来人类 (TerransForce) 优点：蓝天系加持，性价比超高。缺点：坏了你要自己修。 ","date":"2018-01-04","objectID":"/new-omen-iii/:2:5","tags":["暗影精灵 3"],"title":"惠普 (HP) 游戏本暗影精灵 3 Plus","uri":"/new-omen-iii/"},{"categories":["游戏娱乐"],"content":"联想 (Lenovo) 号称美帝良心，如果海淘的话会好一点，主要扫了一眼它配置不适合我，也没多看。 ","date":"2018-01-04","objectID":"/new-omen-iii/:2:6","tags":["暗影精灵 3"],"title":"惠普 (HP) 游戏本暗影精灵 3 Plus","uri":"/new-omen-iii/"},{"categories":["游戏娱乐"],"content":"机械革命 (Mechrevo) 优点：性价比不错，但毕竟不是一线厂商，细想一下还是算了。 ","date":"2018-01-04","objectID":"/new-omen-iii/:2:7","tags":["暗影精灵 3"],"title":"惠普 (HP) 游戏本暗影精灵 3 Plus","uri":"/new-omen-iii/"},{"categories":["游戏娱乐"],"content":"惠普 (HP) 优点：一线牌子，外观，配置，售后都还行，缺点：“铁板熊掌普”称号不是白来的。 纠结了半天，选得烦了最后终于选了惠普游戏本 (omen) 暗影精灵系列，我第一次看到这个红黑配色和巫毒 LOGO 就我把它的散热忘了，其中我买的这款暗影精灵 3 号称 2017 下半年最佳理财数码产品，原因可以看这里，买晚了买晚了~ ","date":"2018-01-04","objectID":"/new-omen-iii/:2:8","tags":["暗影精灵 3"],"title":"惠普 (HP) 游戏本暗影精灵 3 Plus","uri":"/new-omen-iii/"},{"categories":["游戏娱乐"],"content":"购买 京东上看了一下，本来想买 15 寸的，携带方便一点，后来想想游戏本轻也轻不到哪里去，我也不是需要频繁搬动的，上 17 寸吧，到时候买个大点的电脑包就可以了。 最终买的是这货： 京东- 货物图片 和我需求符合，17 寸大屏虽然是不 144 Hz的，毕竟又不是专门买来玩 FPS 游戏的，GTX 1070 虽然是移动框架，但估计也比GTX 1060 强点吧。 配置单： 主要参数 值 电脑型号 OMEN by HP Laptop 17-an0xx笔记本 处理器 Intel(R) Core(TM) i7-7700HQ CPU @ 2.80GHz 内存容量 16.0GB 显卡 NVIDIA GeForce GTX 1070 显存容量 独立8GB 显存类型 GDDR5 硬盘容量 固态硬盘 / KXG50ZNV256G TOSHIBA (256GB) + 机械硬盘 HGST HTS721010A9E630 (1.0TB) 7200 转/分钟 主板 8393 (40.21) 网卡 1、Realtek Gaming GBE Family Controller 2、Realtek RTL8822BE 802.11ac PCIe Adapter 声卡 1、USB Audio Class 1.0 and 2.0 Device Driver 2、Realtek High Definition Audio 3、NVIDIA Virtual Audio Device (Wave Extensible) (WDM) 显示器 17.3 英寸 AUO:9d14 分辨率:1920x1080 G-sync 120Hz FHD 预装操作系统 Windows 10 家庭版 64位 领了优惠券后 ¥10999 到手。 ","date":"2018-01-04","objectID":"/new-omen-iii/:3:0","tags":["暗影精灵 3"],"title":"惠普 (HP) 游戏本暗影精灵 3 Plus","uri":"/new-omen-iii/"},{"categories":["游戏娱乐"],"content":"到货简单拆箱: 过了 2 天，收到京东包裹： 京东包裹 拆开包装： 京东包裹 包装盒子和配件，砖头一样的电源： 京东包裹 京东包裹 机身： 巫毒 LOGO 我很喜欢，有中国京剧脸谱的味道。 京东包裹 开机~ 京东包裹 懒了，不想写了。。具体跑分什么的肯定不搞了，意义不大，只能说用着挺爽，吃鸡全特效偶尔掉帧，高画质流畅丝滑。 散热绝对是铁板熊掌，玩了一小时后就飙到 80 度，看来还要加个带风扇的底座。 然而，吃鸡是不可能吃鸡的，这辈子都不可能吃鸡的。 ","date":"2018-01-04","objectID":"/new-omen-iii/:4:0","tags":["暗影精灵 3"],"title":"惠普 (HP) 游戏本暗影精灵 3 Plus","uri":"/new-omen-iii/"},{"categories":["游戏娱乐"],"content":"手机“吃鸡”神器 - 飞智黑武士 X8 Pro","date":"2017-11-26","objectID":"/flydigi-x8-pro/","tags":["手柄"],"title":"手机“吃鸡”神器 - 飞智黑武士 X8 Pro","uri":"/flydigi-x8-pro/"},{"categories":["游戏娱乐"],"content":"序 “大吉大利，晚上吃鸡！” 《绝地求生：大逃杀》这款现象级游戏的火爆应该不用多说了，今年 3 月发布以来，这款大逃杀游戏迅速冲到 STEAM 第一。各大主播平台也是一片“吃鸡”，各类“吃鸡”游戏流行语也刷爆朋友圈和微博。 然而我一次都没有玩过，主要是 PC 平台要求配置太高，我的笔记本玩不了，近些年对电脑需求没那么高，不想为了个游戏升级电脑，还有一个方面，现在上班时间太忙了，没那么多时间玩游戏，前段时间事我就看看各种“吃鸡”直播，看着过过干瘾。 还好，近月来各类“吃鸡”手游的出现可以弥补上面说的问题，虽然手游吃鸡对比 PC 平台肯定是个极度简化的低配版，但是对我这样我对游戏画面和可玩性要求没有那么高，只需要偶尔利用空余时间和朋友娱乐一下的人来说，是个不错的选择，于是最近都在手机上玩网易推出的类吃鸡游戏《荒野行动》。 ","date":"2017-11-26","objectID":"/flydigi-x8-pro/:1:0","tags":["手柄"],"title":"手机“吃鸡”神器 - 飞智黑武士 X8 Pro","uri":"/flydigi-x8-pro/"},{"categories":["游戏娱乐"],"content":"手机“吃鸡”弊端 众所周知：大多时候你在手机上玩 FPS 游戏的体验不是在吃鸡，而是在吃屎。 触屏操作控制太恶心了，双手会遮挡屏幕体积，影响视野，双手操作，左手控制人物，右手控制视野准星，那么射击键呢？腾出手来按射击键意味着你得人物固定或者视野固定，玩过的人都知道多恶心。别和我说陀螺仪和 3D Touch来弥补，体验极差，真的。 ","date":"2017-11-26","objectID":"/flydigi-x8-pro/:2:0","tags":["手柄"],"title":"手机“吃鸡”神器 - 飞智黑武士 X8 Pro","uri":"/flydigi-x8-pro/"},{"categories":["游戏娱乐"],"content":"飞智黑武士 X8 Pro 鉴于每一把都落地成盒或者满身顶配装备被人乱枪爆头，我看过各个主播直播之后发现有些人用手柄玩的，马上搜索了一下，找到这款游戏手柄：飞智黑武士 X8 Pro，先看个视频： {% youtube E7EREIWA6x4 %} 感觉还不错，可能遥控控制视野还需要习惯一下，应该问题不大，还有一种是外接键盘和鼠标那种枪座，那种虽然操作更简单直观，但是不方便携带，我还是用这种手柄好了，扔在包里，无聊的时候拿出来玩两盘。 ","date":"2017-11-26","objectID":"/flydigi-x8-pro/:3:0","tags":["手柄"],"title":"手机“吃鸡”神器 - 飞智黑武士 X8 Pro","uri":"/flydigi-x8-pro/"},{"categories":["游戏娱乐"],"content":"开箱 下单后两天到了，这次 EMS 吃错药了有点快。。。 首先是包装盒，没什么好说的： 包装盒 拆开之后： 拆开 手柄和配件： 手柄和配件 全部东西：包括手柄、说明书、保修书、飞智小游、接收器、充电线 全家福 简单说下：手柄握柄两侧加了纹理设计，防滑，这一点挺好的。 ","date":"2017-11-26","objectID":"/flydigi-x8-pro/:3:1","tags":["手柄"],"title":"手机“吃鸡”神器 - 飞智黑武士 X8 Pro","uri":"/flydigi-x8-pro/"},{"categories":["游戏娱乐"],"content":"安装激活 没什么好说的，我用的是 iPhone 6 plus，傻瓜流程安装，安卓好像要激活映射。 ","date":"2017-11-26","objectID":"/flydigi-x8-pro/:3:2","tags":["手柄"],"title":"手机“吃鸡”神器 - 飞智黑武士 X8 Pro","uri":"/flydigi-x8-pro/"},{"categories":["游戏娱乐"],"content":"愉快吃鸡 吃鸡中 手柄操作还是有点不习惯，熟悉中，不过比用手机玩强多了，导入了一个主播配置，貌似可以神挡杀神，佛挡杀佛，然而： 吃鸡这种事，不存在的！ ","date":"2017-11-26","objectID":"/flydigi-x8-pro/:3:3","tags":["手柄"],"title":"手机“吃鸡”神器 - 飞智黑武士 X8 Pro","uri":"/flydigi-x8-pro/"},{"categories":["游戏娱乐"],"content":"使用 Dota Mods Installer 替换 Dota2 模型","date":"2017-08-24","objectID":"/dota-mods-installer/","tags":["Dota2"],"title":"使用 Dota Mods Installer 替换 Dota2 模型","uri":"/dota-mods-installer/"},{"categories":["游戏娱乐"],"content":"ti7 TI7 刚落下帷幕，恭喜 Team Liquid 获得冠军，虽然中国队还是没能打破奇数年魔咒夺冠，但是包揽二三四五名成绩也挺不错的。希望 B 神能再战一年，kky 都坚持到夺冠了，你没理由放弃的 。 我已经很久没玩过游戏了，只是单纯的喜欢看比赛，有什么重要的赛事偶尔也熬个夜，本来以为就我是这样，有次和朋友在群里聊天，没想到大部分和我一样年纪的都这样，早就不玩了，只是喜欢看，也说不清为什么。 今天心血来潮，点开客户端，打个 AI 玩玩，默认的英雄模型和特效太搓了，又不常玩，肯定不氪金了，于是网上找了下 Mods，替换一下。 用的是 Dota Mods Installer，使用了一下，真的如官方所说： Manage your DOTA Mods easily. 使用方法真的很简单，下载安装后发现还支持中文。打开它会自动读取 Steam 和 Dota2 文件路径，只需要选择你想要的模型保存就好了。 dota-mods-installer 比如先来个影魔至宝： dota-mods-installer 保存后进入游戏，如图：看着舒服多了。 sf 明天上班，早点睡~ ","date":"2017-08-24","objectID":"/dota-mods-installer/:0:0","tags":["Dota2"],"title":"使用 Dota Mods Installer 替换 Dota2 模型","uri":"/dota-mods-installer/"},{"categories":["乱七八糟"],"content":"Hexo 使用 APlayer 插入音乐","date":"2017-08-23","objectID":"/hexo-aplayer/","tags":["Hexo"],"title":"Hexo 使用 APlayer 插入音乐","uri":"/hexo-aplayer/"},{"categories":["乱七八糟"],"content":"来源 刚开始一直用网易云音乐官方外链播放器 iframe 方法给文章插入音乐，后来嫌不支持 https 就换成网上找到的一个外链接口，用着还可以，最近几个月一直没怎么给文章添加音乐，所以也不太关注。今天用到了才发现接口已经挂掉了，所以网上搜了一下，找到这个新方法。 方法来自 萨摩公园 的文章 「 让 Ghost 吃上 APlayer ］ 原文是用在 Ghost 上的，看了下是加载两个 js，所以用在 Hexo 上也没什么问题。 ","date":"2017-08-23","objectID":"/hexo-aplayer/:1:0","tags":["Hexo"],"title":"Hexo 使用 APlayer 插入音乐","uri":"/hexo-aplayer/"},{"categories":["乱七八糟"],"content":"加载相关 JS 文件 我用的是 next 主题，编辑 /themes/next/layout/_partials/ 目录下的 header.swig，引入 Aplayer.js 2018.3.28更新：添加如下代码： \u003clink rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.css\"\u003e \u003cscript src=\"https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.js\"\u003e\u003c/script\u003e 继续编辑同目录下的 footer.swig，引入 aplayer.js 2018.3.28更新：添加如下代码： \u003cscript src=\"https://cdn.jsdelivr.net/npm/meting@1.1.0/dist/Meting.min.js\"\u003e\u003c/script\u003e 当然也可以把 js 文件保存下来，自行引入地址，至此完成！ ","date":"2017-08-23","objectID":"/hexo-aplayer/:2:0","tags":["Hexo"],"title":"Hexo 使用 APlayer 插入音乐","uri":"/hexo-aplayer/"},{"categories":["乱七八糟"],"content":"文章中使用 在文章中想要添加歌曲的位置使用如下代码： \u003cdiv class=\"aplayer\" data-id=\"22773511\" data-server=\"netease\" data-type=\"song\" data-mode=\"single\"\u003e\u003c/div\u003e 上面的效果如下： ","date":"2017-08-23","objectID":"/hexo-aplayer/:3:0","tags":["Hexo"],"title":"Hexo 使用 APlayer 插入音乐","uri":"/hexo-aplayer/"},{"categories":["乱七八糟"],"content":"常用参数 主要参数 值 data-id 歌曲/专辑/歌单 ID data-server netease（网易云音乐）tencent（QQ音乐） xiami（虾米） kugou（酷狗） data-type song （单曲） album （专辑） playlist （歌单） search （搜索） data-mode random （随机） single （单曲） circulation （列表循环） order （列表） data-autoplay false（手动播放） true（自动播放） 更多参数： https://aplayer.js.org/docs/#/?id=options ","date":"2017-08-23","objectID":"/hexo-aplayer/:4:0","tags":["Hexo"],"title":"Hexo 使用 APlayer 插入音乐","uri":"/hexo-aplayer/"},{"categories":["乱七八糟"],"content":"结束 最近在整理后摇歌单，扔个歌单，我的网易云音乐账号@u0defined，欢迎交流。 ","date":"2017-08-23","objectID":"/hexo-aplayer/:5:0","tags":["Hexo"],"title":"Hexo 使用 APlayer 插入音乐","uri":"/hexo-aplayer/"},{"categories":["生活点滴"],"content":"骑行入门山地车 - 美利达挑战者 300","date":"2017-07-30","objectID":"/challenger-300/","tags":["骑行"],"title":"骑行入门山地车 - 美利达挑战者 300","uri":"/challenger-300/"},{"categories":["生活点滴"],"content":"需求 跑步一年多了，貌似膝盖有点受不了，可能是我姿势不对或者是跑步量太大了。总之决定暂停一段时间。 这段时间如果值班的话就去散散步，走河堤的时候看到有人骑山地车路过，看着感觉还不错，刚好换一个锻炼方式，从来没骑过山地车，不太懂，预算 3000 元左右，咨询玩这方面的同事，这个预算他给了 3 个选择：喜德盛传奇 500、捷安特 XTC 800、美利达挑战者 300。 ","date":"2017-07-30","objectID":"/challenger-300/:1:0","tags":["骑行"],"title":"骑行入门山地车 - 美利达挑战者 300","uri":"/challenger-300/"},{"categories":["生活点滴"],"content":"选择 好像这类商品大多有经销商保护的，网购的话，貌似很多都是磨掉车架号的，所以我基本只考虑本地经销商拿车，所以先排除一个捷安特，因为我这里没有店面（后来知道有的，我没打听清楚）。 剩下两个对比的话喜德盛传奇 500 性价比肯定高一点，车架也轻，我所在县城有家喜德盛店面在本地还挺有名的，店主两兄弟经常到处参加比赛，买的人多，估计后面售后也方便，本来打算去买了的，后来在网上看了下又觉得美利达的刹车好一点，我买来的话主要是在山里值班的时候骑的，山路陡，感觉刹车重要点，网上还有“不挑不幸福”说法，再到美利达官网看看涂装，感觉合眼缘，不纠结了，直接问了店面电话打电话订了一辆，3100 元送水壶、骑行包、头盔之类的东西。 ","date":"2017-07-30","objectID":"/challenger-300/:2:0","tags":["骑行"],"title":"骑行入门山地车 - 美利达挑战者 300","uri":"/challenger-300/"},{"categories":["生活点滴"],"content":"配置 官网配置： 主要参数 值 車種名 挑戰者 300 速別 30S 車架型式 液壓輕量化鋁合金 尺寸 26*15/17/19\" 顏色 麗黑 前叉 XCM-RL-D-100MM 剎車器 MAGURA MT-2 油壓碟煞 鏈條 X10 齒盤 ZEPHYR-651-TT 42/32/24 前變速器 FDM610L6 後變速器 RDM610SGSL 飛輪 CSMS1. 11-36T 手把 HB-3018SP 6’ 7/8D BAR:31. 8D AL 花鼓 鋁合金 座管 SP-DC1 31.6D*350L AL 變速控制桿 SHIMANO SLM610LB 外胎 C-1918 26*1.95 參考重量 13.2KG(17\") 車種規格、顏色、配備以實車為準，本公司保留修改的權力 ","date":"2017-07-30","objectID":"/challenger-300/:3:0","tags":["骑行"],"title":"骑行入门山地车 - 美利达挑战者 300","uri":"/challenger-300/"},{"categories":["生活点滴"],"content":"到货 过了几天老板打电话说到货了，问我是不是马上过来安装，当时没时间，先让他给我装好我过两天去拿，周末休息直接过去，已经装好了，送的东西能装上去的都装上去了，没骑过山地车，怎么变速都搞不清楚，在老板门面前的小空地试了几圈才搞清楚。然后就屁颠颠的骑回家了。 小区下面没地方放，我抗进电梯拿回家里面放了，不怎么拍照，随便来一张： 美利达-挑战者 300 希望不会扔在家里吃灰~ ","date":"2017-07-30","objectID":"/challenger-300/:4:0","tags":["骑行"],"title":"骑行入门山地车 - 美利达挑战者 300","uri":"/challenger-300/"},{"categories":["生活点滴"],"content":"更新 半个月后，没有吃灰！！！ 大太阳的脑子秀逗了出去骑了半天，脚快断了，还需要继续锻炼。。 还是随便上几个图： 行者 APP 记录 - 2017-08-20 半坡休息 路过池塘 公路下坡 挑3 ","date":"2017-07-30","objectID":"/challenger-300/:5:0","tags":["骑行"],"title":"骑行入门山地车 - 美利达挑战者 300","uri":"/challenger-300/"},{"categories":["乱七八糟"],"content":"Ubuntu 16.04 使用 youtube-dl + FFmpeg 下载 Youtube 1080p 视频","date":"2017-07-03","objectID":"/youtube-dl-ffmprg/","tags":["视频下载"],"title":"Ubuntu 16.04 使用 youtube-dl + FFmpeg 下载 Youtube 1080p 视频","uri":"/youtube-dl-ffmprg/"},{"categories":["乱七八糟"],"content":"凑目录 今天在 Youtube 上下载了一个 1080p 的视频，点开后发现没有声音，看看目录里面还有个音频，才发现 Youtube 1080p 的视频和音频是分开的，720p 倒是合在一起的没问题。既然是分开的还需要自己合成起来，用的是 FFmpeg，每次下载 1080p 都要自己合成一次太麻烦了。要是能下载时候自动合成就好了。还有，我一般都是挂着 ss 下载，但总感觉这样比较慢，在 VPS 上安装，视频下载完成拖回本地，应该会好一点。这里用的是下载神器 youtube-dl 和 FFmpeg 配合。 ","date":"2017-07-03","objectID":"/youtube-dl-ffmprg/:1:0","tags":["视频下载"],"title":"Ubuntu 16.04 使用 youtube-dl + FFmpeg 下载 Youtube 1080p 视频","uri":"/youtube-dl-ffmprg/"},{"categories":["乱七八糟"],"content":"安装 FFmpeg 操作系统是 Ubuntu 16.04.2 LTS，安装 FFmpeg 很简单： add-apt-repository ppa:djcj/hybrid apt-get update apt-get install ffmpeg ","date":"2017-07-03","objectID":"/youtube-dl-ffmprg/:2:0","tags":["视频下载"],"title":"Ubuntu 16.04 使用 youtube-dl + FFmpeg 下载 Youtube 1080p 视频","uri":"/youtube-dl-ffmprg/"},{"categories":["乱七八糟"],"content":"安装 youtube-dl 详见官网：https://rg3.github.io/youtube-dl/download.html 我用的是 wget : wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-d chmod a+rx /usr/local/bin/youtube-dl ","date":"2017-07-03","objectID":"/youtube-dl-ffmprg/:3:0","tags":["视频下载"],"title":"Ubuntu 16.04 使用 youtube-dl + FFmpeg 下载 Youtube 1080p 视频","uri":"/youtube-dl-ffmprg/"},{"categories":["乱七八糟"],"content":"使用 youtube-dl 用 youtube-dl -h 查看帮助，这货参数太多了，没仔细看，基本用法: youtube-dl https://www.youtube.com/watch?v=IW_kWtI9EUg 上面就会下载默认格式，如果需要下载指定格式，可以先： youtube-dl -F https://www.youtube.com/watch?v=IW_kWtI9EUg 返回： [youtube] IW_kWtI9EUg: Downloading webpage [youtube] IW_kWtI9EUg: Downloading video info webpage [youtube] IW_kWtI9EUg: Extracting video information [youtube] IW_kWtI9EUg: Downloading MPD manifest [info] Available formats for IW_kWtI9EUg: format code extension resolution note 139 m4a audio only DASH audio 48k , m4a_dash container, mp4a.40.5@ 48k (22050Hz) 249 webm audio only DASH audio 55k , opus @ 50k, 1.14MiB 250 webm audio only DASH audio 72k , opus @ 70k, 1.51MiB 140 m4a audio only DASH audio 128k , m4a_dash container, mp4a.40.2@128k (44100Hz) 251 webm audio only DASH audio 140k , opus @160k, 2.99MiB 171 webm audio only DASH audio 142k , vorbis@128k, 3.09MiB 160 mp4 256x144 DASH video 113k , avc1.4d400c, 30fps, video only 278 webm 256x144 144p 121k , webm container, vp9, 30fps, video only, 2.30MiB 133 mp4 426x240 DASH video 266k , avc1.4d4015, 30fps, video only 242 webm 426x240 240p 282k , vp9, 30fps, video only, 5.47MiB 243 webm 640x360 360p 505k , vp9, 30fps, video only, 10.12MiB 134 mp4 640x360 DASH video 644k , avc1.4d401e, 30fps, video only 244 webm 854x480 480p 896k , vp9, 30fps, video only, 18.53MiB 135 mp4 854x480 DASH video 1176k , avc1.4d401f, 30fps, video only 247 webm 1280x720 720p 1748k , vp9, 30fps, video only, 36.29MiB 136 mp4 1280x720 DASH video 2329k , avc1.4d401f, 30fps, video only 248 webm 1920x1080 1080p 3146k , vp9, 30fps, video only, 63.64MiB 137 mp4 1920x1080 DASH video 4143k , avc1.640028, 30fps, video only 17 3gp 176x144 small , mp4v.20.3, mp4a.40.2@ 24k 36 3gp 320x180 small , mp4v.20.3, mp4a.40.2 43 webm 640x360 medium , vp8.0, vorbis@128k 18 mp4 640x360 medium , avc1.42001E, mp4a.40.2@ 96k 22 mp4 1280x720 hd720 , avc1.64001F, mp4a.40.2@192k (best) 第一列是 id，第二列是文件格式，后面是视频信息。 如果直接想下载哪一种格式的就直接 -f id 就好了，比如下载格式为 720p / mp4 格式的，它的 id 是 22，那么直接： youtube-dl -f 22 https://www.youtube.com/watch?v=IW_kWtI9EUg 就下载完成了。 1080p 视频和音频是分开的，可以看到有些格式带有 video only ，有些带有 audio only ，选两个你自己喜欢的组合吧。比如我要下载 1080p / mp4 的视频和 128k / m4a 的音频，他们的 id 分别是 137 和 140 ，那么使用： youtube-dl -f 137+140 https://www.youtube.com/watch?v=IW_kWtI9EUg youtube-dl 就用下载这两个视频和音频并调用 FFmpeg 合成为一个文件，并删除原来两个视频和音频。 小提示：mp4 + m4a 会合成为一个 mp4 文件， mp4 + webm 会兼容合成为 .mkv 文件，一般为了方便视频以后上传什么的我都选择 mp4 + m4a 组合。 ","date":"2017-07-03","objectID":"/youtube-dl-ffmprg/:4:0","tags":["视频下载"],"title":"Ubuntu 16.04 使用 youtube-dl + FFmpeg 下载 Youtube 1080p 视频","uri":"/youtube-dl-ffmprg/"},{"categories":["乱七八糟"],"content":"拖回本地 视频在 VPS 下载完成后需要拖回本地，方法随意了，我是偷懒直接把视频下载在 Nginx 的 www 目录，用下载工具直接拖回来，工具用的是 IDM，不建议使用迅雷你懂的。 服务器是搬瓦工，拖回来后连忙删除 VPS 的视频，一是流量少耗不起，二是下载了带版权的视频被停就麻烦了。 ","date":"2017-07-03","objectID":"/youtube-dl-ffmprg/:5:0","tags":["视频下载"],"title":"Ubuntu 16.04 使用 youtube-dl + FFmpeg 下载 Youtube 1080p 视频","uri":"/youtube-dl-ffmprg/"},{"categories":["乱七八糟"],"content":"申请 Let's Encrypt SSL 证书配置 Nginx 开启站点 HTTPS","date":"2017-06-20","objectID":"/lets-encrypt/","tags":["SSL"],"title":"申请 Let's Encrypt SSL 证书配置 Nginx 开启站点 HTTPS","uri":"/lets-encrypt/"},{"categories":["乱七八糟"],"content":"安装客户端 Ubuntu 16.04.2 LTS 自带带有软件包，安装非常简单，直接一条命令搞定。 apt-get install letsencrypt 但是，官方最近提供 certbot 这样的自动化部署工具并推荐使用，我不太清楚上面这条命令所安装的客户端和 Certbot 是否一样，感觉是一样的，试了一下上面所安装的客户端用的操作指令是 letsencrypt ，certbot 用的指令是certbot 。 并且，访问这官方工具的 Github 原来项目地址：https://github.com/letsencrypt/letsencrypt 会直接跳转到了 https://github.com/certbot/certbot 。为了避免搞混淆，本文将统一使用 certbot 指令，因此，我并没有使用上面这条命令安装。 简单说明下，下面正式开始： Certbot 官方地址 https://certbot.eff.org/ 里面有安装说明，你只要选择 Web服务器 （比如 Nginx）和操作系统 （ 比如 Ubuntu ）就会有比较详细的安装过程说明，但是既然在项目也提交在 Github 上，那么还是用 git 吧，下载并进入目录： git clone https://github.com/certbot/certbot cd certbot 可以运行 ./certbot-auto --help 看看说明。 ","date":"2017-06-20","objectID":"/lets-encrypt/:1:0","tags":["SSL"],"title":"申请 Let's Encrypt SSL 证书配置 Nginx 开启站点 HTTPS","uri":"/lets-encrypt/"},{"categories":["乱七八糟"],"content":"获取证书 Certbot 支持多种不同的插件来获取证书，比如 webroot，多数文章会推荐这种，它的好处是不需要停止 Web 服务器，也就是获取过程中你的网站可以正常运行，但是这种方式需要指定目录及服务器上创建临时文件，通过 Let’s Encrypt 验证服务器发出 HTTP 请求，验证通过后即颁发证书，涉及目录权限之类的，容易出问题，为了避免不必要的麻烦，所以我没有用这个插件获取。 我用的是 standalone ，这种方式申请证书时将启动 Certbot 内置的 Webserver，这时候你的 80 和 443 端口不能被占用，通常是暂停 Web 服务器，我这里是 Nginx，个人网站嘛，暂停十几秒钟没什么影响。推荐不想出现各种奇怪问题的朋友用这种方式。 /etc/init.d/nginx stop 然后： ./certbot-auto certonly --standalone 提示输入域名，多个域名用空格隔开，比如输入clearsky.me www.clearsky.me ，输入后回车。 也可以直接用 -d 直接加： ./certbot-auto certonly --standalone -d clearsky.me www.clearsky.me 出现： - Congratulations! Your certificate and chain have been saved at /etc/letsencrypt/live/clearsky.me/fullchain.pem. Your cert will expire on 2017-09-17. To obtain a new or tweaked version of this certificate in the future, simply run certbot-auto again. To non-interactively renew *all* of your certificates, run \"certbot-auto renew\" - If you like Certbot, please consider supporting our work by: Donating to ISRG / Let's Encrypt: https://letsencrypt.org/donate Donating to EFF: https://eff.org/donate-le 就成功了，看提示，所有的证书文件在 /etc/letsencrypt/live/你的域名 下，里面有下面几个文件： 信息 privkey.pem 这是私匙，对应 Nginx 的 ssl_certificate_key 选项，或者 Apache2 的 SSLCertificateKeyFile 选项。 cert.pem 服务器证书，这个只有 Apache2 低于 2.4.8 版本需要，对应 SSLCertificateFile 选项。 chain.pem 除服务器证书之外的所有证书，对于 1.3.7 版以上的 Nginx 对应 ssl_trusted_certificate 选项，对于低于2.4.8 的 Apache2 对应 SSLCertificateChainFile 选项。 fullchain.pem 包括上面的服务器证书和其他证书, Nginx 对应 ssl_certificate 选项，2.4.8 版以上的 Apache2 对应 SSLCertificateFile 选项。 如果是 Nginx，需要上面的 privkey.pem（对应 ssl_certificate_key 选项）和 fullchain.pem （对应 ssl_certificate 选项），还需要一个 dhparam.pem（对应 ssl_dhparam 选项） 需自己生成： openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048 这个文件创建稍微需要一点时间，注意看我的路径，我的是在 /etc/nginx/ssl/ 下，如果没有ssl 这个目录就自己建一个，当然你换其他地方也行。 有了这三个文件: privkey.pem、fullchain.pem 、dhparam.pem 就可以配置 Nginx 了。 ","date":"2017-06-20","objectID":"/lets-encrypt/:2:0","tags":["SSL"],"title":"申请 Let's Encrypt SSL 证书配置 Nginx 开启站点 HTTPS","uri":"/lets-encrypt/"},{"categories":["乱七八糟"],"content":"配置 Nginx 我用的 Nginx 版本是 1.10.0，OpenSSL 版本为 1.0.2g 。支持开启 HTTP/2，并开启 HSTS ，添加一个 301 跳转规则强制 HTTPS 。下面维基百科凑文章字数： ","date":"2017-06-20","objectID":"/lets-encrypt/:3:0","tags":["SSL"],"title":"申请 Let's Encrypt SSL 证书配置 Nginx 开启站点 HTTPS","uri":"/lets-encrypt/"},{"categories":["乱七八糟"],"content":"什么是 HTTP/2 ? HTTP/2（超文本传输协议第2版，最初命名为HTTP 2.0），是HTTP协议的的第二个主要版本，使用于万维网。HTTP/2是HTTP协议自1999年HTTP 1.1发布后的首个更新，主要基于SPDY协议。它由互联网工程任务组（IETF）的Hypertext Transfer Protocol Bis（httpbis）工作小组进行开发。[1]该组织于2014年12月将HTTP/2标准提议递交至IESG进行讨论[2]，于2015年2月17日被批准。[3] HTTP/2标准于2015年5月以RFC 7540正式发表。[4] ","date":"2017-06-20","objectID":"/lets-encrypt/:3:1","tags":["SSL"],"title":"申请 Let's Encrypt SSL 证书配置 Nginx 开启站点 HTTPS","uri":"/lets-encrypt/"},{"categories":["乱七八糟"],"content":"什么是 HSTS ? HTTP严格传输安全（英语：HTTP Strict Transport Security，缩写：HSTS）是一套由互联网工程任务组发布的互联网安全策略机制。网站可以选择使用HSTS策略，来让浏览器强制使用HTTPS与网站进行通信，以减少会话劫持风险[1][2]。 上面这种非正常人类语言看不看无所谓，主要目的是开启这些，会让你的站点 Qualys SSL Labs 评分很容易达到 A+ ~~ 所以，最后我的 Nginx 配置，关于 SSL 部分配置，我是用 Mozilla SSL Configuration Generator 来生成修改的，增加了一些安全配置。更多还在摸索中，保持更新： server { listen 80 ; listen [::]:80; server_name clearsky.me www.clearsky.me; return 301 https://$server_name$request_uri; } server { listen 443 ssl http2; listen [::]:443 ssl http2; server_name clearsky.me www.clearsky.me; # 不输出 Nginx 版本号及其他错误信息 server_tokens off; # HTTPS ssl_certificate /etc/letsencrypt/live/clearsky.me/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/clearsky.me/privkey.pem; ssl_dhparam /etc/nginx/ssl/dhparam.pem; ssl_session_cache shared:SSL:50m; ssl_session_timeout 1d; ssl_session_tickets off; ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256'; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; ssl_stapling on; ssl_stapling_verify on; # 开启 HSTS,这么写是为了提交到 https://hstspreload.org/ add_header Strict-Transport-Security \"max-age=31536000; includeSubdomains;preload\"; # 网页不允许被 iframe 嵌套。 add_header X-Frame-Options DENY; # 不允许浏览器对未指定或错误指定的 Content-Type 资源真正类型的猜测行为。 add_header X-Content-Type-Options nosniff; # 启用 XSS 保护，检查到 XSS 攻击时，停止渲染页面。 add_header X-XSS-Protection \"1; mode=block\"; # 下面这个还在找资料暂时不管，先注释。 #add_header Content-Security-Policy root /var/www/hexo; access_log /var/log/nginx/hexo_access.log; error_log /var/log/nginx/hexo_error.log; error_page 404 = /404.html; location ~* ^.+\\.(ico|gif|jpg|jpeg|png)$ { root /var/www/hexo; access_log off; expires 1d; } location ~* ^.+\\.(css|js|txt|xml|swf|wav)$ { root /var/www/hexo; access_log off; expires 10m; } location / { root /var/www/hexo; if (-f $request_filename) { rewrite ^/(.*)$ /$1 break; } } location /nginx_status { stub_status on; access_log off; } } 配置好了，别忘了重启 Nginx： /etc/init.d/nginx restart 不出意外，地址栏小绿锁出现了。 ","date":"2017-06-20","objectID":"/lets-encrypt/:3:2","tags":["SSL"],"title":"申请 Let's Encrypt SSL 证书配置 Nginx 开启站点 HTTPS","uri":"/lets-encrypt/"},{"categories":["乱七八糟"],"content":"后续证书更新 Let’s Encrypt SSL 免费证书为短期证书，只有 90 天期限，提示到期前可以运行命令 ./certbot-auto renew 续期，VPS 上可以设置定时任务自动化完成，我还没弄好，主要是不会写脚本。。。暂时先是这样，也不知道能不能行： crontab -e 选择 nano 编辑： 0 0 28 * * /etc/init.d/nginx stop 0 1 28 * * cd certbot \u0026\u0026 ./certbot-auto renew 0 2 28 * * openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048 0 3 28 * * /etc/init.d/nginx restart 感觉好搓。。。等过两天休息有空了恶补下 Linux 命令再试试。 凌晨 4 点，又一个失眠晚上了，唉。。。 @update：2017.6.23，今天回家，没什么心思，直接几个命令硬凑一个脚本了： #!/bin/sh cd certbot \u0026\u0026 openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048 \u0026\u0026 /etc/init.d/nginx stop \u0026\u0026 ./certbot-auto renew --standalone \u0026\u0026 /etc/init.d/nginx start 保存为 auto-renew.sh ，扔到 /root/scripts/ ，继续 crontab -e ，编辑为： 0 0 28 * * sh scripts/auto-renew.sh 暂时这样吧。 ","date":"2017-06-20","objectID":"/lets-encrypt/:4:0","tags":["SSL"],"title":"申请 Let's Encrypt SSL 证书配置 Nginx 开启站点 HTTPS","uri":"/lets-encrypt/"},{"categories":["学习备忘"],"content":"Hexo 部署到搬瓦工 VPS","date":"2017-06-18","objectID":"/hexo-deploy-to-vps/","tags":["VPS","Hexo"],"title":"Hexo 部署到搬瓦工 VPS","uri":"/hexo-deploy-to-vps/"},{"categories":["学习备忘"],"content":"环境设定 信息 搬瓦工年付最便宜 $19.99 10G VPS，KVM 架构。 VPS 操作系统 Ubuntu 16.04.2 LTS ，已开启 Gooole TCP BBR。 本地系统 Windows_NT 10.0.15063 win32 x64，已安装 Hexo 3.3.7，Node.js 版本 6.10.3。 SSH 连接管理软件 Xshell 5，本地终端 Git for Windows 2.13。 ","date":"2017-06-18","objectID":"/hexo-deploy-to-vps/:1:0","tags":["VPS","Hexo"],"title":"Hexo 部署到搬瓦工 VPS","uri":"/hexo-deploy-to-vps/"},{"categories":["学习备忘"],"content":"方案选择 传说中有 2 种方案： 信息 在 VPS 安装配置 Hexo，完成后 hexo server 让它本地运行，之后通过配置 Nginx 让域名指向 http://localhost:4000 。 本地安装配置 Hexo，生成静态文件，然后 git hook 或者 rsync 这类方式部署到 VPS，Nginx 作为 Web 服务器解析。 注意 因为我以前一直是本地生成静态文件部署到 github 或者 coding 上的，显然第二种方案适合我，在这里使用的是git hook 方式部署，因为 Google 搜索出来大多是这种方式，文章多，容易解决问题。 ","date":"2017-06-18","objectID":"/hexo-deploy-to-vps/:2:0","tags":["VPS","Hexo"],"title":"Hexo 部署到搬瓦工 VPS","uri":"/hexo-deploy-to-vps/"},{"categories":["学习备忘"],"content":"安装 Git 和 Nginx root 登录 VPS，安装 Git 和 Nginx。 apt-get update apt-get install git-core apt-get install nginx ","date":"2017-06-18","objectID":"/hexo-deploy-to-vps/:3:0","tags":["VPS","Hexo"],"title":"Hexo 部署到搬瓦工 VPS","uri":"/hexo-deploy-to-vps/"},{"categories":["学习备忘"],"content":"配置 Git 新增一个用户 git ，并赋予操作权限。 adduser git 提示输入密码，并且填写一些身份信息。完成后赋予权限： chmod 740 /etc/sudoers 编辑 /etc/sudoers，我用的 nano ，不会 vi 。 nano /etc/sudoers 在如下图位置添加 git ALL=(ALL:ALL) ALL： etc_sudoers 之后保存，记得把权限改回来 chmod 440 /etc/sudoers 注意 输入密码不可见，也无星号提示，输入一次，回车，再输一次再回车就好了。身份信息直接一路回车默认就好了。觉得 vi 操作麻烦可以用 nano 来编辑，注意添加位置。 ","date":"2017-06-18","objectID":"/hexo-deploy-to-vps/:3:1","tags":["VPS","Hexo"],"title":"Hexo 部署到搬瓦工 VPS","uri":"/hexo-deploy-to-vps/"},{"categories":["学习备忘"],"content":"上传本地 ssh 公钥 su git # 切换至 git 用户 cd ~ mkdir .ssh \u0026\u0026 cd .ssh touch authorized_keys nano authorized_keys 出现编辑框，这里需要把本地 公钥里面内容复制进，本地公钥在 ~/.ssh/id_rsa.pub ，我是直接用编辑器打开复制进去的。复制完成保存。 然后测试一下连接，本地终端运行： ssh git@VPS IP 地址 这里出错了，连不上，原因是搬瓦工默认连接端口不是 22，那么本地 ~/.ssh/ 目录下新建 config 文件 ( 注意没有后缀 )，内容如下： Host # VPS IP地址 HostName # VPS IP地址 User git Port # SSH 端口 IdentityFile ~/.ssh/id_rsa 完成后再试一下，没问题了。 ","date":"2017-06-18","objectID":"/hexo-deploy-to-vps/:3:2","tags":["VPS","Hexo"],"title":"Hexo 部署到搬瓦工 VPS","uri":"/hexo-deploy-to-vps/"},{"categories":["学习备忘"],"content":"部署 Git 库 cd ~ mkdir hexo.git \u0026\u0026 cd hexo.git git init --bare ","date":"2017-06-18","objectID":"/hexo-deploy-to-vps/:3:3","tags":["VPS","Hexo"],"title":"Hexo 部署到搬瓦工 VPS","uri":"/hexo-deploy-to-vps/"},{"categories":["学习备忘"],"content":"授权配置钩子 cd /var/www sudo mkdir hexo #需要输入 git 用户密码 sudo chown git:git -R /var/www/hexo cd ~/hexo.git/hooks nano post-receive 编辑框输入以下内容： #!/bin/bash GIT_REPO=/home/git/hexo.git TMP_GIT_CLONE=/tmp/hexo PUBLIC_WWW=/var/www/hexo rm -rf ${TMP_GIT_CLONE} git clone $GIT_REPO $TMP_GIT_CLONE rm -rf ${PUBLIC_WWW}/* cp -rf ${TMP_GIT_CLONE}/* ${PUBLIC_WWW} 并赋予权限 chmod +x post-receive 至此，VPS Git 配置完成。记下来是 Nginx。 ","date":"2017-06-18","objectID":"/hexo-deploy-to-vps/:3:4","tags":["VPS","Hexo"],"title":"Hexo 部署到搬瓦工 VPS","uri":"/hexo-deploy-to-vps/"},{"categories":["学习备忘"],"content":"配置 Nginx 为了方面先可以切换到 root 用户，首先配置 Nginx 站点文件： nano /etc/nginx/conf.d/hexo.conf 输入以下内容并保存，酌情修改： server { listen 80 ; listen [::]:80; root /var/www/hexo; server_name clearsky.me www.clearsky.me; access_log /var/log/nginx/hexo_access.log; error_log /var/log/nginx/hexo_error.log; error_page 404 = /404.html; location ~* ^.+\\.(ico|gif|jpg|jpeg|png)$ { root /var/www/hexo; access_log off; expires 1d; } location ~* ^.+\\.(css|js|txt|xml|swf|wav)$ { root /var/www/hexo; access_log off; expires 10m; } location / { root /var/www/hexo; if (-f $request_filename) { rewrite ^/(.*)$ /$1 break; } } location /nginx_status { stub_status on; access_log off; } } 完成后重启 Nginx。 /etc/init.d/nginx restart ","date":"2017-06-18","objectID":"/hexo-deploy-to-vps/:3:5","tags":["VPS","Hexo"],"title":"Hexo 部署到搬瓦工 VPS","uri":"/hexo-deploy-to-vps/"},{"categories":["学习备忘"],"content":"配置 Hexo 部署 和部署到 github 和 coding 一样，修改 Hexo 配置文件 _config.yml 的 deploy 部分： deploy: type: git repo: git@VPS的IP:hexo.git,master ","date":"2017-06-18","objectID":"/hexo-deploy-to-vps/:4:0","tags":["VPS","Hexo"],"title":"Hexo 部署到搬瓦工 VPS","uri":"/hexo-deploy-to-vps/"},{"categories":["学习备忘"],"content":"完成测试 和往常一样，hexo g -d ，看了一下没问题了。 git-vps 先吃饭，回来再添加下 SSL 证书。 ","date":"2017-06-18","objectID":"/hexo-deploy-to-vps/:5:0","tags":["VPS","Hexo"],"title":"Hexo 部署到搬瓦工 VPS","uri":"/hexo-deploy-to-vps/"},{"categories":["乱七八糟"],"content":"Ubuntu 开启 BBR 拥塞控制算法加速 TCP","date":"2017-06-18","objectID":"/ubuntu-bbr/","tags":["VPS","Ubuntu"],"title":"Ubuntu 开启 BBR 拥塞控制算法加速 TCP","uri":"/ubuntu-bbr/"},{"categories":["乱七八糟"],"content":"系统更新 昨天 前天（打字的时候过 0 点了）买的搬瓦工 VPS，默认系统是 CentOS 6.8，后台重装先换成 Ubuntu 16.04，为什么？我懒啊，图方便。 然后 root 登录，终端输入： apt-get update #更新软件列表 apt-get upgrade #升级软件 apt-get dist-upgrade #升级当前系统版本 do-release-upgrade -d #升级到新的系统版本 一路输入 Y ，结束后 reboot 。 ","date":"2017-06-18","objectID":"/ubuntu-bbr/:1:0","tags":["VPS","Ubuntu"],"title":"Ubuntu 开启 BBR 拥塞控制算法加速 TCP","uri":"/ubuntu-bbr/"},{"categories":["乱七八糟"],"content":"安装最新内核并开启 BBR 脚本 接上面，重新连接后： uname -a 返回：Linux eva00 4.4.0-62-generic #83-Ubuntu SMP Wed Jan 18 14:10:15 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux 内核 4.4.0，开启 BBR 貌似需要 4.9 以上吧，需要更新内核。 ","date":"2017-06-18","objectID":"/ubuntu-bbr/:2:0","tags":["VPS","Ubuntu"],"title":"Ubuntu 开启 BBR 拥塞控制算法加速 TCP","uri":"/ubuntu-bbr/"},{"categories":["乱七八糟"],"content":"什么是 BBR？ TCP BBR 是 Google 出品的 TCP 拥塞控制算法。BBR 目的是要尽量跑满带宽，并且尽量不要有排队的情况。BBR 可以起到单边加速 TCP 连接的效果。 用的还是秋大的 一键安装最新内核并开启 BBR 脚本： wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh chmod +x bbr.sh ./bbr.sh 完成后按 Y 重启。 重新连接后继续： uname -a 返回：**Linux ubuntu 4.11.6-041106-generic #201706170517 SMP Sat Jun 17 09:18:46 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux **则升级成功。 sysctl net.ipv4.tcp_available_congestion_control 返回值一般为： net.ipv4.tcp_available_congestion_control = bbr cubic reno sysctl net.ipv4.tcp_congestion_control 返回值一般为： net.ipv4.tcp_congestion_control = bbr sysctl net.core.default_qdisc 返回值一般为：net.core.default_qdisc = fq lsmod | grep bbr 出现 tcp_bbr 字样，至此开启 BBR 成功。 ","date":"2017-06-18","objectID":"/ubuntu-bbr/:3:0","tags":["VPS","Ubuntu"],"title":"Ubuntu 开启 BBR 拥塞控制算法加速 TCP","uri":"/ubuntu-bbr/"},{"categories":["乱七八糟"],"content":"简单测试 还没有安装 SSR ，待更新。 @update 2017.7.1 终于抽空装了 SSR，非高峰期，有土鳖 1080P 下，大概就是这个速度，1080P 勉强，有时候要缓冲，720P 没什么问题。 截图来至 和楽器バンド / 「起死回生」6/21発売「和楽器バンド大新年会2017 蜷川べに （津軽三味線） ssr-cs 晚上有点不太满意，搜索了下，发现论坛好多人用的魔改版，试一下，用的是这个一键包：Debian/Ubuntu TCP BBR 改进版/增强版，貌似只支持 Debian8 / Ubuntu16 +。 wget --no-check-certificate -qO 'BBR.sh' 'https://moeclub.org/attachment/LinuxShell/BBR.sh' \u0026\u0026 chmod a+x BBR.sh \u0026\u0026 bash BBR.sh -f 完成后运行： lsmod |grep 'bbr_powered' 返回 bbr_powered' 字样，则安装成功了。 ","date":"2017-06-18","objectID":"/ubuntu-bbr/:4:0","tags":["VPS","Ubuntu"],"title":"Ubuntu 开启 BBR 拥塞控制算法加速 TCP","uri":"/ubuntu-bbr/"},{"categories":["乱七八糟"],"content":"Hexo 永久链接管理","date":"2017-06-17","objectID":"/hexo-permalinks/","tags":["Hexo"],"title":"Hexo 永久链接管理","uri":"/hexo-permalinks/"},{"categories":["乱七八糟"],"content":"起因 Hexo 官方文档关于永久链接（Permalinks）是这样定义的。 您可以在 _config.yml 配置中调整网站的永久链接或者在每篇文章的 Front-matter 中指定。 变量 描述 :year 文章的发表年份（4 位数） :month 文章的发表月份（2 位数） :i_month 文章的发表月份（去掉开头的零） :day 文章的发表日期 (2 位数) :i_day 文章的发表日期（去掉开头的零） :title 文件名称 :id 文章 ID :category 分类。如果文章没有分类，则是 default_category 配置信息 我一直是用 :title，也就是文件名称作为永久链接变量的， Hexo 配置文件_config.yml 中，配置如下： permalink: :title.html 假设 \\source\\_posts 文件夹 中，有一篇 hello-world.md 的文章，那么它生成的效果实例为： https://clearsky.me/hello-world.html 问题来了，如果按照文件名称生成永久链接的，我的文件格式都要是这类 英文字母.md 的格式，那么我的 \\source\\_posts 文件夹如下图： posts_screenshot 看起来很乱啊，虽然文章不多，但我要找出一篇多年前的文章很难，按时间排序的话，很多文章又是后面修改过的，定位很难，如果改用 中文标题.md 的格式，似乎会好很多，一眼就能知道这篇文章说的是什么。但是改成 中文标题.md 的话，生成的链接就会类似这种： https://clearsky.me/你好世界.html 浏览器地址栏上很不美观，对 SEO 也不好（虽然我不在乎）。 有没有办法让 Markdown 文件用 你好世界.md 这类中文文件名保存，生成的永久链接格式又是 hello-world.html 这种样式呢？ ","date":"2017-06-17","objectID":"/hexo-permalinks/:0:1","tags":["Hexo"],"title":"Hexo 永久链接管理","uri":"/hexo-permalinks/"},{"categories":["乱七八糟"],"content":"搜索实践 一番 Google 之后，终于找到答案，来自 HEXO的站内链接和永久链接 这篇文章里面说道： Markdown Front-matter 区域可以看到，我这里除了 title， date 以及 tags 外，自己添加了一个新的变量 urlname ，这个新的变量用来保存每个文章的英文名字，这样一来可以有利于SEO，二来可以缩短博客文章URL的层数。 那么，Front-matter 区域新增一个变量 urlname ，值为前面说的英文字母格式。拿昨天的一篇文章举例，如图蓝框处： urlname 再在 Hexo 配置文件 _config.yml 中，把 permalink: 的值设为 urlname.html 。 permalink: :urlname.html OK，搞定！ ","date":"2017-06-17","objectID":"/hexo-permalinks/:0:2","tags":["Hexo"],"title":"Hexo 永久链接管理","uri":"/hexo-permalinks/"},{"categories":["乱七八糟"],"content":"额外的修改 在看上面那篇文章的时候发现作者在每个 Markdown 格式的文章前加上时间，这样以后查找起来就非常简单了，很容易定位到。于是学习了，经过一番修改，我把以前所有的文章都加上了 urlname ，文件名称改成 发布时间 - 中文标题.md 这样的，纯体力活，之后如图： posts_screenshot_after 这样看着舒服多了~ ","date":"2017-06-17","objectID":"/hexo-permalinks/:0:3","tags":["Hexo"],"title":"Hexo 永久链接管理","uri":"/hexo-permalinks/"},{"categories":["乱七八糟"],"content":"结束 弄完这些已经快 23:00 了，昨天晚上还说要把这里部署到 VPS 上去，看来是不行了，很难说，等会要是睡不着继续折腾，反正明天不上班。 ","date":"2017-06-17","objectID":"/hexo-permalinks/:0:4","tags":["Hexo"],"title":"Hexo 永久链接管理","uri":"/hexo-permalinks/"},{"categories":["乱七八糟"],"content":"入了个年付 $19.99 搬瓦工 VPS","date":"2017-06-16","objectID":"/fuck-bandwagonhost-again/","tags":["BandwagonHost","VPS"],"title":"入了个年付 $19.99 搬瓦工 VPS","uri":"/fuck-bandwagonhost-again/"},{"categories":["乱七八糟"],"content":"序言 本来没想买，一直部署在 coding 挺好的，省事，这两天看到 @skywing 换了 VPS，或许是很久不碰这种东西，手痒，还是入了个 搬瓦工 来玩玩。不过估计没多少时间来折腾了，破事多，时间不允许。简单就这样说下吧。 ","date":"2017-06-16","objectID":"/fuck-bandwagonhost-again/:1:0","tags":["BandwagonHost","VPS"],"title":"入了个年付 $19.99 搬瓦工 VPS","uri":"/fuck-bandwagonhost-again/"},{"categories":["乱七八糟"],"content":"购买配置 买的是最便宜的那款 10G VPS，架构方案当然选 KVM （可以锐速、BBR之类），六个机房可选（洛杉矶直连、洛杉矶MC、纽约、佛利蒙、凤凰城、荷兰、佛罗里达）月付 2.99 刀，年付 19.99 刀，使用 6% 优惠码 BWH1ZBPVK 之后 18.79 刀，按今日汇率折合人民币 128.53 元 ，简单贴下： 简单参数 值 SSD RAID-10 Space 10 GB SSD ECC RAM 512 MB Bandwidth 500 GB CPU 1x Intel Xeon Network 1 Gigabit Order KVM √ Monthly Price $2.99 pay-banwagong ","date":"2017-06-16","objectID":"/fuck-bandwagonhost-again/:2:0","tags":["BandwagonHost","VPS"],"title":"入了个年付 $19.99 搬瓦工 VPS","uri":"/fuck-bandwagonhost-again/"},{"categories":["乱七八糟"],"content":"简单测试 默认系统 CentOS 6.8 开启了 BBR，用秋大的 一键测试脚本bench.sh 测试一下，貌似有点挫。。。 [root@eva00 ~]# wget -qO- bench.sh | bash ---------------------------------------------------------------------- CPU model : QEMU Virtual CPU version (cpu64-rhel6) Number of cores : 1 CPU frequency : 1999.997 MHz Total size of Disk : 11.3 GB (0.8 GB Used) Total amount of Mem : 507 MB (129 MB Used) Total amount of Swap : 0 MB (0 MB Used) System uptime : 0 days, 0 hour 21 min Load average : 0.00, 0.00, 0.00 OS : CentOS 6.8 Arch : i686 (32 Bit) Kernel : 4.10.4-1.el6.elrepo.i686 ---------------------------------------------------------------------- I/O speed(1st run) : 274 MB/s I/O speed(2nd run) : 328 MB/s I/O speed(3rd run) : 305 MB/s Average I/O speed : 302.3 MB/s ---------------------------------------------------------------------- Node Name IPv4 address Download Speed CacheFly 205.234.175.175 94.1MB/s Linode, Tokyo, JP 106.187.96.148 13.8MB/s Linode, Singapore, SG 139.162.23.4 2.29MB/s Linode, London, UK 176.58.107.39 1.70MB/s Linode, Frankfurt, DE 139.162.130.8 6.11MB/s Linode, Fremont, CA 50.116.14.9 1.01MB/s Softlayer, Dallas, TX 173.192.68.18 34.8MB/s Softlayer, Seattle, WA 67.228.112.250 45.2MB/s Softlayer, Frankfurt, DE 159.122.69.4 4.60MB/s Softlayer, Singapore, SG 119.81.28.170 402KB/s Softlayer, HongKong, CN 119.81.130.170 405KB/s ---------------------------------------------------------------------- 路由跟踪，绕了一圈没看明白。。。不管了。 trace-banwagonhost ","date":"2017-06-16","objectID":"/fuck-bandwagonhost-again/:3:0","tags":["BandwagonHost","VPS"],"title":"入了个年付 $19.99 搬瓦工 VPS","uri":"/fuck-bandwagonhost-again/"},{"categories":["乱七八糟"],"content":"结束 暂时就这样吧，好困了，睡了，后天能休息一天，明晚上有空应该就把这里部署到这 VPS 上去，还有 Hexo 也挺久没升级了，明天晚上一起升级了，估计到时候又是一堆坑啊啊啊啊啊啊。。。 ","date":"2017-06-16","objectID":"/fuck-bandwagonhost-again/:4:0","tags":["BandwagonHost","VPS"],"title":"入了个年付 $19.99 搬瓦工 VPS","uri":"/fuck-bandwagonhost-again/"},{"categories":["乱七八糟"],"content":"撸了个鼠标 - 罗技 G-Pro","date":"2017-06-10","objectID":"/logitech-g-pro/","tags":["G-Pro"],"title":"撸了个鼠标 - 罗技 G-Pro","uri":"/logitech-g-pro/"},{"categories":["乱七八糟"],"content":"原来的鼠标微动坏了，就在京东上逛逛，本来想买个 g100s 用用，后来发现这货，看样子和经典的 G1 差不多，就喜欢这种简简单单不花哨造型的，就点降价关注。 这两天手机收到京东降价通知，下单立减 60，330 到手，就领个 6 期免息分期券买了。 近年来不怎么玩电脑了，到手装上试了下，握着还挺舒服的。随便下了罗技那个游戏软件调了一下，感觉差不多了就不管了。 主要参数 值 型号 G Pro 连接方式 有线 鼠标类型 光电鼠标 传感器 PMW 3366 按键数 6 键 按键寿命 2000万次 滚轮数 一个 接口类型 USB接口 技术参数 值 鼠标回报率 1000 Hz 追踪速度 300 ips 加速度 40 G 鼠标分辩率 200-12000 DPI 人体工程学 是 随便扔一张： G pro ","date":"2017-06-10","objectID":"/logitech-g-pro/:0:0","tags":["G-Pro"],"title":"撸了个鼠标 - 罗技 G-Pro","uri":"/logitech-g-pro/"},{"categories":["乱七八糟"],"content":"微醺之美","date":"2017-01-11","objectID":"/beauty-of-tipiness/","tags":["酒"],"title":"微醺之美","uri":"/beauty-of-tipiness/"},{"categories":["乱七八糟"],"content":" 引用 酒瘾大是一种怎样的体验? 师傅说：喝酒最舒服的时候就是微醺的那一刻，恍恍惚惚，神智还在，感官却被放大，快乐的愈发快乐，悲伤的更加悲伤，感觉灵魂就浮在头上三尺，俯视着这个嬉笑怒骂的人，3秒钟之内，又能意识到这个人就是自己，不可言喻。 你一会扮演安静的倾听者，是非、八卦、黄段子，然后你抬起头，嘴角上扬，露出一个标准的微笑。 转眼你又变成了一个激情的装逼犯，谈笑风声，理想、承诺反正不要钱，带着唾沫往外喷。 猛地打了一个酒嗝，脑袋清醒过来，面对一锅冷掉的酸菜鱼，重回人间，唏嘘不已。 写这么矫情，我啊，多半也是醉了。 ","date":"2017-01-11","objectID":"/beauty-of-tipiness/:0:0","tags":["酒"],"title":"微醺之美","uri":"/beauty-of-tipiness/"},{"categories":["乱七八糟"],"content":"域名从 Godaddy 转移至 Namesilo","date":"2016-10-22","objectID":"/domain-transfer-godaddy-to-namesilos/","tags":["域名"],"title":"域名从 Godaddy 转移至 Namesilo","uri":"/domain-transfer-godaddy-to-namesilos/"},{"categories":["乱七八糟"],"content":"起因 这段时间一直收到 Godaddy 的“骚扰”邮件，这个域名快到期了，本来想直接续费的，突然想到 Godaddy 的 WHOIS Privacy (域名隐私保护) 是收费的，好像10多刀一年吧，而 Namesilo 号称 WHOIS Privacy 永久免费，好像续费还比 Godaddy 便宜一点，能省一点算一点，打算趁着今天用空转移一下。 ","date":"2016-10-22","objectID":"/domain-transfer-godaddy-to-namesilos/:1:0","tags":["域名"],"title":"域名从 Godaddy 转移至 Namesilo","uri":"/domain-transfer-godaddy-to-namesilos/"},{"categories":["乱七八糟"],"content":"Godaddy 转出 ","date":"2016-10-22","objectID":"/domain-transfer-godaddy-to-namesilos/:2:0","tags":["域名"],"title":"域名从 Godaddy 转移至 Namesilo","uri":"/domain-transfer-godaddy-to-namesilos/"},{"categories":["乱七八糟"],"content":"解锁域名状态 登陆 Godaddy 账户，Additional Settings, 把域名锁定关闭掉。 解锁域名 ","date":"2016-10-22","objectID":"/domain-transfer-godaddy-to-namesilos/:2:1","tags":["域名"],"title":"域名从 Godaddy 转移至 Namesilo","uri":"/domain-transfer-godaddy-to-namesilos/"},{"categories":["乱七八糟"],"content":"获取转移授权码 点击下方的 Get authorization code , 转移授权码会直接发送到域名管理员邮箱。 获取转移码 会收到 Godaddy 的邮件，里面有域名和转移码授权码信息。 转移授权码 ","date":"2016-10-22","objectID":"/domain-transfer-godaddy-to-namesilos/:2:2","tags":["域名"],"title":"域名从 Godaddy 转移至 Namesilo","uri":"/domain-transfer-godaddy-to-namesilos/"},{"categories":["乱七八糟"],"content":"Namesilo 转入 ","date":"2016-10-22","objectID":"/domain-transfer-godaddy-to-namesilos/:3:0","tags":["域名"],"title":"域名从 Godaddy 转移至 Namesilo","uri":"/domain-transfer-godaddy-to-namesilos/"},{"categories":["乱七八糟"],"content":"提交转移 登陆 Namesilo 账户，导航模块 Transfer ，有单个域名转入和批量转入两种方式，我就一个，直接 Single Domain Transfer。 转移提交 填入转移授权码，确认转移。 填入转移码 ","date":"2016-10-22","objectID":"/domain-transfer-godaddy-to-namesilos/:3:1","tags":["域名"],"title":"域名从 Godaddy 转移至 Namesilo","uri":"/domain-transfer-godaddy-to-namesilos/"},{"categories":["乱七八糟"],"content":"支付信息及优惠码 提交后确认支付信息。 自动续费选否， Privacy Setting 选择 WHOIS Privacy ，免费的，优惠码网上随便找了一个，转入优惠 1 刀，总价 14.99 刀。 账单信息 提交支付后，选择支付方式，支持多种支付方式，最后那个熟悉的马牌支付宝。 支付方式 100大洋多一点，还行。 费用 ","date":"2016-10-22","objectID":"/domain-transfer-godaddy-to-namesilos/:3:2","tags":["域名"],"title":"域名从 Godaddy 转移至 Namesilo","uri":"/domain-transfer-godaddy-to-namesilos/"},{"categories":["乱七八糟"],"content":"确认转移 Namesilo 查看转入信息，已经有确认邮件发出。 确认转移-I 确认转移-II 确认转移-III 导致完成接下来就等 Godaddy 那边处理了。 ","date":"2016-10-22","objectID":"/domain-transfer-godaddy-to-namesilos/:3:3","tags":["域名"],"title":"域名从 Godaddy 转移至 Namesilo","uri":"/domain-transfer-godaddy-to-namesilos/"},{"categories":["乱七八糟"],"content":"Godaddy 快速转移 这回收到一封来自 Godaddy 的邮件， 如下： Godaddy转出通知 可以看到你不自己处理的话，它会自己拖个几天才转移，很显然没人愿意等，于是登陆 Godaddy 账户，Transfer 列表，选中域名 Accept or decline 选项，然后Accept Transfer 。 转移 接下来就是等待了，大概10分钟， Namesilo 账户已经显示域名转入了。 转移完成 ","date":"2016-10-22","objectID":"/domain-transfer-godaddy-to-namesilos/:3:4","tags":["域名"],"title":"域名从 Godaddy 转移至 Namesilo","uri":"/domain-transfer-godaddy-to-namesilos/"},{"categories":["乱七八糟"],"content":"尾声 把域名放在境外服务商还是挺方便的，效率挺高，也就半小时左右弄完了，我记得多年前从国内一个什么华夏X网之类的（忘了叫什么了）转移一个域名，乱七八糟的破事花了10多天，不知道现在是变好了还是变得更烂了。为了省事，这次直接在 Namesilo 续费了 3 年，省得折腾了。 ","date":"2016-10-22","objectID":"/domain-transfer-godaddy-to-namesilos/:4:0","tags":["域名"],"title":"域名从 Godaddy 转移至 Namesilo","uri":"/domain-transfer-godaddy-to-namesilos/"},{"categories":["乱七八糟"],"content":"Hexo 升级 3.2.2 遇到的问题","date":"2016-07-24","objectID":"/hexo-upgrade-to-3.2.2/","tags":["Hexo"],"title":"Hexo 升级 3.2.2 遇到的问题","uri":"/hexo-upgrade-to-3.2.2/"},{"categories":["乱七八糟"],"content":"蛋疼 悲剧值班的周末，翻了下 Hexo 官方，看到许多人都升级到 v3.2.2 了，虽然明知道每次升级都很坑，但是值班本来也无聊，于是折腾开始了。 ","date":"2016-07-24","objectID":"/hexo-upgrade-to-3.2.2/:1:0","tags":["Hexo"],"title":"Hexo 升级 3.2.2 遇到的问题","uri":"/hexo-upgrade-to-3.2.2/"},{"categories":["乱七八糟"],"content":"开始 鉴于以前每次升级都很蛋疼，这次学聪明了，先备份。我是直打包整个 Hexo 目录扔到其他盘。 说是升级，其实相当于全新安装了，新建 Hexo 目录，目录内 Git Bash here ，官方步骤： npm install hexo-cli -g hexo init npm install 完成后，把原来的 source 目录拷贝进来，迁移数据。 _config.yml 不建议用原来的，以前的 Hexo 版本很多插件配置都是放在这里的，现在改了，直接用容易出错。我是怕了，所有配置都重新来了一遍，包括插件。 然后试一下。 hexo g \u0026\u0026 hexo s INFO Start processing INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.INFO Start processing 没报错，只出现几个 WARN ，按照关键字搜索了一下大致是我的 node.js 版本高了，我用的 6.3.1，建议换成 5.x，避免不必要的麻烦。 ","date":"2016-07-24","objectID":"/hexo-upgrade-to-3.2.2/:2:0","tags":["Hexo"],"title":"Hexo 升级 3.2.2 遇到的问题","uri":"/hexo-upgrade-to-3.2.2/"},{"categories":["乱七八糟"],"content":"hexo sever 端口占用 本来打算调试下直接部署，浏览器打开 localhost:4000，死活打不开，一直缓冲中。 尝试换个端口: hexo s -p 4444 INFO Start processing INFO Hexo is running at http://localhost:4444/. Press Ctrl+C to stop. 再刷新就没问题了，看来是端口被占用了。 看看是什么在占用，Windows 下： netstat -aon|findstr \"4000\" LISTENING 后面的数字是 pid tasklist|findstr \"pid\" 一个 FoxitProtect.exe 在占用，是前几天装的的 福昕PDF阅读器，直接卸载掉。 ","date":"2016-07-24","objectID":"/hexo-upgrade-to-3.2.2/:3:0","tags":["Hexo"],"title":"Hexo 升级 3.2.2 遇到的问题","uri":"/hexo-upgrade-to-3.2.2/"},{"categories":["乱七八糟"],"content":"更新主题 没什么说的，用的还是 Next 主题 ，顺带一起更新为最新版了，然后又花了点时间把以前修改过的地方一点一点改过来。 ","date":"2016-07-24","objectID":"/hexo-upgrade-to-3.2.2/:4:0","tags":["Hexo"],"title":"Hexo 升级 3.2.2 遇到的问题","uri":"/hexo-upgrade-to-3.2.2/"},{"categories":["乱七八糟"],"content":"gulp-imagemin 插件问题 前两天用了 gulp 压缩 hexo 静态资源 ，Hexo 更新后报错： events.js:141 throw er; // Unhandled 'error' event ^ 我翻了好久才确定不是更新 Hexo 的原因，而是 gulp-imagemin 这个插件自己这两天也更新了一个版本 3.0.2，我当前环境一更新到这个版本就出错，原因不明，只能安装前几天还正常运行的版本 3.0.1。 npm install gulp-imagemin@3.0.1 --save ","date":"2016-07-24","objectID":"/hexo-upgrade-to-3.2.2/:5:0","tags":["Hexo"],"title":"Hexo 升级 3.2.2 遇到的问题","uri":"/hexo-upgrade-to-3.2.2/"},{"categories":["乱七八糟"],"content":"rss 页面报错 用 hexo-generator-feed 生成的 atom.xml 报错: This page contains the following errors: error on line xxx at column xxx: Input is not proper UTF-8, indicate encoding ! Bytes: 0xE5 0x89 0x8D 0xE8 Below is a rendering of the page up to the first error. 搜索了下 大致是 rss 页面含有隐藏的字符，或者由于 CDATA 的结束符号是“]]\u003e”，所以CDATA中不能包含“]]\u003e”，由于 CDATA 中的所有标记、实体引用都被忽略，所以 CDATA 不能嵌套使用等原因，懒得搞了，先禁止掉。 ","date":"2016-07-24","objectID":"/hexo-upgrade-to-3.2.2/:6:0","tags":["Hexo"],"title":"Hexo 升级 3.2.2 遇到的问题","uri":"/hexo-upgrade-to-3.2.2/"},{"categories":["乱七八糟"],"content":"总结 由于 npm 坑爹的速度和杂七杂八的小问题，使得每次更新都花费大半天的时间，下次不手贱了，能用就行。 ","date":"2016-07-24","objectID":"/hexo-upgrade-to-3.2.2/:7:0","tags":["Hexo"],"title":"Hexo 升级 3.2.2 遇到的问题","uri":"/hexo-upgrade-to-3.2.2/"},{"categories":["乱七八糟"],"content":"使用 gulp 压缩 hexo 静态资源","date":"2016-07-20","objectID":"/hexo-gulp-compres/","tags":["Hexo","Gulp"],"title":"使用 gulp 压缩 hexo 静态资源","uri":"/hexo-gulp-compres/"},{"categories":["乱七八糟"],"content":"前言 前两天把博客托管到 Coding，相比以前放在 Github 访问速度有了不错的提升。 今天休息没事，想着再优化下，查看页面源码发现代码未压缩，于是到 Hexo 插件库看了下，找到个 hexo-all-minifier ，但是我安装下来一直报错，搜索过程中找到基于 gulp 的几个压缩插件，马上试试。 ","date":"2016-07-20","objectID":"/hexo-gulp-compres/:1:0","tags":["Hexo","Gulp"],"title":"使用 gulp 压缩 hexo 静态资源","uri":"/hexo-gulp-compres/"},{"categories":["乱七八糟"],"content":"关于 gulp gulp 的官方定义非常简洁：基于文件流的构建系统。 #说人话系列#：gulp 是前端开发过程中对代码进行构建的工具，是自动化项目的构建利器；她不仅能对网站资源进行优化，而且在开发过程中很多重复的任务能够使用正确的工具自动完成。 ","date":"2016-07-20","objectID":"/hexo-gulp-compres/:2:0","tags":["Hexo","Gulp"],"title":"使用 gulp 压缩 hexo 静态资源","uri":"/hexo-gulp-compres/"},{"categories":["乱七八糟"],"content":"安装 gulp 及相关插件 主要安装以下几个： 基本：gulp CSS 压缩：gulp-clean-css （原名 gulp-minify-css） JS 压缩：gulp-uglify HTML 压缩：gulp-htmlmin , gulp-htmlclean 图片压缩：gulp-imagemin npm install gulp -g npm install gulp-clean-css gulp-uglify gulp-htmlmin gulp-imagemin gulp-htmlclean gulp --save 安装完成后打开 hexo 目录下的 package.json 文件，查看是否安装了上述插件，比如我的： { \"name\": \"hexo-site\", \"version\": \"0.0.0\", \"private\": true, \"hexo\": { \"version\": \"3.2.0\" }, \"dependencies\": { \"gulp\": \"^3.9.1\", \"gulp-clean-css\": \"^2.0.11\", \"gulp-htmlclean\": \"^2.7.6\", \"gulp-htmlmin\": \"^2.0.0\", \"gulp-imagemin\": \"^3.0.1\", \"gulp-uglify\": \"^1.5.4\", \"hexo\": \"^3.2.0\", \"hexo-deployer-git\": \"^0.1.0\", \"hexo-generator-archive\": \"^0.1.4\", \"hexo-generator-category\": \"^0.1.3\", \"hexo-generator-index\": \"^0.2.0\", \"hexo-generator-tag\": \"^0.2.0\", \"hexo-renderer-ejs\": \"^0.2.0\", \"hexo-renderer-marked\": \"^0.2.10\", \"hexo-renderer-stylus\": \"^0.3.1\", \"hexo-server\": \"^0.2.0\" } } ","date":"2016-07-20","objectID":"/hexo-gulp-compres/:3:0","tags":["Hexo","Gulp"],"title":"使用 gulp 压缩 hexo 静态资源","uri":"/hexo-gulp-compres/"},{"categories":["乱七八糟"],"content":"编写 gulpfile.js hexo 同级目录下新建文件 gulpfile.js，编辑内容如下，适当修改路径。 比如图片等附件我一直沿用以前使用 WordPress 留下来的 uploads 目录。 其余的插件设置已经在注释中，所有使用说明来自 一点 博客的构建工具分类下文章。 var gulp = require('gulp'); minifycss = require('gulp-clean-css'); uglify = require('gulp-uglify'); htmlmin = require('gulp-htmlmin'); htmlclean = require('gulp-htmlclean'); imagemin = require('gulp-imagemin'); // 压缩 public 目录内 css gulp.task('minify-css', function() { return gulp.src('./public/**/*.css') .pipe(minifycss({ advanced: true,//类型：Boolean 默认：true [是否开启高级优化（合并选择器等）] compatibility: 'ie7',//保留ie7及以下兼容写法 类型：String 默认：''or'*' [启用兼容模式； 'ie7'：IE7兼容模式，'ie8'：IE8兼容模式，'*'：IE9+兼容模式] keepBreaks: true,//类型：Boolean 默认：false [是否保留换行] keepSpecialComments: '*' //保留所有特殊前缀 当你用autoprefixer生成的浏览器前缀，如果不加这个参数，有可能将会删除你的部分前缀 })) .pipe(gulp.dest('./public')); }); // 压缩 public 目录内 html gulp.task('minify-html', function() { return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin({ removeComments: true,//清除 HTML 注释 collapseWhitespace: true,//压缩 HTML collapseBooleanAttributes: true,//省略布尔属性的值 \u003cinput checked=\"true\"/\u003e ==\u003e \u003cinput /\u003e removeEmptyAttributes: true,//删除所有空格作属性值 \u003cinput id=\"\" /\u003e ==\u003e \u003cinput /\u003e removeScriptTypeAttributes: true,//删除 \u003cscript\u003e 的 type=\"text/javascript\" removeStyleLinkTypeAttributes: true,//删除 \u003cstyle\u003e 和 \u003clink\u003e 的 type=\"text/css\" minifyJS: true,//压缩页面 JS minifyCSS: true//压缩页面 CSS })) .pipe(gulp.dest('./public')) }); // 压缩 public/js 目录内 js gulp.task('minify-js', function() { return gulp.src('./public/**/*.js') .pipe(uglify()) .pipe(gulp.dest('./public')); }); // 压缩 public/uploads 目录内图片 gulp.task('minify-images', function() { gulp.src('./public/uploads/**/*.*') .pipe(imagemin({ optimizationLevel: 5, //类型：Number 默认：3 取值范围：0-7（优化等级） progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片 interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染 multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化 })) .pipe(gulp.dest('./public/uploads')); }); // 执行 gulp 命令时执行的任务 gulp.task('default', [ 'minify-html','minify-css','minify-js','minify-images' ]); ","date":"2016-07-20","objectID":"/hexo-gulp-compres/:4:0","tags":["Hexo","Gulp"],"title":"使用 gulp 压缩 hexo 静态资源","uri":"/hexo-gulp-compres/"},{"categories":["乱七八糟"],"content":"命令执行 hexo clean hexo g \u0026\u0026 gulp gulp 执行压缩 ","date":"2016-07-20","objectID":"/hexo-gulp-compres/:5:0","tags":["Hexo","Gulp"],"title":"使用 gulp 压缩 hexo 静态资源","uri":"/hexo-gulp-compres/"},{"categories":["乱七八糟"],"content":"效果比对 截取了整个 public 目录 压缩前后大小变化图： 压缩前 压缩后 貌似压缩得让我不够满意，还是我哪里没弄好。 不管了，先部署上去看看。 hexo d 以后生成、压缩、部署也可以连起来。 hexo g \u0026\u0026 gulp \u0026\u0026 hexo d 完成后查看页面源码，整个页面代码都压缩了，实际打开感觉也是比以前快了点。 ","date":"2016-07-20","objectID":"/hexo-gulp-compres/:6:0","tags":["Hexo","Gulp"],"title":"使用 gulp 压缩 hexo 静态资源","uri":"/hexo-gulp-compres/"},{"categories":["乱七八糟"],"content":"待更新 先到这里，以后再翻翻资料。 ","date":"2016-07-20","objectID":"/hexo-gulp-compres/:7:0","tags":["Hexo","Gulp"],"title":"使用 gulp 压缩 hexo 静态资源","uri":"/hexo-gulp-compres/"},{"categories":["学习备忘"],"content":"Hexo 多部署--同时使用 Coding 和 Github 托管博客","date":"2016-07-18","objectID":"/hexo-deploy/","tags":["Hexo"],"title":"Hexo 多部署--同时使用 Coding 和 Github 托管博客","uri":"/hexo-deploy/"},{"categories":["学习备忘"],"content":"由于八达岭内网络环境的复杂性，使得部署在 Github 的博客时常抽风，访问体验不是那么的好，所以想想还是放在 Coding Pages 上好了。部署的时候同时部署到 Github，有需要直接解析回来，Github 托管不说了，记录下部署到 Coding Pages 。 ","date":"2016-07-18","objectID":"/hexo-deploy/:0:0","tags":["Hexo"],"title":"Hexo 多部署--同时使用 Coding 和 Github 托管博客","uri":"/hexo-deploy/"},{"categories":["学习备忘"],"content":"关于 Coding Pages Coding Pages 是一个免费的静态网页托管和演示服务。您可以使用 Coding Pages 托管博客、项目官网等静态网页，还可以绑定自定义域名。 Coding Pages 支持用户 Pages 演示和项目 Pages 演示。用户 Pages 可以通过 {user_name}.coding.me 形式的 URL 直接访问，适合用作个人或组织的演示网站；项目 Pages 需通过 {user_name}.coding.me/{project_name} 形式的 URL 访问，适合用作项目的演示网站。 ","date":"2016-07-18","objectID":"/hexo-deploy/:1:0","tags":["Hexo"],"title":"Hexo 多部署--同时使用 Coding 和 Github 托管博客","uri":"/hexo-deploy/"},{"categories":["学习备忘"],"content":"创建 Coding Pages 登陆 Coding.net 创建一个与用户名一样的项目，切到 Pages 服务。 开启 Pages 服务 绑定域名，开启 pages 服务，分支 coding-pages 。 ","date":"2016-07-18","objectID":"/hexo-deploy/:2:0","tags":["Hexo"],"title":"Hexo 多部署--同时使用 Coding 和 Github 托管博客","uri":"/hexo-deploy/"},{"categories":["学习备忘"],"content":"项目部署 SSH 公钥 命令行终端下： ssh-keygen -t rsa -b 4096 -C \"your_email@example.com(注册用的email)\" 推荐一路按回车，完成后，进入 ssh 目录并列出文件： cd ~/.ssh/ ls 看到生成了id_rsa.pub。 cat id_rsa.pub 复制出长长的字符串内容，粘贴到 Coding 的账号设置下的 SSH 公钥栏中。 SSH 公匙 ","date":"2016-07-18","objectID":"/hexo-deploy/:3:0","tags":["Hexo"],"title":"Hexo 多部署--同时使用 Coding 和 Github 托管博客","uri":"/hexo-deploy/"},{"categories":["学习备忘"],"content":"Hexo 多部署 编辑 Hexo 配置文件 _config.yml 部署部分，格式如下自行调整： deploy: type: git repo: coding: git@git.coding.net:username/username.git,coding-pages github: git@github.com:username/username.github.io.git,master 暂时到这。 ","date":"2016-07-18","objectID":"/hexo-deploy/:4:0","tags":["Hexo"],"title":"Hexo 多部署--同时使用 Coding 和 Github 托管博客","uri":"/hexo-deploy/"},{"categories":["乱七八糟"],"content":"NETGEAR®WNDR4300 刷 OpenWrt 石像鬼固件","date":"2016-02-03","objectID":"/netgear-wndr4300-gargoyle/","tags":["NETGEAR","石像鬼固件"],"title":"NETGEAR®WNDR4300 刷 OpenWrt 石像鬼固件","uri":"/netgear-wndr4300-gargoyle/"},{"categories":["乱七八糟"],"content":"新房装修那边准备装宽带了，用了这么久的 8M 小水管，这次打算装个 50M 的，100M 感觉没必要，因为上行限制和 50M 一样，都是 4M，下行的话，好像现在也没什么需要长时间下载的，家里需要网络接入的的东西也不多，就两台笔记本、一台台式机、加上几部手机和智能电视之类的，而且这些设备一起用的概率极小，感觉 50M 也够了。 定下来就打算买个适合的路由器了，几个房间隔得也不算远，穿墙能力需求不高，主要是稳定就行。在知乎和什么值得买搜索了一会后，被安利了能刷 OpenWrt 的路由器才是好路由器这个观点，于是打算入手这个 NETGEAR WNDR4300 无线路由器。 WNDR4300 是 NETGEAR 网件出品的中端路由器，千兆双频，300Mbps + 450Mbps 的无线连接，1000 Mbps 有线端口 ，内置 5 根天线（两根 5 G + 三根 2.4 G ），采用 Atheros AR9344 处理器，频率 550 MHz，128M DDR2 内存，128M ROM，USB 可接硬盘进行共享，并带有独立的 WiFi 开关可实现定时无线开关，原生设置页面简洁易用还可以使用网件精灵实现：远程设置、网络映射、家长控制以及媒体播放等功能，而 USB 脱机下载、USB 3G 网卡连接都是相较比较吸引人的小亮点。总体看是 WNDR4000 的强力升级版，性能优越，总体来说更适合网络使用较多并有一定云需求的用户使用的无线路由器。 网件的中端货，性价比较高，主要是这货好刷啊，好多 OpenWrt 刷机教程都是拿这款来做例子的。 在狗东和狮子宁上看了一遍，狗东自营 369 元，狮子宁刚好在搞活动 299 元，不多说，直接下单。 今天刚下班，走到家门口，刚好碰到快递小哥，签收拿了回来。 包装盒 全家福 整个盒子黑乎乎的，LOGO 也是黑印的，看起来好廉价，但不得不说网线用料确实好，水晶头是金属贴边的。 通电状态 还有个支架，可以立起来，看起来逼格高一点，懒得装了，我喜欢横放着，后面的 WAN 口和4 个 LAN 口之间没有一个网口的距离，应该是 V1 版本。好像国行也只有 V1 版本。 插入网线，进入原生界面，太搓了： 原生界面 赶紧刷个 OpenWrt，用的这个官方包，为了图省事，用的一个小软件TFTP 中文版刷入的，挺简单的： 技巧 把电脑用网线连在路由器，电脑改为固定 IP：192.168.1.2，子网掩码：255.255.255.0，IP 网关：192.168.1.1 路由器先断电，用细尖物品（我用的牙签）插入路由器背面标有restore factory settings的红色小圆孔，并卡住不放。 按下电源开关，一直看到电源灯由黄色闪烁到绿色闪烁，才松开后面卡住物品。 使用上面那个 TFTP 软件刷入，路由器IP填192.168.1.1，密码留空，固件选择刚才下载的官方固件，点击刷新固件，直到软件显示绿色圆点，再等一会，等显示灯正常后，刷机成功。 刷完随便截 2 张图： OpenWrt界面 配置网络连接： OpenWrt界面 能联网后，安装中文包，选择System - Software，按下图箭头操作： OpenWrt界面 OpenWrt官方包有点小问题，还是决定刷个第三方固件石像鬼，用的是下面这个固件，貌似作者更新很勤快。 固件下载：石像鬼gargoyle固件 我刷的是 1.9 正式版 G5，先试用，不行再换。 因为本身就是 OpenWrt 了，直接 WEB 后台固件更新那里上传包刷就行： 完成来个图： 石像鬼界面 这个固件具体在线使用教程：石像鬼gargoyle固件 R51 使用教程 慢慢看再具体设置吧，先到这。 ","date":"2016-02-03","objectID":"/netgear-wndr4300-gargoyle/:0:0","tags":["NETGEAR","石像鬼固件"],"title":"NETGEAR®WNDR4300 刷 OpenWrt 石像鬼固件","uri":"/netgear-wndr4300-gargoyle/"},{"categories":["生活点滴"],"content":"买了本书 - 《智识分子：做个复杂的现代人》","date":"2016-01-28","objectID":"/zsfzy/","tags":["读书"],"title":"买了本书 - 《智识分子：做个复杂的现代人》","uri":"/zsfzy/"},{"categories":["生活点滴"],"content":"我的博客有个链接学而时嘻之，这是以前别人推荐的博客，第一次进去看就感觉文章挺有意思，于是一直把它放在我的链接表里面，有空就去看看，2014 年的时候作者出了一本书《万万没想到：用理工科思维理解世界》，当时就买了一本支持了一下，前天晚上上网没事做，想进去看看作者有博文更新没有，一进去就发现作者又出书了，马上狗东买了一本继续支持，狗东物流还算挺快，今晚下班回家，这本《智识分子：做个复杂的现代人》到了。 单本 看封面包装这段专治小资、童话、鸡汤类的幻想就让人忍不住想看了。（笑） 两本书合照： 两书合照 放在床头，每晚睡前花点时间来阅读，2015 年还信誓旦旦的要说要多读书，回头想想那惨淡的阅读量，唉，看来只能在 2016 年补了。 愿我懒惰远离我！ ","date":"2016-01-28","objectID":"/zsfzy/:0:0","tags":["读书"],"title":"买了本书 - 《智识分子：做个复杂的现代人》","uri":"/zsfzy/"},{"categories":["乱七八糟"],"content":"Hello Hexo","date":"2016-01-01","objectID":"/hello-hexo/","tags":["Hexo"],"title":"Hello Hexo","uri":"/hello-hexo/"},{"categories":["乱七八糟"],"content":"换到 Hexo，新的开始！ 博客托管在 GitHub，有时候会抽风，无所谓了，毕竟大部分是给自己看的。 第一次用 Markdown 写东西，慢慢学。好多文章格式还要调整，慢慢来。 WordPress 转 Hexo 后评论都没了，但是数据我会一直保留着，或许有一天，再翻来看看，感谢这么多年的各位。 ","date":"2016-01-01","objectID":"/hello-hexo/:0:0","tags":["Hexo"],"title":"Hello Hexo","uri":"/hello-hexo/"},{"categories":["生活点滴"],"content":"Filco忍者87二代侧刻青轴","date":"2015-06-25","objectID":"/fkbn87mc-efb2/","tags":["Filco","机械键盘"],"title":"Filco 忍者 87 二代侧刻青轴","uri":"/fkbn87mc-efb2/"},{"categories":["生活点滴"],"content":"凑目录 去年年初的时候，还一直用着薄膜键盘，那时候用的时间也比较多，经常一把键盘按几个月就不好用了，实在受不了按下去那软绵绵的手感，于是尝鲜买了一把入门级60%布局机械键盘KBC Poker2，第一次买，选了最中庸的茶轴，这一年来使用下来挺满意的，60%键盘携带很方便，虽然布局所限一些按键需要配合Fn键才按得出来，不过这一年下来已经习惯了，茶轴虽然段落感没那么强，但感觉手感也还不错。 就这样入了坑，也不算发烧，只是闲的时候挺喜欢看这一类的东西，也不仅限于键盘，经常在色魔张大妈（SMZDM.COM)看各种开箱，感觉挺有意思的。前2个月又看到有人晒物：机械键盘一步退烧，日淘Filco 斐尔可 忍者二代青轴 机械键盘。越看越喜欢，忍不住点进日淘链接一看，已经没货了，就暂时退烧了~ ","date":"2015-06-25","objectID":"/fkbn87mc-efb2/:1:0","tags":["Filco","机械键盘"],"title":"Filco 忍者 87 二代侧刻青轴","uri":"/fkbn87mc-efb2/"},{"categories":["生活点滴"],"content":"再次发烧 大约半个月前，外出学习，在酒店没事干，又点了一次那个链接，发现居然有货了。高兴之余发现一件事情：我没有信用卡啊，说了好多次要办一张，拖延症犯了，嫌麻烦一直没弄，想起博友@skywing好像做过海淘的，微信联系了一下，他说可以的，把链接发给他，得到回复说日亚上这家那时需要1-3周才配送，再转运过来时间就长咯，而且转运还要验证地址，需要身份证资料之类的。还是嫌麻烦，也不好意思麻烦人家，纠结之下想想还是算了。 实在不行马云家看看吧，问了一圈下来发现我要的这个型号 FKBN87MC/EFB2（黑色忍者87二代侧刻青轴）到处都没有货。要不就是没侧刻，要不就是没青轴。87侧刻青轴只有定制的那种，就是带各种花哨的壳子，什么紫檀红、珍珠银、海魂蓝、法拉利红之类的，逼格看起来是比较高，但是我个人不太喜欢。主要这种定制还死贵，104键的1300+的价格都差不多可以上静电容键盘了。87键便宜200块左右，还得预定。主要还是不喜欢这种外壳，就没买。 又过了2天，询问的那家日本代购给我发了个消息，说黑色那个今天有3把，还没上架呢，看你问好多次了，需要吗？问了下价格，日本直邮890，不多说直接买了。 等了8天，期间查过几次物流，从日本东京到广州后就卡了几天，害得我以为被税了，还好今天顺利到了。 ","date":"2015-06-25","objectID":"/fkbn87mc-efb2/:2:0","tags":["Filco","机械键盘"],"title":"Filco 忍者 87 二代侧刻青轴","uri":"/fkbn87mc-efb2/"},{"categories":["生活点滴"],"content":"到货拆箱 收到的包裹，EMS真粗暴，箱子都有点破了： Filco忍者87二代包裹 拆开，里面看起来没什么事，夹缝塞了几个空气袋，7个爆了4个，只有3个鼓鼓的： Filco忍者87二代盒子 AirPlus 外包装正面，大大的忍字： Filco忍者87二代外包装正面 外包装背面，Make in Taiwan，没什么好奇怪的，Filco现在产地都是台湾。 Filco忍者87二代外包装背面 拆开包装，那个透明盖没坏，我看很多开箱都说被物流摔裂了，打开全后就是全家福：键盘、转换头、一个拔键器和两个更换的win键帽： Filco忍者87二代透明盖 Filco忍者87二代全家福 键盘正面、侧面和背面铭牌： Filco忍者87二代正面 Filco忍者87二代侧面 Filco忍者87二代背面 拔键器拔下ESC键，青轴无误，这里多说一下，关于轴的选择，完全是个人喜好，没有XX轴感受好过XX轴的说法，毕竟手感这种东西，怎么说都说不清楚，最好的方法是自己试一试，看看那种轴适合你，我就喜欢青轴清脆的类打字机声音，就是半夜太吵怕影响家人休息，也好，给自己一个早睡的理由。 Filco忍者87二代青轴I Filco忍者87二代青轴II 这盘文章就是用这把键盘打出来的，要是还有下一把键盘，估计就直接上静电容了。 最后放个在色魔张大妈上买的奇葩书、还有和KBC Poker2的合照，桌面太乱见谅： 奇葩书 Filco忍者87二代和Poker2合照 ","date":"2015-06-25","objectID":"/fkbn87mc-efb2/:3:0","tags":["Filco","机械键盘"],"title":"Filco 忍者 87 二代侧刻青轴","uri":"/fkbn87mc-efb2/"},{"categories":["乱七八糟"],"content":"DNS 解析换到 CloudXNS","date":"2015-06-22","objectID":"/cloudxns/","tags":["CloudXNS"],"title":"DNS 解析换到 CloudXNS","uri":"/cloudxns/"},{"categories":["乱七八糟"],"content":"一直以来用的都是DNSPod（好像现在被鹅厂收购了），期间有过几次服务不稳定，速度慢的情况，但是本来就是小博客，无所谓，能用就行，也没打算换。 今天网上有朋友推荐了这个CloudXNS，说是多条线路切换，精确到省+运营商，我也刚好闲的没事，简单体验一下。 ","date":"2015-06-22","objectID":"/cloudxns/:0:0","tags":["CloudXNS"],"title":"DNS 解析换到 CloudXNS","uri":"/cloudxns/"},{"categories":["乱七八糟"],"content":"CloudX简介 CloudXNS是中国最大的电信中立互联网基础设施服务商——世纪互联集团（NASDAQ：VNET）旗下北京快网自主研发全新架构的智能DNS解析系统，提供多元化智能DNS解析服务。 CloudXNS在响应、分发、存储及负载均衡等设计中使用北京快网私有DNS协议，所有的解析生效都是实时生效,自助解析非常简单方便，一目了然。 CloudXNS音：[klaudz ns]，是Cloud eXtended Name Service的缩写，意为扩展的智能DNS系统，X取自extend。 具体官方介绍可以看这里：CloudXNS 面向云计算的智能DNS系统 ","date":"2015-06-22","objectID":"/cloudxns/:1:0","tags":["CloudXNS"],"title":"DNS 解析换到 CloudXNS","uri":"/cloudxns/"},{"categories":["乱七八糟"],"content":"更改NS 常规注册登陆后添加域名，提示未接管。 未接管截图 赶紧去godaddy那里NS换成上面4个地址，不一会就生效了。 ","date":"2015-06-22","objectID":"/cloudxns/:2:0","tags":["CloudXNS"],"title":"DNS 解析换到 CloudXNS","uri":"/cloudxns/"},{"categories":["乱七八糟"],"content":"添加解析记录 发现CloudXNS这里是可以导入导出记录的： CloudXNS导入导出记录 以往我都是手动添加的，反正一般就是做个A记录之类的，记录也不多，手动输入可能还快一点，看到这个想试试，到DNSPod后台看了一下，发现找不到导出的地方，算了~这里支持多种记录类型。 CloudXNS记录类型 DNSPod那里自定义线路需要企业套餐，而这里是可以自定义线路的（如下图），根据需要自行选择： CloudXNS添加记录 ","date":"2015-06-22","objectID":"/cloudxns/:3:0","tags":["CloudXNS"],"title":"DNS 解析换到 CloudXNS","uri":"/cloudxns/"},{"categories":["乱七八糟"],"content":"X优化 记录界面有个X优化，不懂是什么，看了下官方说明： 摘要 X优化是一种智能托管解析服务 当开启X优化后当前线路上的所有A记录解析将按智能策略解析（在X优化开启状态下添加的本线路上的A记录，也会按智能策略解析） 当您有多个IP解析时，只要您开启了X优化，就算全部都是全网默认我们也能给您的用户找到最适合的ip 例如在电信默认线路下填入了众多电信IP ，联通IP，移动IP 当开启X优化后，X优化将根据用户配置的灵敏度及匹配数，选择较优的电信IP 联通及其它IP将智能帮您剔除，从而达到最优化的访问线路 注：X优化只能在有A记录的线路上开启 好像有点用，果断开启。 ","date":"2015-06-22","objectID":"/cloudxns/:4:0","tags":["CloudXNS"],"title":"DNS 解析换到 CloudXNS","uri":"/cloudxns/"},{"categories":["乱七八糟"],"content":"设置监控任务 常规通知有邮件邮件通知，我没用，用了微信绑定。 CloudXNS监控任务 大致就是这样，刚用，只觉得后台体验挺好，具体用一段时间再说吧。 还有，提交了一个私人线路申请，不知道能不能审核下来。再就是据说还提供免费CDN的，不过我找不到在哪里，估计也是要申请开通吧，再说吧。 ","date":"2015-06-22","objectID":"/cloudxns/:5:0","tags":["CloudXNS"],"title":"DNS 解析换到 CloudXNS","uri":"/cloudxns/"},{"categories":["学习备忘"],"content":"使用 StartSSL™ 免费 SSL 证书开启整站 HTTPS","date":"2015-06-05","objectID":"/startssl-https/","tags":["SSL"],"title":"使用 StartSSL™ 免费 SSL 证书开启整站 HTTPS","uri":"/startssl-https/"},{"categories":["学习备忘"],"content":"失眠好几天了，大半夜睡不着，但是头又晕呼呼的，翻点资料瞎折腾的，估计写得乱七八糟，就这样了，纯记录。 用的是StartSSL™ 提供的证书，免费一年，据说到期可以再生成一个继续用。 怎么申请StartSSL™ 的证书的资料网上一搜一大堆，懒得写了。这里简单记录一下nginx下安装配置ssl，以免下次我又要到处翻资料。 申请完得到两个文件ssl.crt和ssl.key。 系统环境约定：CentOS6.4 64位 + 军哥的一键包LNMP1.1。 （写完这篇的时候发现军哥LNMP1.2发布了，默认启用spdy和增加ssl范例配置，本文还是以LNMP1.1为例）。 nginx配置目录在/usr/local/server/nginx/conf/，把这两个文件上传到此目录，在此目录下： 通过Openssl安装，免去nginx启动每次输入公匙。 openssl rsa -in ssl.key -out /usr/local/server/nginx/conf/ssl_ca.key 提示输入公匙（申请的时候自己设的），完成后得到一个ssl_ca.key 获取合并Startssl的证书，解决Firefox不信任问题： wget http://www.startssl.com/certs/ca.pem wget http://www.startssl.com/certs/sub.class1.server.ca.pem cat ssl.crt sub.class1.server.ca.pem ca.pem \u003e /usr/local/server/nginx/conf/ssl_ca.crt 这个ssl_ca.crt还不能直接使用，需要修改下，真的用不惯vi，所以： nano /usr/local/server/nginx/conf/ssl_ca.crt 找到一处： —–END CERTIFICATE———-BEGIN CERTIFICATE—– 加个换行，改成 —–END CERTIFICATE—– —–BEGIN CERTIFICATE—– 反正左右各5个横杠，保存! 这时候已经得到两个文件：ssl_ca.key和ssl_ca.crt 接下来配置nginx，首先启用spdy。 开启spdy需要较新版本Openssl，先下载解压，我这里是在/tmp目录操作: cd /tmp wget http://www.openssl.org/source/openssl-1.0.1e.tar.gz tar zxvpf openssl-1.0.1e.tar.gz 编辑lnmp（或lnmp1.1-full）目录下upgrade_nginx.sh。 找到这一行： /configure --user=www --group=www --prefix=/usr/local/nginx 在这行的末尾加上: --with-http_spdy_module --with-openssl=/tmp/openssl-1.0.1e (注意：这行前有个空格，目录也要对应，我之前下载在tmp目录） 保存后，执行upgrade_nginx.sh升级nginx,我原来是1.6，直接升级到最新的1.9.2。 完成后可以运行下面这行来查看有没有spdy模块: /usr/local/nginx/sbin/nginx -V #查看nginx安装了什么模块 接着编辑/usr/local/nginx/conf/vhost下的yourdomain.conf文件。 主要部分，监听443端口，开启SSL，启用spdy，下面的SSLv3据说有漏洞，自行考虑。 listen 443 ssl spdy; #listen [::]:80; ssl on; ssl_certificate /usr/local/nginx/conf/ssl_ca.crt; ssl_certificate_key /usr/local/nginx/conf/ssl_ca.key; ssl_session_timeout 5m; ssl_protocols SSLv2 SSLv3 TLSv1; ssl_prefer_server_ciphers on; ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; 上面这段已经弃用，// 2015.8.25更新如下，解决Chrome显示“之间的连接采用了过时的加密技术”的问题： listen 443 ssl spdy; #listen [::]:80; ssl on; ssl_certificate /usr/local/nginx/conf/ssl_ca.crt; ssl_certificate_key /usr/local/nginx/conf/ssl_ca.key; ssl_session_timeout 5m; ssl_session_cache shared:SSL:10m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; ssl_ciphers \"ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4\"; 监听80端口，http强制跳转https： server { listen 80; server_name clearsky.me www.clearsky.me; rewrite ^/(.*)$ https://clearsky.me/$1 permanent; } 重启Nginx后。需要让页面内资源支持https，我用的最简单粗暴的： WordPress设置-常规，把WordPress地址（URL）和 站点地址（URL）都设置成https。 然后进数据库，文章内容和评论里面批量替换链接（注意备份），SQL执行： UPDATE wp_posts SET post_content = REPLACE (post_content, 'http://example.com', 'https://example.com'); UPDATE wp_posts SET post_content = REPLACE (post_content, 'http://example.com', 'https://example.com'); UPDATE wp_comments SET comment_content = REPLACE( comment_content, 'http://example.com', 'https://example.com' ); UPDATE wp_comments SET comment_content = REPLACE( comment_content, 'http://example.com', 'https://example.com' ); 我没用上面的，直接用的Search \u0026 Replace插件替换的，挺方便的，反正用什么都注意备份。 排查页面引用的外部资源，改成https的，完成后Chrome浏览器下绿锁应该出现了，其它的浏览器没装，不清楚。 然而，除了装逼之外几乎没什么卵用。 几个问题： 网站打开速度好像慢了。 开启SSL之后就去掉Gravata头像缓存到多说，用自家https的，结果用手机上各种浏览器下看不见头像了。~~还是参照大发的WordPress 缓存Gravatar 头像到本地开启头像缓存，心理作用快一点。 用的hermit插件插入网易云音乐地址肯定没https，所以只要一点下面这首歌的播放按钮，绿锁肯定立马带三角。 这下真的困了，可以睡了。 参考资料： https://www.startssl.com/?app=42 https://line.dreamq.org/1708spdy https://yusky.me/lnmp-enable-ssl-spdy.html https://cyhour.com/directadmin-install-startssl-free-ssl-certificates.html ","date":"2015-06-05","objectID":"/startssl-https/:0:0","tags":["SSL"],"title":"使用 StartSSL™ 免费 SSL 证书开启整站 HTTPS","uri":"/startssl-https/"},{"categories":["生活点滴"],"content":"买了个乐心 S1 体重秤","date":"2015-05-25","objectID":"/lifesense-s1/","tags":["乐心S1体重秤"],"title":"买了个乐心 S1 体重秤","uri":"/lifesense-s1/"},{"categories":["生活点滴"],"content":"最近好像体重下降了，自己又不太确定，想着家里面有个体重秤还是挺有必要的。于是在随便搜了一下，发现现在体重秤也打智能牌，什么乱七八糟的都有，什么测体脂的，骨量的，看得头晕。想想就偶尔称称体重，没必要搞这种，随便买一个低端的就行，本来想买小米那个，不过那货99元还要加15元的配送费，而且看下面又是缺货，实在是烦搞这种饥饿营销。算了。网上看这个乐心S1还挺多人买的，也是99元，也懒得看什么参数功能之类的了，就一体重秤，只要精度正常就行，直接马云家付款拍下了。今天下班回家，包裹到了： 乐心S1包裹 拆开了包裹看正面，我买的是黑色，看着镜面材质还行，挺亮的，一看就是指纹收集器: 乐心s1正面 翻过来看菊花，包裹里还配送4节电池，为什么这个价位都不搞usb充电的？不管了，直接塞进去： 乐心s1背面 再翻回来就显示屏点亮了: 乐心s1点亮屏幕 试试效果，在地板放平了站上去： 称重测试 呵呵，连续试了几次都是这个数值，我身高178，按照两种古老的算法（没依据），（178-100）*0.9=70.2kg，或者（178-105）=73kg，我应该算偏胖。 顺便说下还有这个秤还有蓝牙同步测量数据到微信公众号的功能，支持多人数据统计记录，测量体重而已，我就懒得麻烦了，没去弄。 大概就这样吧，没什么写的，凑凑数，顺便放个上次参加AmazeUI活动送的马克杯。 AmazeUI马克杯 ","date":"2015-05-25","objectID":"/lifesense-s1/:0:0","tags":["乐心S1体重秤"],"title":"买了个乐心 S1 体重秤","uri":"/lifesense-s1/"},{"categories":["生活点滴"],"content":"深圳往事","date":"2015-05-16","objectID":"/memories-of-shenzhen/","tags":["回忆","深圳"],"title":"深圳往事","uri":"/memories-of-shenzhen/"},{"categories":["生活点滴"],"content":"2010 年，他 23 岁，毕业 1 年了，他想做自己喜欢的事情并以此为生，但是他知道没人能理解，因为在别人看来他所谓的正事就是坐在电脑前瞎混，以现在的角度来看当时，事实也的确如此，按照他的做法即便坚持到现在也不会成功。但我可以想象，那个时候每天熬到深夜的他，脸上除了疲倦之外也一定带着开心笑容的吧。 小县城的一个烧烤摊，他独自一人喝了大半件啤酒，他受够了各种眼神，听腻了各种劝诫，带着一股傲气，醉醺醺回家收拾了东西，和父母打了招呼后，第二天买了一张前往深圳的火车票，那张火车票的日期，他现在肯定还记得，那是自己生日过后的第三天，至于为什么选深圳这座城市，一是他给大学舍友打了个电话，答复是：“在深圳，过来呗，一块玩”。二是读大学的时候去图书馆看过一本小说，那本小说他很喜欢，作者是个悲观的胖子，名字极骚，叫慕容雪村，书名也挺装逼，叫做《天堂向左，深圳向右》。 深圳龙岗布吉街头，他刚从 369 公交车下来，站在乱糟糟的天桥下，刚坐了一整晚的长途汽车，浑身胀痛，舍友接他来到租的房子，这栋房子感觉是被挤在其它两栋之间一样，看着挺别扭，进去发现还有电梯，租房在七楼，很小，大概 10 平米左右，还有个卫生间和厨房，床也没有，就一张席子占据了剩下的地方。那晚，他俩在超市买了几罐啤酒和几包酒鬼花生，慢悠悠吃喝着聊天到半夜，聊着大学各种趣事直到睡着，那时的天气闷热潮湿，但他睡得很香，那是在深圳的第一夜。 那段时间他办了一张网吧会员卡，那网吧名字特俗，叫火速网吧，有时候怀疑这是不是个全国连锁店，到哪都能看到叫这个名的，他最喜欢坐 16 号机子，那里是第二排的角落，不会被门口进进出出的人晃到眼睛，离吧台也近，叫东西方便，每天上机就做任务似的海投简历，虽然他知道毛用都没有，但人类就是这么奇怪，期待小概率事件。接着他会看感兴趣的新闻，听听 NightWish 的歌，偶尔玩玩游戏，有个竞技游戏他还挺擅长，有次旁边有个非主流发型哥们，看样子估么着已经连续通宵好几天了，在旁边看了半天，说“操，你对线还挺牛逼，要不你包个通宵咱俩一块玩”。他看了那哥们眼中的狂热，拒绝了，他觉得他和他不一样。 罗湖人才市场，他和舍友已经来过很多次了，但这次他是一个人来的，这期间瞎面试了几次，打了几次杂工，舍友半个月前应聘到一个工厂搞物流，已经搬离龙岗区。他交了 10 块钱门票，随着人群进去，满眼望去都是带着花花绿绿的文件夹的人，在摊位面前相互扯淡。和往常一样，得到的是“回去等等，我们会电话通知”。有个位置上，一个火爆美女正在劲舞，让人误认为错进了车展，美女旁边必然一帅哥，拿着话筒吼着什么\"展示你才能，加入就提成\"之类的，那个时候他突然很想笑，仿佛那话筒飘出一个又一个骗骗骗。。。 说到被骗，前几天他确实刚被骗过，舍友搬走后，一个人负担房租有点吃力了，他想换个便宜点的，在一家潮汕牛肉丸店门前电线杆子上看到个转租的告示，拨了电话，是个女孩，女孩说房子还有一个月到期，但她已经找了其它地方，不想在这住了，钱已经交了，把一个月房租给她搬进来就行，她和房东有点不愉快所以懒得提前退房去扯了，到期后她拿合同再和房东退押金，他想想反正也只需要住一个月，同意了，看房的时候他见到了女孩，斯斯文文，看起来不会说谎那种，他爽快的给了一个月房租。女孩寒暄几句就离开了。第二天房东说女孩已经欠了几个月房租了，那押金根本不够给的。他不想拨那个电话去问些什么了，他知道结果。 布吉街上有个公园，理所应当它叫布吉公园，白天不算热闹，他很喜欢到这里最高处的亭子坐着，能看到一节火车轨道，时不时有一趟火车开过，暖暖的阳光下，听着那咣当当声音，可以很舒服的睡着。后面是一片小树林，偶尔有情侣钻进钻出，神色匆忙。他不敢盯着看，怕扰了这一对对神仙眷侣。亭子的阶梯两旁长凳上经常有人躺着午睡，有次看到一个小伙子，长发披肩，仙风道骨，鼾声正起，手中垂握着一卷古籍，造型古朴，线装蓝色封面，书名那里是白底黑字，看起来像是绝世武功秘籍，凑近了看，是什么小兵传奇。晚上公园会热闹很多，周末还会搭起台子放免费电影，影片一般都很正能量，所以极少人看。大部分人都会集中在中间小广场那一块，随着轰隆隆的音乐跳广场舞。他则喜欢兜着一包红双喜到处瞎转，感受这座公园所发生的喜怒哀乐。后来他不再去这个公园了，因为据说有个人在里面自杀了，他没去证实这个传言，心里默认是真实的了，他感到自己变得悲观了，看不到这座城市阳光的一面。 布吉有条街道两旁挺宽，那里很多摆摊画像的，没事的时候他会跑去那里看着玩，看多了能分出哪个画得比较好，那是个戴黑框眼镜的女孩，她没生意的时候喜欢拿铅笔撑着下巴。到了晚上，这里经常会来两个小伙子组合，一个拉二胡，一个弹吉他，看起来挺怪，但效果很好，尤其拉二胡的很受欢迎，很多人往地上的袋子扔钱。有时这些人会被城管赶，看着他们急急忙忙收东西跑的样子，他和很多路人一样嘻嘻哈哈看热闹，多年以后他无意听过一首歌，那是个乐队，名字挺居家，叫新裤子，歌名叫《没有理想的人不伤心》。 舍友有次放假跑过来请他吃了一顿饭，就在附近的一个馆子，叫毛家，平时也经常路过这里，店面装修得像个神庙，结账台后面的墙上挂着一个的男人画像，自带光芒，平时没钱没敢进来，那天他和舍友打算不醉不归，但是未遂。因为有个菜太下饭了，他扒了四大碗米饭，肚子撑了，喝不下了，那个菜挺有名，叫梅菜扣肉。吃完他和舍友一路走到公交车站，等车的时候谁也没说话，等舍友上车后他感到有好多话要说，一张口又什么也说不出来，磨磨蹭蹭中挤出一句“要是换号码告诉我一声”，就这样看着公车离去，他觉得这个场景很熟悉，毕业那年也是这样送舍友上火车的。只不过那一次，火车离开后，他身边还有伴。 2010 年 10 月 31 日，是个洋节，叫万圣节。那天晚上，他独自游荡在深圳街头，人潮涌动，附近的店面都挂着大头南瓜灯，街边满是卖荧光玩具的，附近台子上那个抽奖送手机的的小哥喊得比平时更卖力了，他抽完一支红双喜，在一个商场门口的台阶坐着发呆，一个拿着一串五颜六色气球的小女孩路过的时候对他说了声“节日快乐”，他没反应过来，下意识应了一句，看着被妈妈牵着离开的女孩，再抬头看看深圳的夜空，他感到，内心深处最后那根羽毛落了下来。 ","date":"2015-05-16","objectID":"/memories-of-shenzhen/:0:0","tags":["回忆","深圳"],"title":"深圳往事","uri":"/memories-of-shenzhen/"},{"categories":["学习备忘"],"content":"Debian7安装LXDE+VNC+Firefox","date":"2015-02-11","objectID":"/debian-lxde-vnc-firefox/","tags":["Debian"],"title":"Debian 7 安装 LXDE + VNC + Firefox","uri":"/debian-lxde-vnc-firefox/"},{"categories":["学习备忘"],"content":"需要搞点挂机的东西，只需要安装firefox + flash支持 + 自动刷新扩展，本来想买个windows挂机宝之类的，后来想想现在用的vps挫是挫了一点，装个桌面环境挂挂机应该还行。 前几天找了个Gnone一键包，用着还凑合，就是现在用的VPS是在是太挫了，硬盘小，安装完硬盘快爆了，想想还是装点轻量级的。 说说我的VPS机器配置： 搬瓦工（bandwagonhost）5G PROMO V2 这款，单核OpenVZ，内存512MB，硬盘5G SSD，系统Debian 7.0 x86 。 本来已经安装lnmp环境，硬盘还剩差不多3个G，勉强还能试试。 ","date":"2015-02-11","objectID":"/debian-lxde-vnc-firefox/:0:0","tags":["Debian"],"title":"Debian 7 安装 LXDE + VNC + Firefox","uri":"/debian-lxde-vnc-firefox/"},{"categories":["学习备忘"],"content":"安装LXDE桌面 root登陆，先更新下： apt-get update 安装lxde ，当然在，这里肯定是最小化安装，多安装个nano主要是等下要编辑文件，不会vi。。。 apt-get install nano xorg lxde-core 安装过程中会弹出一个键盘布局选择，这里直接选默认的就行: 选择默认键盘布局 安装VNC，这里用的是tightvncserver： apt-get install tightvncserver 安装完成后启动VNC: tightvncserver :1 运行后会弹出设置密码，输入两次以便确认，还会提示是否设置一个仅供查看的密码，这里就不需要了，直接输入n，如图： 设置密码 接着先暂停VNC： tightvncserver -kill :1 然后编辑xstartup文件，如上所说，不会vi，还是用nano。 nano ~/.vnc/xstartup 在最后加上两行： lxterminal \u0026 /usr/bin/lxsession -s LXDE \u0026 ‘Ctrl + X’输入y回车，保存退出。 完成后如图： 编辑xstartup ","date":"2015-02-11","objectID":"/debian-lxde-vnc-firefox/:1:0","tags":["Debian"],"title":"Debian 7 安装 LXDE + VNC + Firefox","uri":"/debian-lxde-vnc-firefox/"},{"categories":["学习备忘"],"content":"设置开机启动 新建一个文件tightvncserver： nano /etc/init.d/tightvncserver 里面内容为下面，其中800x600为分辨率，自行修改。 #!/bin/sh ### BEGIN INIT INFO # Provides: tightvncserver # Required-Start: $syslog $remote_fs $network # Required-Stop: $syslog $remote_fs $network # Default-Start: 2 3 4 5 # Default-Stop: 0 1 6 # Short-Description: Starts VNC Server on system start. # Description: Starts tight VNC Server. Script written by James Swineson. ### END INIT INFO # /etc/init.d/tightvncserver VNCUSER='root' case \"$1\" in start) su $VNCUSER -c '/usr/bin/tightvncserver -geometry 800x600 -depth 24 :1' echo \"Starting TightVNC Server for $VNCUSER\" ;; stop) pkill Xtightvnc echo \"TightVNC Server stopped\" ;; *) echo \"Usage: /etc/init.d/tightvncserver {start|stop}\" exit 1 ;; esac exit 0`\u003c/pre\u003e 保存后，加权限： chmod 755 /etc/init.d/tightvncserver 然后： update-rc.d tightvncserver defaults 再次重启VNC： tightvncserver :1 到这里可以用TightVNC Viewer或者VNC-Viewer等VNC软件连接了。 我这里用的是VNC-Viewer, 可以点这里下载: 地址填上你的ip:1，如图： VNC-Viewer 接着输入上面设置的密码后进入桌面，试着打开浏览器看看，一堆“麻将字”，很显然还需要设置中文环境。 中文乱码 ","date":"2015-02-11","objectID":"/debian-lxde-vnc-firefox/:2:0","tags":["Debian"],"title":"Debian 7 安装 LXDE + VNC + Firefox","uri":"/debian-lxde-vnc-firefox/"},{"categories":["学习备忘"],"content":"配置中文环境 dpkg-reconfigure locales 设置语言区域 拖到下面，空格选中zh_CN.UTF-8，回车。 安装中文字体: apt-get install ttf-arphic-ukai ttf-arphic-uming ttf-arphic-gbsn00lp ttf-arphic-bkai00mp ttf-arphic-bsmi00lp 重启系统一次，再次连接看看，已经是中文了： 中文支持 ","date":"2015-02-11","objectID":"/debian-lxde-vnc-firefox/:3:0","tags":["Debian"],"title":"Debian 7 安装 LXDE + VNC + Firefox","uri":"/debian-lxde-vnc-firefox/"},{"categories":["学习备忘"],"content":"安裝Firefox中文版 安装桌面环境后自带iceweasel浏览器，这是重新编译后的firefox，也兼容大部分firefox插件，但是还是喜欢看着熟悉的firefox。但是默认系统源里面没有没有firefox，于是，源列表中增加Linuxmint的Debian源。 nano /etc/apt/sources.list 最后面增加一行： deb http://mirrors.ustc.edu.cn/linuxmint/ debian import 添加linuxmint源 保存后安装linuxmint的公钥： wget http://mirrors.ustc.edu.cn/linuxmint/pool/main/l/ linuxmint-keyring/linuxmint-keyring_2009.04.29_all.deb dpkg -i linuxmint-keyring_2009.04.29_all.deb 更新源： apt-get update 也可以移除iceweasel： apt-get remove iceweasel 安装firefox中文版： apt-get install firefox firefox-l10n-zh 安裝Flash支持： apt-get install flashplugin-nonfree 大功告成，试试，如图： 中文版firefox 挂机需要个自动刷新插件，个人喜好是reloadevery扩展： reloadevery扩展 最后清理缓存： apt-get autoremove \u0026\u0026 apt-get clean 最好reboot一次，重启之后看看搬瓦工的后台，还行，够用： 搬瓦工后台 完，睡觉！ ","date":"2015-02-11","objectID":"/debian-lxde-vnc-firefox/:4:0","tags":["Debian"],"title":"Debian 7 安装 LXDE + VNC + Firefox","uri":"/debian-lxde-vnc-firefox/"},{"categories":["生活点滴"],"content":"远方的朋友","date":"2015-01-28","objectID":"/friends-far-away/","tags":["信件"],"title":"远方的朋友","uri":"/friends-far-away/"},{"categories":["生活点滴"],"content":"清理邮箱的时候发现这封2007年一位网友写给我的邮件，略有感慨。 信件 记得认识在一个游戏里面，具体什么游戏忘了，你说你不怎么玩游戏的，只是好奇点进来看看。 记得我和你都喜欢发一个吃惊小猪的表情，我们都说这个表情像自己。 记得你看我的桌面截图之后，问为什么我的杀毒软件是小红伞，而你的是小绿伞，我说你的是瑞星，我的是Avira AntiVir，帮你换成小红伞后每隔一段时间都要远程协助帮你更新。 你说你是东北银，正准备申请签证去法国学画画，你教我的第一句东北话是“嘎哈呢”，第一句法语是“je t’aime ”（我读不好，经常读作“鼠呆萌”）。 我经常开玩笑说以后你在法国佬地盘会不会吃蜗牛这种黑暗料理啊，你说你只买得起羊角面包。 你问我年纪轻轻怎么老在网吧通宵啊？我说我没地方去啊。你对我说回火星吧。 我问你维纳斯没有手怎么玩石头剪子布啊，你说这姑娘衣服都没了可以直接喊脱衣野球拳了。 你问我咱俩是网友都聊得这么起劲，现实中你咋不和人多交流交流呢，那时的我想了半天，无言以对。 我问你学成之后要干什么？你说到处瞎逛，四处涂鸦，我说小心被罚款，你说没事，不但不交，还得收费，哈哈。 可能你都不知道，你的开朗，你的自信，或多或少影响并改变当年的我，现在的我，生活步入正轨，未来谁也说不准，但是不再迷茫，谢谢！ 远方的朋友，不知道你现在过得怎么样，虽然现在2年多没联系了，你说你要骑车去旅行了，QQ估计再也不会亮起来了，twitter上最后一条推也是2012的了，或许，你在创作一幅惊世骇俗的作品。或许，你在异乡结婚生子，教儿育女。或许，你在骑行的路上啃着羊角面包。无论如何，道一声珍重！ 或许有一天，突然收到你的消息：“一起回火星吧。” ","date":"2015-01-28","objectID":"/friends-far-away/:0:0","tags":["信件"],"title":"远方的朋友","uri":"/friends-far-away/"},{"categories":["生活点滴"],"content":"2015","date":"2015-01-22","objectID":"/2015/","tags":["2015"],"title":"2015","uri":"/2015/"},{"categories":["生活点滴"],"content":"2015 转眼有几个月没更新了，好几次点开后台，撰写新文章，半天不知道敲点什么，感觉无话可说。但事实上主要原因还是懒。。。 2015年都过了大半月了，想想还是上来写点什么吧。 2014这一年，换了新的岗位，适应了几个月，目前感觉没什么问题了。 考了个驾照，目前马路杀手级别，没开过几次，过段时间想办法找一辆车混着开开，以前对这个没兴趣，不过坐车坐久了似乎有点想开的瘾了。 经历了一段短暂的感情，说不清楚，也谈不上谁对谁错，决定或许有点突然，有点冷酷，但是我自己很清楚，确定没有结果的时候主动离开对彼此都好，祝你幸福。 做个视力矫正手术，目前恢复良好，继续保持，少玩电脑多运动。 做了房奴，已经交房了，正准备装修，以前觉得钱这东西，勉强够用就行，没想太多，想来我太理想主义了，多给自己点压力吧，为了家人。 戒烟又一次失败，心烦意乱的时候习惯性的掏出打火机。 关于成家，家人亲戚陆陆续续帮忙介绍对象了，前几天奶奶到我房间和我谈了半小时，送她离开的时候我就知道了，再狂热的理想，再向往的自由，在亲情，家庭的『压力』面前，都会变得摇摇欲坠，不堪一击，我不能太自私了。 临时乱七八糟写了那么一点，匆匆带过这一年。 最近把手机上各种社交软件删了，没多大意义的东西别碰那么多。 2015，新的一年，为自己粗略规划下吧： 多看书。 再一次尝试戒烟。 锻炼身体，恢复到这个年纪应有的体力精力。 关注理财，合理消费。。 多参与家里的大小事。 暂时没了，不谈大理想，把上面的妥妥完成，也算对得起自己。 ","date":"2015-01-22","objectID":"/2015/:0:0","tags":["2015"],"title":"2015","uri":"/2015/"},{"categories":["生活点滴"],"content":"视力矫正手术","date":"2014-10-05","objectID":"/lasik/","tags":["视力矫正手术","飞秒"],"title":"视力矫正手术","uri":"/lasik/"},{"categories":["生活点滴"],"content":"最近刚做完视力矫正手术，算算已经二十多天没打开电脑了，这篇文章也是断断续续在手机上记录在印象笔记中的，因为手术后不敢用眼过度。今天有空，稍微整理一下发布出来。 近视史 戴眼镜11年了，第一次是在初三，那个时候沉迷于玩游戏，红白机，黑卡机，ps什么的一直玩下来，而且为了躲避父母检查，经常是半夜爬起来玩，光线不好又喜欢趴着盯着屏幕，渐渐的，就有点近视了，那时候个子算高，上课的时候坐在最后一排，看黑板的小字有点模糊，刚好同桌是四眼兄，借他眼镜戴着看看，感觉好清楚，于是当时做了个非常脑残的决定，让他帮我配了和他一模一样度数的眼镜下午帮我带过来。。。 就这样开始，注定离不开眼镜了，当然了，后面去配了适合自己的度数，接下来高中三年经常用眼不当，度数一直往上窜，高考完左眼350度，右眼400度，不过读大学的时候倒是没怎么涨。比较稳定了。 手术决定 都戴这么久了其实也戴习惯了，根本不会感觉鼻梁上架着个东西，就是偶尔感觉不方便而已，其它的也没什么。其实身边也有朋友早就做了这种手术，效果还不错，都说没什么。但是自己老觉得要给眼睛来那么一下听着也挺恐怖的。就一直没做。 今年以来身体感觉不太好，想积极锻炼一下，这时候就感觉戴着个眼镜不太好运动了，碍手碍脚的，而且冷暖变化一层雾气罩上来，什么都看不清。我以前也试着戴过隐形眼镜，第一次花了差不多40分钟才戴上去，而且极度不舒服，就直接扔抽屉了。于是，有了动手术的想法。 于是慢慢的在网上看了下资料，有说好的，有说坏的，每当下定决心的时候又看到一条负面评论的，心中就又默默打退堂鼓了，想想还是再等等几年，等新技术出现的时候再做吧，正在一直纠结的时候，看到一句： 『十年之后肯定比现在好多了，但是在保证安全的前提下，你等待10年值得吗？』 是啊，一语惊醒梦中人啊，我纠结个毛啊！侧重关注安全性吧。 于是我看了一些相关资料如下： 引用 准分子激光角膜屈光手术问与答 –来自科学松鼠会 激光手术矫正近视：一场世纪医疗骗局？ –来自科学松鼠会 近视眼手术有哪些风险和后遗症？–来自知乎 对已经决定接受激光治疗近视手术的人，有哪些建议？–来自知乎 全飞秒激光Smile手术与飞秒激光LASIK手术的区别（视频不建议观看） 然后作了动手术的决定，有需求的也可以阅读一下自己做决定，上面第四个的视频建议别看，虽然是三维动画的，但是对手术有点影响，后面会说。 手术前检查 刚好有10天多的假期，玩了几天之后，就去医院做检查了，去之前做了电话预约的，得知整个手术需要3天，第一天做检查，第二天手术，第三天复查，没事就可以回家了。到了LZ工人医院的飞秒中心，在前台护士那里填了一张表格，等了一会就被人带去做了常规检查，步骤和在眼镜店配眼镜差不多，就有一个不太一样，就是拿着一个类似激光笔的东西照射眼睛，告诉我这东西不会碰到我眼睛，要坚持盯着它看那么十几秒，明天的手术也是类似的这样的红点。 再接下来往眼睛里滴了一些药水，按照网上查的资料，我知道这是散瞳剂，散瞳后还要做一次检查的，鉴别真假性近视。滴完后几小时内瞳孔增大，看近处会头晕看不清，果然，护士给我的解释差不多。还有一个，散瞳后上厕所的时候看了一眼镜子，感觉整个眼睛很干净，没有一丝血丝，像婴儿的眼睛一样，但是，少了灵性，只是白而已。常规检查结束之后，裸视力双眼都是0.05，度数左眼-4.25DS，右眼-3.50/0.50（这个看不懂），反正我戴眼镜就是左眼350度，右眼400度，眼压左眼12.7，右眼12.7，如图： 手术前检查表 之后就和医生讨论手术方案，因为我的角膜厚度是左眼501um，右眼507um，正常人的角膜是在500um-560um之间，恰好我是正常范围的低值，因此医生建议我做全飞秒超薄瓣LASIK，能省点角膜，按照网上的资料，角膜保持410um以上是比较安全的，我近视度数不算高，做完大概还有460um左右。最终，我做的手术方案是飞秒+波前相差+虹膜跟踪+旋转定位，反正也不知道什么意思，只知道是这个医院最贵的了，暑假+国庆期间优惠，打完折手术费9300，加上其它的药费，办就诊卡之类七七八八的费用，1w多一点。 接下来没什么说的了，刷卡，领药水，回来后，两种药水轮流滴够次数，洗个澡舒舒服服睡一觉，准备明天的手术。 手术过程 第二天起了大早，早早来到治疗中心，和我妈一起去的，手术后不方便，有人领着回家好一点。 前台护士带领着做了一次术前复查，确定个人数据，和我说今天是主任做手术，手术之前先去主任办公室聊会天，大致谈话内容就是手术过程的一些注意事项，主要是放松，要配合之类的。出来之后发了一张注意事项的纸片，说坐下看一会，确定了然后在协议书上签字就准备手术了。小纸片：（写这篇文章的时候翻出来拍的，已经皱巴巴了，将就看吧） 手术注意事项 签了字就等着做手术了，这天早上有8个人做，都坐在那里等，大都都在玩手机。一次进去两个，轮到我的时候，护士说你怎么穿个短裤来了，我还奇怪眼睛手术和我穿什么裤子有什么关系。进去的时候才知道里面要恒温的，冷得很，护士说忍忍吧，等会上手术台的时候给你盖个毛毯，在手术室外面的等待室，换上了手术服，用药水清洗眼睛消毒麻醉等等，然后就老老实实坐着等。 过了一会，和我一起的那位被叫进去了，大概十分钟后，门打开了，换我进去，上了手术台，我就后悔之前在网上看了手术过程的三维动画，因为接下来医生做的每一步，我都知道他在我眼睛上干了什么，心想真脑残，我什么都不知道进来躺十分钟就完事了多好，手贱看什么手术过程，这下这十分钟难熬了。大致过程不细说了，有兴趣可以看上面的视频。大致是用一个东西撑开眼皮固定住，闭不上眼睛，然后一个镜头一样的东西压下来，暂时你就什么都看不见了，能看见后让你盯着一个红点看，之后打激光之后闻到一股类似皮屑烧焦的味道，之后看到有东西在眼球上扒拉几下，就完了。 双眼做完，出去等待室，另一名医生让对着一台仪器做一次检查，他检查完说了一句“怎么瓣膜有点皱”，然后和手术室里面说了下，让我等会再上手术台一次，我当时就囧了，有点皱是什么意思，再上一次什么意思。没办法，进来了就老老实实的了，几分钟后我又躺在手术台上，医生和我说别紧张，你刚才做完睁眼闭眼动作太大了，瓣膜被挤压到了，有点皱，稍微调整一下，又有东西在眼球上划了几下，出去之后检查没事了。然后用两个眼罩固定在眼睛上，交代回去别使劲睁眼闭眼，好好休息一晚明天来复查就行。 手术后 回家吃点东西直接就睡，几个小时后麻药过后，开始流眼泪，偶尔有一点点刺痛。但问题不大，就是感觉泪水，药水之类的混在一起，又不能擦，有点脏，迷迷糊糊睡到半夜醒来，偷偷睁开眼睛往眼罩上的那个孔往桌子上看，模模糊糊一片，往窗外看，楼下停放的车子车牌在灯光下却很清楚，果然和我所了解的一样，手术后看近处不清楚，总有个类似拍照时候对焦的过程，看远处却很舒服。这种情况大概十天到一个月之后消失。第二天复查，摘掉眼罩，护士用眼药水和棉签帮忙清洗了眼睛。复查视力左眼1.0，右眼1.2，我倒是不怎么在乎这些数值，等看得清楚就行。医生嘱咐这个月视力波动也是正常的，按时滴药，注意别用眼过度。术后用药： 术后用药 就是这一堆药水了，滴得每天嘴巴都是苦苦的： 术后药水 按照这个图 术后注意事项，感受和问题 手术后20多天了，术后这段时间的注意事项可以参照这个图，网上搜来的： 术后注意事项 感受嘛：世界变得清晰美好了。 问题嘛，术后可能出现的后遗症： 干眼症：这个我倒是没有，就是长期用眼感觉比以前容易累，还有就是眼睛对烟尘之类比以前敏感了，个人觉得问题不大。 眩光：这个貌似100%会有的问题，就是晚上看灯散发出来的光圈会比正常人的大，这个不算什么问题，据说过段时间就会好，其实不是好了，而是你的眼睛适应这个现象了，自动调节到让你感觉不难受而已。 夜视力减弱：这个感觉好像有点，但是好像也没什么影响，就是光线昏暗的地方看得没以前清楚，正常灯光下还是没什么问题的，后来想想这也不算什么问题，光线昏暗下本来也看不清楚的，多一点少一点差不了多少。 其它的暂时没发现。 杂七杂八：手术后这段时间早上有空喜欢在河堤和山脚下转几圈，看看青山绿水，眼睛挺舒服的。 跑步到山脚： 山脚 水箱抓鱼： 水箱 洗澡：一开始是个麻烦问题，不能碰水，洗一次挺麻烦的，特别是洗头，每次都是小心翼翼的慢慢用湿手巾慢慢擦，后来习惯就好，速度也快了不少。 饮食方面：基本没什么忌讳的，少吃点辣最好，适当补充维生素A，防止干眼症和增强夜视力的： 富含维生素A的水果：梨、苹果、香蕉、荔枝、西瓜、甜瓜。 蔬菜：马齿菜、大白菜、荠菜、番茄、茄子、南瓜。 实在不行买一瓶维生素A+D，几块钱一瓶，一次一粒，能吃一个月。 最近这几天喜欢用菊花和枸杞泡茶喝，清肝明目挺好的，已经消灭大半罐： 菊花和枸杞 最后，感谢陪伴我11年的眼镜兄，当然，这是最后使用的那副： 眼镜兄 ","date":"2014-10-05","objectID":"/lasik/:0:0","tags":["视力矫正手术","飞秒"],"title":"视力矫正手术","uri":"/lasik/"},{"categories":["乱七八糟"],"content":"导入 09 年开始的老数据","date":"2014-09-12","objectID":"/old-data/","tags":["博客"],"title":"导入 09 年开始的老数据","uri":"/old-data/"},{"categories":["乱七八糟"],"content":"今年5月数据丢失，5年的数据没了。 本来都不抱什么希望了，今天误打误撞登录到一个已经很久很久不用的网盘的时候，居然发现里面居然还留着一份2009至2010年的数据备份，附件什么的都在。 赶紧下载下来，搭建个PHP环境上传导入，刷新页面的看到的一瞬间，说不出的感觉。 老博客页面 呵呵，我记得以前用的这个主题是自己用那时候很火的主题Elegant Box瞎改的，没什么审美水平，就是折腾着玩，不懂html，不懂css，遇到不会的就google，经常折腾到半夜。现在想想那时候真是精力旺盛~ 既然有这备份数据，还是导入到这里来吧。虽然中间还是有一部分数据再也找不回来了。 操作数据库麻烦，懒得折腾，直接以前的wordpress后台，工具–导出–下载导出文件。 顺便贴个以前的后台截图，好怀念。。 旧控制面板 导出后直接在这个新的这里导入就可以了，再把以前的附件上传上来就可以了，注意合并下以前的分类目录，页面。 接下来我一篇一篇的回味，哈哈，越来越想笑，以前真的太二了，顺带删除多篇转载或者只有几句话的文章。 删除一些文章后优化下数据库，顺便SQL删除所有未使用的标签。SQL执行： DELETE a,b,c FROM wp_terms AS a LEFT JOIN wp_term_taxonomy AS c ON a.term_id = c.term_id LEFT JOIN wp_term_relationships AS b ON b.term_taxonomy_id = c.term_taxonomy_id WHERE c.taxonomy = 'post_tag' AND c.count = 0 完了，接下来再做个备份就可以了。 遗憾的是，评论里面的绝大多数博友链接我都打不开了，时间跳得那么快，转眼5年了，每个人都有自己的生活吧。 ","date":"2014-09-12","objectID":"/old-data/:0:0","tags":["博客"],"title":"导入 09 年开始的老数据","uri":"/old-data/"},{"categories":["学习备忘"],"content":"使用 Prism.js 高亮代码","date":"2014-08-27","objectID":"/prism/","tags":["代码高亮"],"title":"使用 Prism.js 高亮代码","uri":"/prism/"},{"categories":["学习备忘"],"content":"其实也不怎么贴代码，偶尔贴一下就直接pre标签括起来，在随便翻个样式扔到css里面，今天休息没事做，也是闲得没事做小折腾一下，以前也用过几款代码高亮插件，总感觉体积太大了，加载慢，这次选用的是轻量级的Prism.js。 ","date":"2014-08-27","objectID":"/prism/:0:0","tags":["代码高亮"],"title":"使用 Prism.js 高亮代码","uri":"/prism/"},{"categories":["学习备忘"],"content":"什么是Prism.js？ Prism是一款轻量级，可扩展的代码高亮javascript类库，默认支持HTML/CSS/Javascript三种语言，当然你在官方上很方便的扩展自定义添加其它语言支持，除了语言支持，行号显示，行内高亮，自动链接，显示语言等等功能也可以自由定制。 Prism官网点这里：Prism.com 安装之前你也可以在这个官方在线示例先感受一下。 ","date":"2014-08-27","objectID":"/prism/:1:0","tags":["代码高亮"],"title":"使用 Prism.js 高亮代码","uri":"/prism/"},{"categories":["学习备忘"],"content":"Prism.js的使用 打开Prism下载页面。 官网上有六款风格可以选择，我是直接用默认的，感觉比较舒服。 Prism.js主题 下面是选着语言支持，当然你选着越多后面生成的js和css也越大，看自己需求选择。 Prism.js语言支持 再下面是插件支持，也是看需求，我就选了显示行号和显示语言。 Prism.js插件 然后下载直接生成好的prism.js和prism.css文件就可以。 把这两个文件上传到到网站目录，在网站head插入prism.js和prism.css： \u003clink href=\"prism.css\" rel=\"stylesheet\" /\u003e; \u003cscript src=\"prism.js\"\u003e\u003c/script\u003e; /*改一下上传文件的路径*/ Wordpress撰写文章的时候编辑器里面使用下面的格式就可以高亮代码了： \u003cpre\u003e\u003ccode class=\"language-X\"\u003e...这里是代码...\u003c/code\u003e\u003c/pre\u003e 上面的X表示语言类型，比如language-css。 如果你选择了行号插件，要显示的话，pre标签里面加个classline-numbers，像这样： \u003cpre class=\"line-numbers\"\u003e \u003ccode class=\"language-X\"\u003e...这里是代码...\u003c/code\u003e \u003c/pre\u003e 至于其它的功能比如行高亮之类，可以参考官方文档。 当然了，每次贴都要打这么一堆挺麻烦的，可以为编辑器加个快捷按钮: 主题function.php放上这一堆： function mxthemes_add_quicktags() { ?\u003e \u003cscript type=\"text/javascript\"\u003e QTags.addButton( 'Prism', 'Prism', '\\n\u003cpre\u003e\u003ccode class=\"language-php\"\u003e', '\u003c/code\u003e\u003c/pre\u003e\\n' ); //快捷输入[Prism]标签 \u003c/script\u003e \u003c?php } add_action('admin_print_footer_scripts', 'mxthemes_add_quicktags' ); 这样后台编辑器就多了个按钮(文本模式下)，我是没有用这个，感觉多敲两下键盘也没什么。 不写了，文本模式插入html尖括号没转义成符号好恶心，先这样，空了再找找有没有解决方法，一个多月晚上都有点失眠了，先睡了。 我就知道睡不着的。。。起来搜索半天，没什么好的办法，只能在可视化模式下先贴上代码再切换一下文本模式，让尖括号转义之后再用高亮代码包起来。 ","date":"2014-08-27","objectID":"/prism/:2:0","tags":["代码高亮"],"title":"使用 Prism.js 高亮代码","uri":"/prism/"},{"categories":["学习备忘"],"content":"乱七八糟 Prism.js 用pre \u003e code这样使用语义化元素来标记代码区块是非常不错的，就是我自己喜欢用code来强调一些关键词，比如：fuckwall，定义这样的样式就和prism.css有点冲突了，所以主题style.css里面的code样式改一下，用:not选择器： :not(pre) \u003e code { ...样式... } 多加载了10几KB的文件，速度肯定慢点。但是无所谓，本来这里就慢 感觉用这类高亮库一旦停止使用了，文章内容里面还要改一堆挺麻烦的，虽然可以直接从数据库里面改。 真的困了，睡觉。 ","date":"2014-08-27","objectID":"/prism/:3:0","tags":["代码高亮"],"title":"使用 Prism.js 高亮代码","uri":"/prism/"},{"categories":["乱七八糟"],"content":"搬家到 Bandwagonhost","date":"2014-08-10","objectID":"/move-to-bandwagonhost/","tags":["BandwagonHost","VPS"],"title":"搬家到 Bandwagonhost","uri":"/move-to-bandwagonhost/"},{"categories":["乱七八糟"],"content":"这货限制CPU太严格了，安装环境编译过程中超限制被锁定的话，速度简直龟速，入手需谨慎！ 又换地方了，原来的VPS近段时间，特别是晚上，实在是抽得不行了。 后台管理面板reboot后居然无法启动了，发了TK，客服半天不鸟我，算了，反正还有2个月就到期了，懒得续费了，换一个好了。 这次换的还是年付的VPS，Bandwagonhost（俗称的搬瓦工）的5G PROMO v2这款，配置如下： 项目 参数 CPU 1 cores vSWAP 64MB 内存 512MB 月流量 500GB/1Gbps 硬盘 5 GB (SSD) KiwiVM 1IP 价格9.99美刀一年，配置较低，反正是够我用了。就扔个Wordpress，搭个梯子出墙，不折腾。 机房在凤凰城，速度嘛，一般，不快也不算慢，还行，只求稳定就行。管理面板是kiwiVM，第一次用，简单明了： kiwiVM管理面板 系统尝鲜用了Ubuntu 14.04 x86_64，apt-get方便，不用管其它的，个人服务器就不折腾了。环境也懒得折腾了，直接上了军哥的lnmp一键包，本来想试试AMH的，貌似AMH官方最近有点问题，算了，先这样吧，等AMH5.0出了再说。 就这样吧，最近情绪低落，天天回家倒头就睡，今天算是找到点事做了。 ","date":"2014-08-10","objectID":"/move-to-bandwagonhost/:0:0","tags":["BandwagonHost","VPS"],"title":"搬家到 Bandwagonhost","uri":"/move-to-bandwagonhost/"},{"categories":["学习备忘"],"content":"VPS 压力测试工具s iege 和 httpbench","date":"2014-07-12","objectID":"/webserver-test/","tags":["httpbench","siege","VPS"],"title":"VPS 压力测试工具 siege 和 httpbench","uri":"/webserver-test/"},{"categories":["学习备忘"],"content":"闲 闲得没事对所用VPS来个压力测试。现在所用的VPS是去年年付的一个，配置挺低的： 内存256MB且无突发，硬盘30G，月流量500G，操作系统ubuntu 13.10 32bit。 一般常用压力测试用的软件是webbench或者是http_load，我以前也用过，这两个网上一搜一大堆文章。这次懒得用了，换其它的试试玩玩。用的是siege和HttpBench，记录一下: ","date":"2014-07-12","objectID":"/webserver-test/:1:0","tags":["httpbench","siege","VPS"],"title":"VPS 压力测试工具 siege 和 httpbench","uri":"/webserver-test/"},{"categories":["学习备忘"],"content":"Siege Sigeg官方主页：http://www.joedog.org/siege-home/ 官方说明：直接引用官方一堆蝌蚪文~ What Is It? Siege is an open source stress / regression test and benchmark utility. It can stress a single URL with a user defined number of simulated users or it can read many URLs into memory and stress them simultaneously. The program reports the total number of hits recorded, bytes transferred, response time, concurrency, and return status. Most features are configurable with command line options which also include default values to minimize the complexity of the program’s invocation. Siege allows you to stress a web server with n number of users t number of times, where n and t are defined by the user. It records the duration time of the test as well as the duration of each single transaction. It reports the number of transactions, elapsed time, bytes transferred, response time, transaction rate, concurrency and the number of times the server responded OK, that is status code 200. Siege was designed and implemented by Jeffrey Fulmer in his position as Webmaster for Armstrong World Industries. It was modeled in part after Lincoln Stein’s torture.pl and it’s data reporting is almost identical. But torture.pl does not allow one to stress many URLs simultaneously; out of that need siege was born… When a httpd server is being hit by the program, it is said to be “under siege.” 最新版本下载地址：http://download.joedog.org/siege/siege-latest.tar.gz ","date":"2014-07-12","objectID":"/webserver-test/:2:0","tags":["httpbench","siege","VPS"],"title":"VPS 压力测试工具 siege 和 httpbench","uri":"/webserver-test/"},{"categories":["学习备忘"],"content":"下载安装 root登陆vps，然后 mkdir tools cd tools #还是建个tools目录放这些东西好一点 #下载并解压 wget http://download.joedog.org/siege/siege-latest.tar.gz tar zxvf siege-latest.tar.gz 这个时候可以输入个ls命令查看目录，最新的版本是3.0.6,于是 cd siege-3.0.6 ./configure make \u0026\u0026 make installl #进入siege-3.0.6目录并编译安装 没什么问题的话完成后就会出现siege的各种参数使用说明。 ","date":"2014-07-12","objectID":"/webserver-test/:2:1","tags":["httpbench","siege","VPS"],"title":"VPS 压力测试工具 siege 和 httpbench","uri":"/webserver-test/"},{"categories":["学习备忘"],"content":"参数设置 除了看上面完成后的参数设置按常规还可以输入siege -h来查看。 测试命令：siege [options] URL [options]是各种参数，一般会用到: -c //并发数，默认是10。 -t //测试时间，单位是分钟，-t 10表示持续10分钟。 -f //对应内容为一行一个url的文件来测试。 -r //重复次数。 更多用法详见参数，siege -h URL就是需要测试的ip地址，对应域名也可以。 ","date":"2014-07-12","objectID":"/webserver-test/:2:2","tags":["httpbench","siege","VPS"],"title":"VPS 压力测试工具 siege 和 httpbench","uri":"/webserver-test/"},{"categories":["学习备忘"],"content":"测试一下 先温柔点： siege https://clearsky.me -c 100 -t 3 #并发数100，持续3分钟 实时感受，打开网站基本没什么变化,没明显感觉慢，最后完成后出现了个： [error]unable to create log file: No such file or directory 如果出现这个问题直接在/usr/local目录下新建个var目录就可以了， 结果输出： Transactions: 1508 hits //总共完成处理次数 Availability: 100.00 % //成功率 Elapsed time: 179.91 secs //总耗时 Data transferred: 5.01 MB //总共传输数据大小 Response time: 10.98 secs //响应时间 Transaction rate: 8.38 trans/sec //平均每秒处理次数 Throughput: 0.03 MB/sec //每秒传输数据大小 Concurrency: 92.05 //最高并发数 Successful transactions: 1508 //成功次数 Failed transactions: 0 //失败次数 Longest transaction: 12.59 //每次最长时间 Shortest transaction: 0.72 //每次最短时间 加重一点： siege https://clearsky.me -c 500 -t 5 #并发数500，持续5分钟 出现： [fatal] unable to allocate memory for 500 simulated browser: Cannot allocate memory 搜索了一下：找到这样解释：via:Siege使用笔记 性能测试过程中，当并发数达到一定情况下可能会遇到“FATAL: unable to allocate memory for ** simulated browser: Cannot allocate memory”类似错误，这是由于linux系统配置限制导致的，可通过\"ulimit -a\"查看, 修改参数来进行调试（但总会受限于硬件设备） 于是我减小到300，感觉打开已经很慢了，卡卡的，测试结果如下： Transactions: 174 hits //总共完成处理次数 Availability: 12.86 % //成功率 Elapsed time: 20.96 secs //总耗时 Data transferred: 0.76 MB //总共传输数据大小 Response time: 10.76 secs //响应时间 Transaction rate: 8.30 trans/sec //平均每秒处理次数 Throughput: 0.04 MB/sec //每秒传输数据大小 Concurrency: 89.34 //最高并发数 Successful transactions: 174 //成功次数 Failed transactions: 1179 //失败次数 Longest transaction: 17.88 //每次最长时间 Shortest transaction: 0.02 //每次最短时间 ","date":"2014-07-12","objectID":"/webserver-test/:2:3","tags":["httpbench","siege","VPS"],"title":"VPS 压力测试工具 siege 和 httpbench","uri":"/webserver-test/"},{"categories":["学习备忘"],"content":"Httpbench 这个是我以前在hostloc上看到有人发的，挺小巧的，也相对简单。 官方地址：https://code.google.com/p/httpbench/ 下载地址：https://httpbench.googlecode.com/files/httpbench-0.11.tar.gz 官方简单说明： Requirement: linux with kernel 2.6 or higher Install: make \u0026\u0026 make install Usage: httpbench thread-numbers url 先是下载安装，root登陆终端后： ","date":"2014-07-12","objectID":"/webserver-test/:3:0","tags":["httpbench","siege","VPS"],"title":"VPS 压力测试工具 siege 和 httpbench","uri":"/webserver-test/"},{"categories":["学习备忘"],"content":"下载解压 wget https://httpbench.googlecode.com/files/httpbench-0.11.tar.gz tar zxvf httpbench-0.11.tar.gz 然后： ","date":"2014-07-12","objectID":"/webserver-test/:3:1","tags":["httpbench","siege","VPS"],"title":"VPS 压力测试工具 siege 和 httpbench","uri":"/webserver-test/"},{"categories":["学习备忘"],"content":"进入目录并安装 cd httpbench make \u0026\u0026 make install ","date":"2014-07-12","objectID":"/webserver-test/:3:2","tags":["httpbench","siege","VPS"],"title":"VPS 压力测试工具 siege 和 httpbench","uri":"/webserver-test/"},{"categories":["学习备忘"],"content":"完成后测试 httpbench 200 https://clearsky.me/ #不要忘了后面的斜杠“/” 运行之后随时Ctrl + C终止，终止后就看到简单的数据： Speed=83323 pages/min, 452984 bytes/sec. Requests: 45628 susceed, 200 failed. ","date":"2014-07-12","objectID":"/webserver-test/:3:3","tags":["httpbench","siege","VPS"],"title":"VPS 压力测试工具 siege 和 httpbench","uri":"/webserver-test/"},{"categories":["学习备忘"],"content":"结束小小小小小总结 话说 200 就搞得 nginx 挂了，我这 vps 得有多搓，好了，就到这了。 ","date":"2014-07-12","objectID":"/webserver-test/:4:0","tags":["httpbench","siege","VPS"],"title":"VPS 压力测试工具 siege 和 httpbench","uri":"/webserver-test/"},{"categories":["生活点滴"],"content":"说来挺囧的，本身对操作机械之类的东西就没什么兴趣，但是这东西还是需要的，于是去年4月就报了名，之后拖延症犯了，一直没去，后来到了年底工作忙了就没时间去了。 今年初工作换了新的岗位，离家近了，相对来说时间多了一点，于是3月份去考了科目一。4月中旬开始打电话给教练说我要开始练了。教练还说都一年了都快把你忘了。去的第一天，我这种从来没碰过车的感觉还挺新鲜，踩离合不给油直进直出这么无聊的事情也玩了一天。 第二天去的时候才发现头天其实好多人没来，人多练就没那么容易了，早八点晚六点一整天下来，能上车的时间也就半小时不到，太难等了，而且工作上也卡得紧，感觉时间没这么多，教练说这个月考试名单要报上去了，问我报不报，我只能说下次吧，但是不报名上去，来练车就相当于占用了这个月要考试的人的练车时间。于是只去了两天就作罢了。 感谢这两天的这只小狗，让我在等上车的时候不那么无聊： 采石场小狗 又过了一个多月，都6月份了，想着这样等着也不是办法，硬挤出时间去吧，打电话联系教练，他说这一期都开始几天了你基本什么都没练过，还有10多天考试，看你能来的时间也不多，来得及吗？我想着反正越往后也越没时间的，考了再说。接下来这10多天是挺折腾人的，早上上班，中午急忙赶去驾校开一趟，跑完就赶回来上班，下班后又赶过去一趟，有时候实在没时间就不去了，总之10多天下来，整套场地考试（倒车入库、侧方停车、半坡起步、直角转弯、曲线行驶）总共也就练10趟左右吧。而且没有一次是能通过的，实在是太赶了，匆匆忙忙上车，什么参考点啊，后视镜啊都顾不上听了，跑完一圈就上班去了。 6月18号科目二，刚好那两天休息，考试前一天晚上去了一趟驾校，一人熟悉一圈，我刚好是排在后面的，人基本走光了，我和一个同期的多转了几圈，他和我说了一些参考点之类的，我试了下，勉勉强强能过了，第二天考试的时候了还来了场大雨，等了半天雨停了还得等场地干了才开始考试，反正我是下午一点多才开始考的，饭都没吃（不知道什么时候叫到我，不好走开，一起学车的给了个小面包吃顶了一下），三人一组进去，我是最后一个，前两个转一圈下来都挂了，搞得我都紧张了，不过上车之后就一点都不紧张了，大不了补考呗，开了再说，大概5分钟后，副驾驶座上面的仪器发出一声“考试通过”，看了一眼，还是满分通过，运气不错。 几天后科目三，也有点小插曲，第一次快开到终点了，前面有个面包车挡着考试用的那个临时红灯，没注意看，直接闯过去了，直接挂了，还好现场补考一次，过了。考完科目三一个月后才预约科目四，现在正在等待中。。。 2014.7.22更新： 去驾校考场考了科目四，去之前两天都没什么事，无聊就用手机看看题目，算是背得滚瓜烂熟了，电脑上面考完点提交，弹出一个“未满五分钟，不允许提交试卷”，囧。。。最后错了一题98分。 2014.8.8更新 接到教练电话，叫我去拿证，到了交了30块钱领了一本劣质壳套包的驾照和两个实习期标志，图： 驾照 ","date":"2014-07-05","objectID":"/learn-to-drive/:0:0","tags":["驾照"],"title":"学车记","uri":"/learn-to-drive/"},{"categories":["学习备忘"],"content":"使用Google身份验证器加锁CentOS","date":"2014-06-29","objectID":"/centos-google-authenticator/","tags":["Google Authenticator","CentOS"],"title":"使用Google身份验证器加锁CentOS","uri":"/centos-google-authenticator/"},{"categories":["学习备忘"],"content":"数据丢失，这篇文章是复制2013年8月快照的，感觉有用，留一下。 挺久之前，在害羞哥那里看到这篇文章：用Google身份验证器给你的ubuntu加把锁，之前没空试试，今天折腾一下。 Ubuntu下使用google身份验证器直接看害羞哥的文章就好了。 CentOS下我搜索了一下，基本上没中文的，都是老外的文章，其实过程大同小异，我这主要是记录一下。 ","date":"2014-06-29","objectID":"/centos-google-authenticator/:0:0","tags":["Google Authenticator","CentOS"],"title":"使用Google身份验证器加锁CentOS","uri":"/centos-google-authenticator/"},{"categories":["学习备忘"],"content":"什么是google身份验证器？ 网上抄的介绍~~ Google Authenticator是谷歌推出的一款动态口令工具，解决大家的google账户遭到恶意攻击的问题，在手机端生成动态口令后，在google相关的服务登陆中除了用正常用户名和密码外，需要输入一次动态口令才能验证成功。 貌似就是动态口令令牌之类的东西，这玩意貌似能用的地方挺多了，比如Dropbox，Gmail等等。 ","date":"2014-06-29","objectID":"/centos-google-authenticator/:1:0","tags":["Google Authenticator","CentOS"],"title":"使用Google身份验证器加锁CentOS","uri":"/centos-google-authenticator/"},{"categories":["学习备忘"],"content":"安装google身份验证器？ 首先root登陆你的vps，然后： yum install pam-devel make gcc-c++ wget 下载包： wget https://google-authenticator.googlecode.com/files/libpam-google-authenticator-1.0-source.tar.bz2 解压： tar -xvf libpam-google-authenticator-1.0-source.tar.bz2 进入这个目录： cd libpam-google-authenticator-1.0 编译安装： make \u0026amp;\u0026amp; make install 完成后运行： google-authenticator 就如图了： 截图 如上图，我拖亮那一串地址其实是个QRcode，可以把它复制到浏览器之中打开：虽然你最好把下面那一堆数字也保存下，以防万一。 至于下面的一堆提问，什么同步时间之类的，多少秒之类的，我全都选yes。 截图 在你的手机中安装google身份验证器，我这里装是安卓版，然后扫描这个QRcode。 截图 到这里,安装完成。 ","date":"2014-06-29","objectID":"/centos-google-authenticator/:2:0","tags":["Google Authenticator","CentOS"],"title":"使用Google身份验证器加锁CentOS","uri":"/centos-google-authenticator/"},{"categories":["学习备忘"],"content":"在centos下配置 不会vi，这里用的nano… nano /etc/pam.d/sshd 加上一行: auth required pam_google_authenticator.so 如图，注意添加的位置。这里有张忘记截图了，所以重新进去截了一张，不过用的是putty，和上面的xshell截图不太一样。 截图 再编辑： nano /etc/ssh/sshd_config 把ChallengeResponseAuthentication no改成ChallengeResponseAuthentication yes，最好还确认下这文件里面的UsePAM yes这一行。 好了，重启ssh. service sshd restart 试一下~ 你再登陆的时候就发现要输入验证码了，输入你手机上那个实时的验证码，再输入密码你才能登陆到vps。 截图 没了，完。 ","date":"2014-06-29","objectID":"/centos-google-authenticator/:3:0","tags":["Google Authenticator","CentOS"],"title":"使用Google身份验证器加锁CentOS","uri":"/centos-google-authenticator/"},{"categories":["乱七八糟"],"content":"新的开始","date":"2014-06-20","objectID":"/start/","tags":["开始"],"title":"新的开始","uri":"/start/"},{"categories":["乱七八糟"],"content":"悲剧了，2009年到2014年的数据丢失了，这是一个月前的事情了，最近杂事多，没时间，也没心情折腾。 从开始以来，2009年开始用的免费的虚拟主机，非常不稳定，数据丢失是经常的事情，但是我自己都有经常备份，问题都不大，都能找回。之后换收费主机，再后来换上VPS，也是定时做备份。自认为万无一失了。 但是这次还真就失了，而且完全是自己的问题，闲得蛋疼想把VPS系统换成Ubuntu，直接后台重装了系统，因为原来一直用VPS数据备份同步到Dropbox的脚本每日备份，重装之前还特意登陆Dropbox上看看有没有备份，只匆匆扫了一眼，看到有当日的备份，但却没注意那个备份的大小只有40字节，应该是这段脚本出了问题，按照往常，除了自动备份外，我还会手动做次备份到硬盘并且同步一份到微盘，就算这个出错了问题也不大。 但是偏偏就是这么巧，刚好之前几天清理了微盘，东西全清空了，而且重装了电脑系统，硬盘东西全格了。连忙做硬盘数据恢复，花了4个小时全盘扫描，恢复出1.92MB的数据库，但是数据恢复最大的杀手就是数据覆盖，过了好几天了，估计希望不大，试着导入，和我预料的一样，被破坏了。只能呵呵了~ 本来这两年也没什么心思更新，经常几个月挤出一点，本来打算就这样停了吧，但是想想这里是我这些年来坚持做的最久的事情了，还是重新开始吧，随其自然吧。 ","date":"2014-06-20","objectID":"/start/:0:0","tags":["开始"],"title":"新的开始","uri":"/start/"},{"categories":["乱七八糟"],"content":"搬家到 AcrosVM","date":"2013-12-02","objectID":"/move-to-acrosvm/","tags":["VPS"],"title":"搬家到 AcrosVM","uri":"/move-to-acrosvm/"},{"categories":["乱七八糟"],"content":"虚拟主机还有3个月到期了，登陆到控制面板里面看了下，去年买的小容量虚拟主机，大小200MB，目前空间用了54%。 本来想升级个套餐的，因为vpsaa的虚拟主机确实还可以，这一年来基本没什么问题，还挺平价的，以前我还说过不想折腾用虚拟主机挺好的。 但是最近有朋友问我要“翻墙梯”，最近自己也突然想折腾一下了，还是转到vps上玩玩吧。 ","date":"2013-12-02","objectID":"/move-to-acrosvm/:0:0","tags":["VPS"],"title":"搬家到 AcrosVM","uri":"/move-to-acrosvm/"},{"categories":["乱七八糟"],"content":"需求 至于买哪个，我一般都针对自己需求： 我要求不高，放个基本无流量的wordpress + 搭建梯子 + 一些命令学习，配置够用就行。 付款简单点好，我懒得信用卡，paypal，财付通运通账号之类的。 E文烂，最好有中文客服，但是这个有利有弊，国人扎堆的vps你懂的。 线路稳定点，速度稍微慢点无所谓，但是天天抽风就不好了。 ","date":"2013-12-02","objectID":"/move-to-acrosvm/:1:0","tags":["VPS"],"title":"搬家到 AcrosVM","uri":"/move-to-acrosvm/"},{"categories":["乱七八糟"],"content":"AcrosVM 说说买的这个vps吧，AcrosVM，引用官网的介绍： AcrosVM是由美国Hostigation的開展的直属品牌，提供OpenVZ架构的VPS主机服务。 Hostigation自2006年开始提供服务，和Highspeedweb, AcrosVM 為同一集团品牌。 呵呵，看是Hostigation旗下，这家挺不错的，好感度+1。 AcrosVM支持支付宝，有中文客服，美国西岸 QuadraNET（PR）的数据中心. 基于openvz,管理面板是SolusVM，面板上可以自行打开tun/tap ppp,作用你懂的。 OpenVZ各个套餐： acrosvm套餐 ","date":"2013-12-02","objectID":"/move-to-acrosvm/:2:0","tags":["VPS"],"title":"搬家到 AcrosVM","uri":"/move-to-acrosvm/"},{"categories":["乱七八糟"],"content":"购买 年付送2个月，我买的是ACROVZ-256，也就是14个月/93RMB。算是很低廉的价格了。 这里要是注意的是：这里的套餐无突发内存，128内存的装环境比如lnmp1.0可能会提示内存不够，购买前多考虑。 这里有个囧事，其实昨晚21：00我就下单了，好久没碰支付宝，一堆控件乱七八糟，加上网络不好，连续下了4个订单。。。 到后面还输错支付宝支付密码3次，等了3小时才解锁。凌晨才支付完成。对了，这里支付宝付款最好选即时到帐。 想着今早起来应该开通了，一早起来还是等待中，直接发了个tk，一分钟后开通了。 ","date":"2013-12-02","objectID":"/move-to-acrosvm/:2:1","tags":["VPS"],"title":"搬家到 AcrosVM","uri":"/move-to-acrosvm/"},{"categories":["乱七八糟"],"content":"测试 老一套： 先看内存，无突发。 free-m CPU：凑合 cpu-info 速率：凑合。 sulv 硬盘IO：比我想象的好。 io 管路面板重装了centos6 32位，懒得麻烦，直接装了AMH4.2，打包一下原来虚拟主机的数据，转过来了。 ahm4.2 怎么说呢，感觉原来的虚拟主机还没到期，又换，挺浪费的，虽然钱不多，但是需要克制一下了。 晚上更新下，amhftp上传大文件老出问题，搜索了下，一些办法试了也解决不了，懒得折腾了，直接后台重装，直接上了军哥的lnmp1.0。 控制面板开启 tun/tap ppp 也有点曲折，开启后， 终端： [root@vpn ~]# cat /dev/net/tun cat: /dev/net/tun: File descriptor in bad state [root@vpn ~]# cat /dev/ppp cat: /dev/ppp: Permission denied tun/tap没问题，ppp不行，这样就无法搭梯子了。 发了tk，客户说关闭再开启，再重启下试试，试了下，貌似没用。 后来有事出去了，回来之后重启下又好了，不管了，能用就行，搭个梯子试了下，能连上，发给朋友，完，睡觉！ ","date":"2013-12-02","objectID":"/move-to-acrosvm/:2:2","tags":["VPS"],"title":"搬家到 AcrosVM","uri":"/move-to-acrosvm/"},{"categories":["生活点滴"],"content":"入了 KBC Poker 2","date":"2013-08-30","objectID":"/kbc-poker2/","tags":["机械键盘"],"title":"入了 KBC Poker 2","uri":"/kbc-poker2/"},{"categories":["生活点滴"],"content":"前段时间晚上无聊逛逛外设论坛，看到这玩意挺多人讨论的。 看着外形和60%布局挺讨喜的，跟风买了一个。 x宝上逛了一圈，基本上都是一个价，随便找了家信誉不错的买了。 本来想买青轴的，但是论坛翻了下帖子，貌似关于poker2的轴讨论茶轴评价不错，再想想青轴估计也太吵，还是买个万金油茶轴好了。 三天后到货了，今天中午回家拆包裹。 拿到的包裹，破了个洞，物流真给力。。。 包裹 外包装： 外包装 盒子： 盒子 以扑克牌的花色来表示轴的，如图是茶色的梅花。 梅花茶轴 配件： 配件 真身，本来我以为是黑色，但是好像是偏灰色。 真身 底部的铝牌： 铝牌 用拔键器拔下一个，茶轴： 茶轴 键帽： 键帽 换上无刻彩色键帽，不那么死板了。。。 整套 整套 II 中午到现在使用了一个多小时，感觉茶轴买对了，输入很舒服，就是因为60%键盘，无用的键基本都没了，一开始有点不太习惯，老打错字，还有，没有上下左右键，要fn+w,s,a,d,来代替，有点不习惯，不过估计问题不大。一些键的搭配还要看看说明书，就这样吧。 ","date":"2013-08-30","objectID":"/kbc-poker2/:0:0","tags":["机械键盘"],"title":"入了 KBC Poker 2","uri":"/kbc-poker2/"},{"categories":["学习备忘"],"content":"更换服务器遇到的问题","date":"2013-07-16","objectID":"/blog-moving-problem/","tags":["虚拟主机"],"title":"更换服务器遇到的问题","uri":"/blog-moving-problem/"},{"categories":["学习备忘"],"content":"收到邮件，所在虚拟主机所在的台湾的服务器故障了，迁移到香港服务器。 域名解析A到新的ip后能访问了，不过有点小问题，一是后台编辑时高级选项和附件不能展开。 在原来的服务器是没有问题的，试着弄了一下搞不定，试着WHMCS后台发了个技术支持工单，主机商效率不错，十多分钟就给我答案了，原因是所用插件MagikeEditor编辑器和所换到的当前环境小冲突，具体原因不明，只好暂时暂停该插件了。呵呵，所以说，访问量不大的博客还是用虚拟主机舒服，不用折腾。 还有个小问题，一些页面出现Notice: Undefined variable报错，这个是php配置问题，我以前遇到过，大概是换到新服务器还没全部配置好吧，不过这个问题不大，只是把警告在页面上打印出来，看起来不舒服，修改php.in配置就能解决，顺手google下记录一下: ps:我在虚拟主机后台面板没有找到修改PHP配置的地方，我记得有些面板是可以直接改的，或者是被禁止了。不过懒得提交技术工单了，能自己解决的我也不麻烦人家。 两种方法：不能修改php.in，所以我用的第二种。 第一种：修改php.in 技巧 error_reporting设置： 找到error_reporting = E_ALL 修改为error_reporting = E_ALL \u0026 ~E_NOTICE register_globals设置： 找到register_globals = Off 修改为register_globals = On 第二种：php代码添加 因为不止是单个页面出现这种警告，所以我把代码加在header.php，通杀。 ini_set(\"error_reporting\",\"E_ALL \u0026 ~E_NOTICE\"); 刷新页面，解决了。 ","date":"2013-07-16","objectID":"/blog-moving-problem/:0:0","tags":["虚拟主机"],"title":"更换服务器遇到的问题","uri":"/blog-moving-problem/"},{"categories":["乱七八糟"],"content":"安装anmpp","date":"2013-06-05","objectID":"/anmpp/","tags":["anmpp"],"title":"安装anmpp","uri":"/anmpp/"},{"categories":["乱七八糟"],"content":"某件事泡汤了，还是上上网好了，闲来无事忍不住找东西折腾了。 ","date":"2013-06-05","objectID":"/anmpp/:0:0","tags":["anmpp"],"title":"安装anmpp","uri":"/anmpp/"},{"categories":["乱七八糟"],"content":"什么是ANMPP? ANMPP是android``nginx``mysql``php-fpm``postgresql的简写，安卓本地ANMPP集成环境，手机PHP环境系统. 直观点就是一个集成的php本地环境，只不过不是运行在pc上的，而是在安卓手机上的。 官方地址：ANMPP.NET 大致看了下安装文档， ","date":"2013-06-05","objectID":"/anmpp/:1:0","tags":["anmpp"],"title":"安装anmpp","uri":"/anmpp/"},{"categories":["乱七八糟"],"content":"官方环境要求 保证你的设备剩余磁盘120MB以上（安卓设备的/data分区) 保证你的设备系统空闲5MB以上（安卓设备的/system分区） 保证你的设备的内核是LINUX，并且内核版本在2.6以上（还需要一些内核模块支持） 我的是两年前买的i9100，拿来折腾了。 ","date":"2013-06-05","objectID":"/anmpp/:2:0","tags":["anmpp"],"title":"安装anmpp","uri":"/anmpp/"},{"categories":["乱七八糟"],"content":"安装 先下载，点这里 30多MB，下载解压,把整个anmpp目录复制到到手机sdcard目录， 安装压缩包里面busybox.apk和terminal.apk（终端模拟器）。 安装完成打开终端模拟器，先su回车获取root权限，然后 输入命令: sh /mnt/sdcard/anmpp/anmpp-install 等待完成即可。 最好后面来个 anmpp start 截个图： anmpp ","date":"2013-06-05","objectID":"/anmpp/:3:0","tags":["anmpp"],"title":"安装anmpp","uri":"/anmpp/"},{"categories":["乱七八糟"],"content":"测试 完成后当然看有效果没，呵呵，最土的测试吧，默认的网页路径是/mnt/sdcard/wwwroot，那么随便扔个test进去，然后手机浏览器输入地址：127.0.0.1，看看有没有，如图： ANMPP测试 至于其它，比如mysql之类还没仔细试试，先这样吧。 ","date":"2013-06-05","objectID":"/anmpp/:4:0","tags":["anmpp"],"title":"安装anmpp","uri":"/anmpp/"},{"categories":["乱七八糟"],"content":"安卓拨号“15”问题及解决方法","date":"2013-06-04","objectID":"/android-15/","tags":["安卓","拨号15问题"],"title":"安卓拨号“15”问题及解决方法","uri":"/android-15/"},{"categories":["乱七八糟"],"content":"终于休息了，好久没碰电脑了。 最近诸事不顺，该做的事情一样没做，拖延症越来越严重了。 手机遇到个小问题，记录下，昨天拨打159开头的电话号码，每次按完1和5手机就直接进入了工程模式，如图： 进入工程模式 一开始以为ROM不稳定又抽风了，试了下，拨打其它号码都没事，就是15就会这样，关键字搜索了一下。 有了解决方法，用到力卓工具箱（当然要经过授权），批量卸载那里，找到TestService 1.0和Factory Mode1.0这两个，直接禁用就可以了。好像这个工具箱批量卸载不支持自定义排序，也不是按程序首字母排序，我装的东西比较多，找这两个差点看花眼。 TestService.png Factory Mode.png ","date":"2013-06-04","objectID":"/android-15/:0:0","tags":["安卓","拨号15问题"],"title":"安卓拨号“15”问题及解决方法","uri":"/android-15/"},{"categories":["学习备忘"],"content":"Debian 下 SSH 显示中文","date":"2013-04-30","objectID":"/debian-ssh-zh-cn/","tags":["Debian"],"title":"Debian 下 SSH 显示中文","uri":"/debian-ssh-zh-cn/"},{"categories":["学习备忘"],"content":"据说原来的 host1free 这个免费的vps提速了，我原来还有留着一个，不知道被删除了没。 邮件里翻出帐号信息，登陆上去看看，人品不错，还没被删，后台直接重装了 debian6。 wget试了一下，速度 600K/s 左右，还是很搓，不过比以前被限制在1M带宽以下的速度好多了，以前我记得从来没超过80K/s。 以前也想过ssh下中文显示问题，不过那时感觉也没什么影响，懒得深究。今晚乘着值班有空，放google找找答案。 翻了一下，挺简单的，整理一贴一下：ssh登陆vps，我用的是putty，先设置一下。 putty设置界面Window下的Translation，Remote character set那里设置为UTF-8，用Xshell也一样，设置字符编码为UTF-8。 root登陆后： dpkg-reconfigure locales`\u003c/pre\u003e locales设置 上下键选择zh_CN.UTF-8，空格选中，tab切换到确认，回车。我已经改过了，所以截图是中文。询问默认的系统区域设置，还是选原来的zh_CN.UTF-8。tab切换到确认，回车。 接下来，终端输入命令： vi /etc/environment 添加一行： LC_CTYPE=\"zh_CN.UTF-8\" 按下Esc退出编辑模式，:wq保存退出。 这里找资料的时候翻到:wq和:x的区别，顺便记录一下。资料来源于：小蜗牛技术之家 :wq 强制性写入文件并退出。即使文件没有被修改也强制写入，并更新文件的修改时间。 :x 写入文件并退出。仅当文件被修改时才写入，并更新文件修改时间，否则不会更新文件修改时间。 重新登陆一下，输个date命令看看： ssh显示中文 完成！ ","date":"2013-04-30","objectID":"/debian-ssh-zh-cn/:0:0","tags":["Debian"],"title":"Debian 下 SSH 显示中文","uri":"/debian-ssh-zh-cn/"},{"categories":["乱七八糟"],"content":"重装系统+常用软件清单","date":"2013-04-27","objectID":"/reinstall-and-lists-of-software/","tags":["软件"],"title":"重装系统+常用软件清单","uri":"/reinstall-and-lists-of-software/"},{"categories":["乱七八糟"],"content":"win7误操作造成系统文件丢失，没备份，懒得折腾了，干脆重装了。 没系统盘，箱子翻出一个u盘做了个u盘启动安装的，一开始在y480bios里还找不到第一启动设置，后来搜了下才知道开机按f12就直接选usb启动，不太喜欢这样的设定。 安装过程都是老套路一路下来。安装完成打补丁的等待过程过程就安装常用软件，记录一下吧，想到什么就写一下： ","date":"2013-04-27","objectID":"/reinstall-and-lists-of-software/:0:0","tags":["软件"],"title":"重装系统+常用软件清单","uri":"/reinstall-and-lists-of-software/"},{"categories":["乱七八糟"],"content":"altRun 官方地址：：https://code.google.com/p/altrun/ 使用教程可以去这里看：http://xbeta.info/altrun.htm（初阶使用就看前面几小节就可以了。） altrun软件截图 开始不习惯，现在已经离不开了，以至于我在办公室的电脑上经常习惯按键盘上的alt+R。电脑里包括下面说的所有软件都是用它启动的。用惯了你就不喜欢鼠标双击图标运行了。几百k的软件大小，速度飞快。这里的截图里软件配置被我误删了，要不3个月以来肯定不止才用了55次快捷键。 这款快速启动软件作者好几年没更新了，虽然开源但是没人跟进，我使用这段时间偶尔会崩溃导致配置丢失，小众软件看见个批处理备份配置，记一下： altrun软件目录新建bak文件夹~ 新建个批处理altrunbak.bat，放在软件目录，添加到altrun运行就行。 批处理如下： 适用win7: @echo off set a=%date:~0,4%date:~5,2%date:~8,2% set b=%TIME:~0,2%TIME:~3,2%TIME:~6,2% copy ShortCutList.txt .\\bak\\%a%_%b%.txt echo 已经备份为文件%a%_%b%.txt pause 适用xp： @echo off set a=%date% set a=%a:-=% set a=%a:~,8% set b=%time% set b=%b::=% set b=%b:~,-5% copy ShortCutList.txt .\\bak\\%a%_%b%.txt echo 已经备份为文件%a%_%b%.txt pause ","date":"2013-04-27","objectID":"/reinstall-and-lists-of-software/:1:0","tags":["软件"],"title":"重装系统+常用软件清单","uri":"/reinstall-and-lists-of-software/"},{"categories":["乱七八糟"],"content":"Goagent 官方地址：：https://code.google.com/p/goagent/ **使用教程：**和谐社会，善用搜索~ 穿越神器，使用效果自行搜索。不多说，与下面的chrome扩展搭配使用效果好。 goagent界面 ","date":"2013-04-27","objectID":"/reinstall-and-lists-of-software/:2:0","tags":["软件"],"title":"重装系统+常用软件清单","uri":"/reinstall-and-lists-of-software/"},{"categories":["乱七八糟"],"content":"Everything 官方地址：http://www.voidtools.com/download.php 使用教程也可以看善用佳软的文章：http://xbeta.info/everything-search-tool.htm everything界面 Everything是voidtools（中文主页）开发的一款文件搜索工具，官网描述为“基于名称实时定位文件和目录（Locate files and folders by name instantly）”。它体积小巧，界面简洁易用，快速建立索引，快速搜索，同时占用极低的系统资源，实时跟踪文件变化，并且还可以通过http或ftp形式分享搜索。 ","date":"2013-04-27","objectID":"/reinstall-and-lists-of-software/:3:0","tags":["软件"],"title":"重装系统+常用软件清单","uri":"/reinstall-and-lists-of-software/"},{"categories":["乱七八糟"],"content":"Putty 官方地址：http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html putty 现在常用的管理vps的工具，软件免费，小巧，绿色，下载就能直接运行使用，操作简单。导入导出配置略繁琐，记录下：1.开始–运行– 输入:regedit 打开注册表。2. 选择HKEY_CURRENT_USER \u003eSoftware\u003eSimonTatham 3.右击SimonTatham，在弹出菜单中选择导出，保存成puttyConf.reg即完成。4.还原Putty设置:直接双击puttyConf.reg导入注册表。 ","date":"2013-04-27","objectID":"/reinstall-and-lists-of-software/:4:0","tags":["软件"],"title":"重装系统+常用软件清单","uri":"/reinstall-and-lists-of-software/"},{"categories":["乱七八糟"],"content":"Xshell 同putty同类型，但是功能更加强大，标签式管理多台vps挺方便的。它的Free For Home/Shcool版本够用了 官方地址：http://www.netsarang.com/download/down_xsh.html 一些使用技巧~来自：挨个搞 [xshell十大技巧] xshell界面 ","date":"2013-04-27","objectID":"/reinstall-and-lists-of-software/:5:0","tags":["软件"],"title":"重装系统+常用软件清单","uri":"/reinstall-and-lists-of-software/"},{"categories":["乱七八糟"],"content":"Chrome 主浏览器，偶尔会切换firefox用用，4个必备插件： Adblock Plus 广告过滤 Xmarks标签同步 Lastpass密码管理 SwitchySharp代理切换，我是和上面说的goagent一起使用。 除了必备的，推荐个一个扩展 Fatkun图片批量下载，用这个批量下图谁用谁知道。 ","date":"2013-04-27","objectID":"/reinstall-and-lists-of-software/:6:0","tags":["软件"],"title":"重装系统+常用软件清单","uri":"/reinstall-and-lists-of-software/"},{"categories":["乱七八糟"],"content":"Advanced SystemCare 下载地址：点这里（度娘盘） 这个是系统优化和清理的，比起360、X管家之类的我更喜欢用这个，虽然这类软件功能大同小异。压缩包里面有软件升级激活去广告的说明。 asc ","date":"2013-04-27","objectID":"/reinstall-and-lists-of-software/:7:0","tags":["软件"],"title":"重装系统+常用软件清单","uri":"/reinstall-and-lists-of-software/"},{"categories":["乱七八糟"],"content":"其它 截图太累，大致说说： 杀毒软件：我一直用微软自己MSE，以前小内存觉得它卡，现在无压力。 Sublime text 2 性感的编辑器 下载歌曲酷狗，网上随便找的去广告版，听歌就用Airplay ftp工具是FileZilla，有时候又混着用flashfxp，这个比较随意。 极少聊天，聊天工具一般是企鹅（主要和朋友玩游戏时候语音），输入法一直是企鹅拼音纯净版。 下载工具迅雷+企鹅旋风。没离线下载真心下得慢。。。 大致就这些了，边写边下电影，差不多也下好了，看电影去，随带说下，现在播放器一般用的是射手影音，现在懒得去配置稀奇古怪的软件了，能用就行。 ","date":"2013-04-27","objectID":"/reinstall-and-lists-of-software/:8:0","tags":["软件"],"title":"重装系统+常用软件清单","uri":"/reinstall-and-lists-of-software/"},{"categories":["生活点滴"],"content":"人间失格","date":"2013-04-23","objectID":"/nolongerhuman/","tags":["人间失格"],"title":"人间失格","uri":"/nolongerhuman/"},{"categories":["生活点滴"],"content":"人间失格 事实上这本小说2年前看过，那时候在深圳，网上下载的txt，放在较老的诺基亚手机上，屏幕小且下载的文件错字乱码一堆，粗粗看完的。上个月在豆瓣上看到书评，就x宝上买了一本，薄薄的，运费都比书贵，纸张一般吧，不过就这么点钱，我又没有藏书的习惯，无所谓了。 图片是手机随手拍的，封面上是王家卫的话： 我很喜欢太宰治，而梁朝伟总是让我想起他。 引用 简介来自豆瓣： 《人间失格》是日本著名小说家太宰治最具影响力的小说作品，同时也是糸色望（注：动漫《再见！绝望先生》的主角）老师日常生活必备的读物之一。另外在日本轻小说《文学少女》第一卷中被大量提及。《人间失格》（又名《丧失为人的资格》）发表于1948年，是一部自传体的小说，纤细的自传体中透露出极致的颓废，毁灭式的绝笔之作。太宰治巧妙地将自己的人生与思想，隐藏于主角叶藏的人生遭遇，藉由叶藏的独白，窥探太宰治的内心世界，一个“充满了可耻的一生”。在发表这部作品的同年，太宰治就自杀身亡。 一个月以来，断断续续看完了，大部分的时候是晚上值班躺在床上看的。 好久没拿着纸质书看了，有点不习惯。顺带记录下里面的一些句子： 引用 讨厌的东西不敢说讨厌，而对喜欢的东西，也不敢说喜欢，仿佛行窃一般提心吊胆，只觉得痛苦难当，陷入无法言喻的恐怖感中。总之，我甚至连二选一的能力都没有。到了后来渐渐发现，正是这种性格，才导致了自己“生活在羞耻颇多的日子里”。 引用 无论是谁，受到别人的责难，或惹怒别人，也许都不会有好心情吧。我从发怒的人的脸上，看到了比狮子、鳄鱼、恐龙更可怕的动物的本性。平时，这种本性被隐藏起来了，一旦遇到什么机会，人类的可怕的真面目，就通过发怒出其不意地暴露了出来。好比牛在草原上躺着，原本一副沉稳的样子。突然，它甩动尾巴，一下子就打死了肚子上的牛虻。看到这幅光景，我总是感到不寒而栗，连毛发都竖起来了。一想到这种本性也许是人类生存的一种先决条件，我几乎感到绝望了 引用 对人类过于恐惧的人反而希望亲眼看到更可怕的妖怪。这种心理像神经质，同那些对容易担惊受怕的人会祈祷暴风雨来得更猛烈些的心理一样。啊，这一群画家们，受到人类这个妖怪的攻击和威胁，终于相信了幻觉，在光天化日下，清楚地看到了群魔乱舞。并且，他们不会被这些妖怪的“扮小丑”所欺骗，努力如实表现他们所看到的一切。 引用 比目鱼的说话方式，不，世上所有人的说话方式，都是像这样转弯抹角，模糊不清，好像带点试图逃避自己责任的微妙。而我总是对于那个几乎令人感到无益、没用的严重警戒，以及无数细小麻烦的计谋困惑、为难，我的心情变成什么样都已经无所谓了，继续看玩笑、挖苦来搪塞，或者是沉默地首肯，承受这一切，也就是说采取了失败消极额态度。 引用 对人类过于恐惧的人反而希望亲眼看到更可怕的妖怪。这种心理像神经质，同那些对容易担惊受怕的人会祈祷暴风雨来得更猛烈些的心理一样。啊，这一群画家们，受到人类这个妖怪的攻击和威胁，终于相信了幻觉，在光天化日下，清楚地看到了群魔乱舞。并且，他们不会被这些妖怪的“扮小丑”所欺骗，努力如实表现他们所看到的一切。 引用 酒吧的老板娘无意中说出这句话：“我们所认识的阿叶，又诚实又乖巧，要是不喝酒的话，不，即使是喝酒……也是一个神一样的好孩子呐。” ","date":"2013-04-23","objectID":"/nolongerhuman/:0:0","tags":["人间失格"],"title":"人间失格","uri":"/nolongerhuman/"},{"categories":["游戏娱乐"],"content":"AMH面板安装反向代理模块","date":"2013-02-23","objectID":"/amh-amproxy/","tags":["VPS"],"title":"AMH面板安装反向代理模块","uri":"/amh-amproxy/"},{"categories":["游戏娱乐"],"content":"过年的时候在vps上安装了amh面板，之后只是简单绑定了一个域名，和用它的备份功能做了下备份，之后的这段时间沉迷于《死亡空间3》和《杀手5》。没怎么折腾了。今天晚上值班，没事到这个面板论坛看看，发现作者发了个反向代理模块。官网地址：[扩展 \u0026 程序] AMh4.0 安装反代模块 AMProxy-1.0 ","date":"2013-02-23","objectID":"/amh-amproxy/:0:0","tags":["VPS"],"title":"AMH面板安装反向代理模块","uri":"/amh-amproxy/"},{"categories":["游戏娱乐"],"content":"什么是反向代理? 在计算机网络中，反向代理是代理服务器的一种，它从一个或多个服务器上获取资源，然后再将这些资源返回给真正的客户端，而服务端也可以通过此获取客户端的信息。与前向代理不同，前向代理作为一个媒介将互联网上获取的资源返回给相关联的客户端，而反向代理是在服务器端作为代理使用，而不是客户端。 ","date":"2013-02-23","objectID":"/amh-amproxy/:1:0","tags":["VPS"],"title":"AMH面板安装反向代理模块","uri":"/amh-amproxy/"},{"categories":["游戏娱乐"],"content":"LNMP一键包nginx简单反向代理规则 以前用军哥LNMP一键包，网上搜的nginx反向代理最简单的一般都是下面这个： server { listen 80; server_name 域名1; location / { proxy_pass 域名2; proxy_redirect off; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; } } 配置完成然后刷新nginx配置就可以，表示“域名1”反向代理“域名2”。 还有个带缓存的：来自VPSMM 新建两个目录： mkdir /home/cache/path -p mkdir /home/cache/temp -p 修改 /usr/local/nginx/conf/nginx.conf ，新增以下代码： #主要是缓存相关设置，请放置于 http{ ##这里 }中，一般加在 log_format 上面或下面均可： client_body_buffer_size 512k; proxy_connect_timeout 5; proxy_read_timeout 60; proxy_send_timeout 5; proxy_buffer_size 16k; proxy_buffers 4 64k; proxy_busy_buffers_size 128k; proxy_temp_file_write_size 128k; proxy_temp_path /home/cache/temp; proxy_cache_path /home/cache/path levels=1:2 keys_zone=cache_one:500m inactive=7d max_size=30g; #500m是内存占用，7d是7天无访问删除，30g是缓存占具硬盘空间 以下为虚拟主机配置文件，可另存成 .conf 放置于 vhost 下面: server { listen 80; server_name 域名1; location / { proxy_cache cache_one; proxy_cache_valid 200 304 3d; #正常状态缓存时间3天 proxy_cache_key $host$uri$is_args$args; proxy_pass 域名2; proxy_redirect off; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; expires 10d; #默认10天缓存 access_log /home/wwwlogs/vpsmm.log access; #日志文件 } } 点击几下网站，df -sh 命令，查看/home/cache目录大小，即可测试是否缓存成功。 现在既然装了面板，又有模块功能，那么就更简单了，按照发布地址的说明： ","date":"2013-02-23","objectID":"/amh-amproxy/:2:0","tags":["VPS"],"title":"AMH面板安装反向代理模块","uri":"/amh-amproxy/"},{"categories":["游戏娱乐"],"content":"先下载AMProxy模块脚本 cd /root/amh/modules \u0026\u0026 wget http://amysql-amh.googlecode.com/files/AMProxy-1.0.zip \u0026\u0026 unzip AMProxy-1.0.zip \u0026\u0026 rm -f AMProxy-1.0.zip; 虽然是菜鸟新手，上面这一堆也是能理解的，其实是4条命令： 进入/root/amh/modules目录。 再下载安装包。 解压 删除安装包。 4条命令用 \u0026\u0026 连接起来。\u0026\u0026为逻辑“与”，老感觉理解为“与”有点拗，习惯搜索一下，这里应该是另一种含义：如果前面的命令正确执行，那么后面的命令也将执行。否则后面的命令不执行。 想起以前编译安装常见的： make \u0026\u0026 make install 有时看到一些文章写作： make ; make install 又搜索了一下：两者区别是 \u0026\u0026 只有前面无问题才执行后面，而;是无论前面结果如何都继续执行,呵呵，小记录一下~ ","date":"2013-02-23","objectID":"/amh-amproxy/:3:0","tags":["VPS"],"title":"AMH面板安装反向代理模块","uri":"/amh-amproxy/"},{"categories":["游戏娱乐"],"content":"下载后安装 amh module AMProxy-1.0 install; 或者直接后台面板模块界面直接安装。 安装完成，填写两个域名就行了。 AMH面板反向代理 但是这个没有缓存功能，不过论坛上作者已表示下一版本会增加。 觉得这个面板不错，还有更多模块，人懒就喜欢傻瓜化的东西。适用就行。 ","date":"2013-02-23","objectID":"/amh-amproxy/:4:0","tags":["VPS"],"title":"AMH面板安装反向代理模块","uri":"/amh-amproxy/"},{"categories":["乱七八糟"],"content":"装个 AMH 面板","date":"2013-02-09","objectID":"/amh/","tags":["VPS"],"title":"装个 AMH 面板","uri":"/amh/"},{"categories":["乱七八糟"],"content":"今天年三十，年夜饭时前玩一会电脑，发现原来的那台vps恢复了，不抽风了。 这里肯定是继续留在这个虚拟主机上了，不会再搬回去了。那vps就留着时不时折腾一下好了。 ssh登录上去，本来想继续用军哥的LNMP一键包，突然想装个面板玩玩好了，刚巧，以前关注过的amh面板新年刚发布了3.0版本，据说提供模块功能，看起来挺不错的，那么安装一个看看吧。原来vps的数据早已备份下来了，干脆大清理直接重装系统了，后台重装系统的时候点错了，本来是装debian的，点到centos了，无所谓了，懒得改了。 PS:最近不喜欢用Xshell了，改回用Putty，小巧的东西比较喜欢，当然Xshell管理多台vps比较方便，不过我用不着。） ","date":"2013-02-09","objectID":"/amh/:0:0","tags":["VPS"],"title":"装个 AMH 面板","uri":"/amh/"},{"categories":["乱七八糟"],"content":"AMH下载 wget http://amysql.com/file/AMH/3.0/amh.sh; chmod 775 amh.sh; ./amh.sh 2\u003e\u00261 | tee amh.log; AMH面板安装截图-I ","date":"2013-02-09","objectID":"/amh/:1:0","tags":["VPS"],"title":"装个 AMH 面板","uri":"/amh/"},{"categories":["乱七八糟"],"content":"AMH安装 接下来是三个选项，分别是安装，卸载，退出，直接安装，选1. AMH面板安装截图-II 提示输入数据库密码和amh面板管理密码。 AMH面板安装截图-III 接下来就漫长的安装过程了，估计吃完年夜饭刚刚好安装完，其实正常安装大概15-20分钟左右吧，主要是我这vps配置太搓了，看上面的截图就知道了。 先吃饭，饭后安装好继续看看好用不，好用的话还有一个域名就绑上去，再想想干点什么吧。 年夜饭回来继续~ 已经安装好了，浏览器ip+端口8888，用默认的管理员帐号admin和前面设置的密码登录。 ","date":"2013-02-09","objectID":"/amh/:2:0","tags":["VPS"],"title":"装个 AMH 面板","uri":"/amh/"},{"categories":["乱七八糟"],"content":"AMH后台界面 amh后台 官方的更新说明： 1、改进php-fpm多次加载启动(避免额外内存占用)。(Amysql用户反馈：qxwo、yzw6) 2、默认安装增加Iconv库。 3、更改amh host主机命令脚本各选项、虚拟主机删除停止对应网站php进程彻底释放内存。 (Amysql用户反馈：dbadrivers) 4、纠正Nginx SCRIPT_FILENAME变量问题。 5、自动调节Nginx worker进程数量。 6、增加MySQL面板绑定域名字段长度限制。 (Loc用户反馈: jason-HardBirch) 7、使用最新版本MySQL管理系统 AMS-1.50107 8、使用最新稳定版本Nginx-1.2.6 9、使用最新稳定版本PHP-5.3.21 10、备份恢复执行FLUSH PRIVILEGES刷新权限，避免存在权限导入失败。 10、增加各版块使用说明与纠正错字。 (Amysql用户反馈: 天空、Nginx) 11、虚拟主机增加自定义错误默认页面400、403、502、……设置。 12、虚拟主机PHP-FPM配置控制、轻松分配PHP线程数量与内存利用分配。 13、增加PHP.ini配置参数在线设置、内存限制、错误开启、时区等、与增加amh SetParam参数命令设置。 14、增加在线模块扩展程序安装、卸载、支持自定义编写功能模块或扩展amh面板功能、与增加amh module参数命令设置。 15、增加登录面板验证码验证设置。 16、增加MySQL my.cnf配置参数在线设置、关闭开启Innodb引擎、缓存设置等选项。 (Loc用户反馈: jumpsky) 17、增加面板绑定IP或域名。 18、增加自定义面板端口号设置。 19、增加二级域名绑定子目录设置。 20、增加模块脚本。 eAccelerator-0.9.6.1 PDO_MYSQL-1.0.2 IonCube_loaders Mcrypt_Mhash_libmcrypt MySQLi phpMyAdmin-3.2.1 Zend_Guard_Loader AMFTP-1.0 (文件管理模块) (用户反馈: ramonde、赵容部落、天空、winter) 21、面板PHP-AMP框架控制器\u0026数据模型全部重构细分优化，更好支持后续新版本开发与新功能扩展。 ——- 待续发布模块 ——- 反向代理模块 API面板控制模块 常用的功能也截图一下。 ","date":"2013-02-09","objectID":"/amh/:3:0","tags":["VPS"],"title":"装个 AMH 面板","uri":"/amh/"},{"categories":["乱七八糟"],"content":"虚拟主机管理 虚拟主机设置 ","date":"2013-02-09","objectID":"/amh/:4:0","tags":["VPS"],"title":"装个 AMH 面板","uri":"/amh/"},{"categories":["乱七八糟"],"content":"php配置 php.in ","date":"2013-02-09","objectID":"/amh/:5:0","tags":["VPS"],"title":"装个 AMH 面板","uri":"/amh/"},{"categories":["乱七八糟"],"content":"mysql管理，这里管理系统也是作者开发的Amysql (AMS) mysql管理 ","date":"2013-02-09","objectID":"/amh/:6:0","tags":["VPS"],"title":"装个 AMH 面板","uri":"/amh/"},{"categories":["乱七八糟"],"content":"FTP管理：(这个功能我基本用不到，习惯sftp了) ftp管理 ","date":"2013-02-09","objectID":"/amh/:7:0","tags":["VPS"],"title":"装个 AMH 面板","uri":"/amh/"},{"categories":["乱七八糟"],"content":"模块功能： 模块功能 ","date":"2013-02-09","objectID":"/amh/:8:0","tags":["VPS"],"title":"装个 AMH 面板","uri":"/amh/"},{"categories":["乱七八糟"],"content":"备份功能，不知道我这配置低下的vps备份的时候会不会失败~ 备份功能 ","date":"2013-02-09","objectID":"/amh/:9:0","tags":["VPS"],"title":"装个 AMH 面板","uri":"/amh/"},{"categories":["乱七八糟"],"content":"博客再次搬家","date":"2013-02-03","objectID":"/blog-moving-again/","tags":["虚拟主机"],"title":"博客再次搬家","uri":"/blog-moving-again/"},{"categories":["乱七八糟"],"content":"原来所在的vps抽搐得厉害，ssh连接3分钟内必断开，受不了了，不折腾了~ 真心觉得个人博客用虚拟主机舒服，什么都不用管，所以年付了一个搬过来。 没什么好写的，说说这主机吧： 空间大小：200MB 月流量：4000MB 建站数：2个 MySQL：共享空间大小 DirectAdmin中文面板PHP+MySQL 项目 参数 空间大小 200MB 月流量 4000MB 建站数 2个 MySQL 共享空间大小 DirectAdmin中文面板PHP+MySQL * 霓虹国机房，所以访问速度算是不错了，ping值各地80~120，200MB空间(与数据库共享大小），月流量4G，看似很小，但是对这里来说足够了，适用就行。多了用不完也浪费。 后台面板是DA，好久没用了，多少有点不习惯，不过没关系，多年以前深受免空毒害，搬家早已家常便饭，一下就适应了，只是有点手生，那么点数据，花了半小时才完成。 没了，快过年了，好好过吧。 ","date":"2013-02-03","objectID":"/blog-moving-again/:0:0","tags":["虚拟主机"],"title":"博客再次搬家","uri":"/blog-moving-again/"},{"categories":["学习备忘"],"content":"Debian安装exim4","date":"2013-01-25","objectID":"/debian-exim4/","tags":["Debian"],"title":"Debian安装exim4","uri":"/debian-exim4/"},{"categories":["学习备忘"],"content":"今天有空，网上翻翻有关vps的资料，打算使用更加轻量级的exim4替换sendmial。 网上找了下资料，整理记一下。 系统是debian，卸载sendmail后，安装exim4： apt-get install exim4 安装完成后配置一下： dpkg-reconfigure exim4-config 进入设置界面：局部马赛克~ exim4设置界面 这里，独立ip选第一个： exim4设置界面-1 这里。系统邮件名称，设置成自己的。 exim4设置界面-1 至于其余的，一路按回车键默认。 安装完重启exim4： /etc/init.d/exim4 restart 在这里出现了点问题，提示是： \u003e ALERT: exim paniclog /var/log/exim4/paniclog has non-zero size, mail system possibly broken … failed! 以这段为关键字google搜索了一下，满屏幕的英文里面终于找到个中文的答案。 方法略暴力： rm /var/log/exim4/paniclog #删除log。 再次重启exim4： /etc/init.d/exim4 restart 安装成功，测试下发送mail,右下角本来就开着QQ，直接发送到QQ邮件好了: 直接用mail命令，发送一封主题为\"test\" ，内容为\"hello world! fuck xxx!!!“的邮件。 一个小点.然后回车键。 发送邮件测试 右下角企鹅没有弹出邮件，很正常，这种肯定在垃圾邮件列表中： 垃圾邮件 完了~ ","date":"2013-01-25","objectID":"/debian-exim4/:0:0","tags":["Debian"],"title":"Debian安装exim4","uri":"/debian-exim4/"},{"categories":["学习备忘"],"content":"精简了一下vps系统","date":"2013-01-16","objectID":"/debian-lite/","tags":["VPS"],"title":"精简了一下vps系统","uri":"/debian-lite/"},{"categories":["学习备忘"],"content":"现在用的这个vps性能太挫，前段时间从contos换到debian，据说debian能省点内存。 其实省不省内存我无所谓，本来就是拿来用的，留着也不能当饭吃。可是有时点开探针看着内存占用快爆了，实在受不了。 没钱上好的vps只能精简系统了，google一下，debian下精简的都差不多是同一篇文章，不知道哪里是原出处了。 人懒，不求原理，只求效果，记一下： 升级系统： apt-get update\u0026\u0026apt-get upgrade 删除完全多余的软件： apt-get -y purge apache2-* bind9-* xinetd samba-* nscd-* portmap sendmail-* sasl2-bin sendmail我留着了，没删。 删除多余的系统组件： apt-get -y purge apache2-* bind9-* xinetd samba-* nscd-* portmap sendmail-* sasl2-bin` 事后清理： apt-get autoremove \u0026\u0026 apt-get clean 完事后效果： putty.jpg ","date":"2013-01-16","objectID":"/debian-lite/:0:0","tags":["VPS"],"title":"精简了一下vps系统","uri":"/debian-lite/"},{"categories":["乱七八糟"],"content":"用了Incapsula的CDN加速","date":"2012-12-15","objectID":"/incapsula/","tags":["incapsula"],"title":"用了Incapsula的CDN加速","uri":"/incapsula/"},{"categories":["乱七八糟"],"content":"闲来无事逛逛hostloc，发现有位坛友发了个地址，访问速度还真挺快的。 看下面的回复是用了Incapsula的免费CDN加速，搜了下，这玩意最近还挺火的。 反正也没事，我也用用看一下，教程什么的网上一搜一大把，其实也不需要什么教程，注册帐号后按它的提示一步一步来就可以了。免费帐号貌似50G流量，反正这里是肯定是用完了，DNS直接A它的日本节点103.28.248.*，*号随意，防止被wall可以多设几个。 完成后打开网站后发现右下弹出有个类广告的东西，不知道是不是免费账户弹广告，看了页面元素，直接主题CSS里添加： .page-tooltip{display:none;} 就可以去掉，后来网上搜了下这玩意其实可以在Incapsula的后台设置不显示的。 至于加速效果：just-ping Just-Ping测试截图 站长工具超级ping： 超级ping测试截图 ","date":"2012-12-15","objectID":"/incapsula/:0:0","tags":["incapsula"],"title":"用了Incapsula的CDN加速","uri":"/incapsula/"},{"categories":["乱七八糟"],"content":"更换博客虚拟空间","date":"2012-12-02","objectID":"/blog-moving/","tags":["虚拟空间"],"title":"更换博客虚拟空间","uri":"/blog-moving/"},{"categories":["乱七八糟"],"content":"VPS 到期 原来的 VPS 到期了，呵呵，搬到个免费的虚拟空间上面，原来的有些忘了备份，有些附件丢失了。 免费的其实还挺稳定的，就是速度非常悲剧，LNMP 一键包下载安装花了快 1 个半小时。 太晚了，刚喝酒回来，头晕，手指也不知道什么时候被割伤了，不折腾了，先睡了。 等明天有空网上翻下找个自动备份脚本，暂时就这样吧。。。 ","date":"2012-12-02","objectID":"/blog-moving/:1:0","tags":["虚拟空间"],"title":"更换博客虚拟空间","uri":"/blog-moving/"},{"categories":["乱七八糟"],"content":"接昨晚上继续 网上翻了几个自动备份到 dropbox 的脚本，貌似不成功。 直接自动备份到 ftp 空间，脚本一搜一大把。随便找了一个用上了。 (脚本在最下面，hostloc 猫版的，站貌似打不开了，我记录下。）设置定时执行就行。 ","date":"2012-12-02","objectID":"/blog-moving/:2:0","tags":["虚拟空间"],"title":"更换博客虚拟空间","uri":"/blog-moving/"},{"categories":["乱七八糟"],"content":"自动备份数据上传至ftp空间脚本 #!/bin/bash #你要修改的地方从这里开始 MYSQL_USER=root #mysql用户名 MYSQL_PASS=123456 #mysql密码 MAIL_TO=cat@hostloc.com #数据库发送到的邮箱 FTP_USER=cat #ftp用户名 FTP_PASS=123456 #ftp密码 FTP_IP=imcat.in #ftp地址 FTP_backup=backup #ftp上存放备份文件的目录,这个要自己得ftp上面建的 WEB_DATA=/home/www #要备份的网站数据 #你要修改的地方从这里结束 #定义数据库的名字和旧数据库的名字 DataBakName=Data_$(date +\"%Y%m%d\").tar.gz WebBakName=Web_$(date +%Y%m%d).tar.gz OldData=Data_$(date -d -5day +\"%Y%m%d\").tar.gz OldWeb=Web_$(date -d -5day +\"%Y%m%d\").tar.gz #删除本地3天前的数据 rm -rf /home/backup/Data_$(date -d -3day +\"%Y%m%d\").tar.gz /home/backup/Web_$(date -d -3day +\"%Y%m%d\").tar.gz cd /home/backup #导出数据库,一个数据库一个压缩文件 for db in `/usr/local/mysql/bin/mysql -u$MYSQL_USER -p$MYSQL_PASS -B -N -e 'SHOW DATABASES' | xargs`; do (/usr/local/mysql/bin/mysqldump -u$MYSQL_USER -p$MYSQL_PASS ${db} | gzip -9 - \u003e ${db}.sql.gz) done #压缩数据库文件为一个文件 tar zcf /home/backup/$DataBakName /home/backup/*.sql.gz rm -rf /home/backup/*.sql.gz #发送数据库到Email,如果数据库压缩后太大,请注释这行 echo \"主题:数据库备份\" | mutt -a /home/backup/$DataBakName -s \"内容:数据库备份\" $MAIL_TO #压缩网站数据 tar zcf /home/backup/$WebBakName $WEB_DATA #上传到FTP空间,删除FTP空间5天前的数据 ftp -v -n $FTP_IP \u003c\u003c END user $FTP_USER $FTP_PASS type binary cd $FTP_backup delete $OldData delete $OldWeb put $DataBakName put $WebBakName bye END 完！ ","date":"2012-12-02","objectID":"/blog-moving/:3:0","tags":["虚拟空间"],"title":"更换博客虚拟空间","uri":"/blog-moving/"},{"categories":["游戏娱乐"],"content":"Y480","date":"2012-11-17","objectID":"/y480/","tags":["Y480"],"title":"Y480","uri":"/y480/"},{"categories":["游戏娱乐"],"content":"前几天下单买的，今天到了，买这个的时候也没怎么挑，zol上直接点性价比最高的就买了。 个人觉得买这种东西，挑来挑去也没意思，除非你消费价位区间比较大。 所以直接买了个y480，配置还行，i53210，显卡GT650M，升级到8G内存，ssd太贵了没钱买。 人品不错，随机发货拿到了个LG完美屏。只是有点泛白，还得自己调颜色增强。 硬盘不给力，转速5400，要是7200就好了，还有联想不舍得用高分屏啊，不过这个价位也别想太多了。 电脑概览 信息 CPU (英特尔)Intel(R) Core(TM) i5-3210M CPU @ 2.50GHz(2501 MHz) 主板 联想 Product Name 内存 8.00 GB ( 800 MHz) 主硬盘 1000 GB (希捷 ST1000LM024 HN-M101MBB ATA Device 已使用时间: 4小时) 显卡 NVIDIA GeForce GT 650M 显示器 LG LG Display 32位真彩色 60Hz 声卡 Realtek ALC269 High Definition Audio (82801G) 网卡 Atheros AR8161/8165 PCI-E Gigabit Ethernet Controller 留几个图，物流公司今天忘记送我的包裹了，自己去拿的： 包裹 拆开的所有配件： 配件 主机包装： 主机包装 其它配件： 杂件 真身： 真身 桌面就几个常用软件，截图 桌面 ","date":"2012-11-17","objectID":"/y480/:0:0","tags":["Y480"],"title":"Y480","uri":"/y480/"},{"categories":["乱七八糟"],"content":"更换域名","date":"2012-11-03","objectID":"/change-domain/","tags":["域名"],"title":"更换域名","uri":"/change-domain/"},{"categories":["乱七八糟"],"content":"本来想着 NAME.COM 不送 Whois Privacy 了，干脆在 Godaddy 注册好了，支持支付宝也方便一点， 以前的godaddy账号忘了，再注册的时候也恶心，密码非要包含一个大写一个小写，开始还没注意看，以为是自己输两遍不一样的密码。Godaddy 推销的东西还真多，从添加域名到付款期间点了好几次“no thanks\"。差不多点击付款的时候猛的想起好像续费时候和新注册价格好像不一样的，返回看看，果然，续费要10多刀，不太划算，还是继续在 NAME.COM 好了，没信用卡付款麻烦就麻烦一点，胜在便宜。新注册是 $7.99，学费估计和godaddy差不多，不管了。 下来就是更换域名, lnmp 下还挺方便，直接修改 /usr/local/nginx/conf/nginx.conf 把旧域名替换成新的，然后重启 nginx 就行。 数据库我是习惯导出.sql，把里面的旧域名替换成新的再导入，方法土了一点，但是效果还可以。至于301，做都懒得做了，反正我是禁止所有搜索引擎爬虫的。 没什么好写的，今天下单买了个 Y480。等着货到吧。 ","date":"2012-11-03","objectID":"/change-domain/:0:0","tags":["域名"],"title":"更换域名","uri":"/change-domain/"},{"categories":["学习备忘"],"content":"VPS 命令备忘","date":"2012-10-30","objectID":"/vps-memo/","tags":["VPS"],"title":"VPS 命令备忘","uri":"/vps-memo/"},{"categories":["学习备忘"],"content":"添加低权限ssh账号 useradd username -s /sbin/nologin echo username:password | chpasswd`\u003c/pre\u003e ","date":"2012-10-30","objectID":"/vps-memo/:1:0","tags":["VPS"],"title":"VPS 命令备忘","uri":"/vps-memo/"},{"categories":["学习备忘"],"content":"调整时区 rm -rf /etc/localtime ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime ","date":"2012-10-30","objectID":"/vps-memo/:2:0","tags":["VPS"],"title":"VPS 命令备忘","uri":"/vps-memo/"},{"categories":["学习备忘"],"content":"修改ssh端口 vi /etc/ssh/sshd_config 把端口22随意改，然后 service sshd restart ","date":"2012-10-30","objectID":"/vps-memo/:3:0","tags":["VPS"],"title":"VPS 命令备忘","uri":"/vps-memo/"},{"categories":["学习备忘"],"content":"常用ssh命令，来自vps侦探 ","date":"2012-10-30","objectID":"/vps-memo/:4:0","tags":["VPS"],"title":"VPS 命令备忘","uri":"/vps-memo/"},{"categories":["学习备忘"],"content":"目录操作： rm -rf mydir /*删除mydir目录*/ mkdir dirname /*创建名为dirname的目录*/ cd mydir /*进入mydir目录*/ cd - /*回上一级目录*/ cd .. /*回父目录，中间有空格*/ cd ~ /*回根目录*/ mv tools tool /*把tools目录改名为tool */ ln -s tool bac /*给tool目录创建名为bac的符号链接,最熟悉的应该就是FTP中www链接到public_html目录了*/ cp -a tool /home/vpser/www /*把tool目录下所有文件复制到www目录下 */ ","date":"2012-10-30","objectID":"/vps-memo/:5:0","tags":["VPS"],"title":"VPS 命令备忘","uri":"/vps-memo/"},{"categories":["学习备忘"],"content":"文件操作： rm go.tar /* 删除go.tar文件 */ find mt.cgi /* 查找文件名为mt.cgi的文件 */ df –h /* 查看磁盘剩余空间,好像没这个必要，除非你太那个了 */ ","date":"2012-10-30","objectID":"/vps-memo/:6:0","tags":["VPS"],"title":"VPS 命令备忘","uri":"/vps-memo/"},{"categories":["学习备忘"],"content":"解压缩： tar xvf wordpress.tar /* 解压tar格式的文件 */ tar -tvf myfile.tar /* 查看tar文件中包含的文件 */ tar cf toole.tar tool /* 把tool目录打包为toole.tar文件 */ tar cfz vpser.tar.gz tool /* 把tool目录打包且压缩为vpser.tar.gz文件，因为.tar文件几乎是没有压缩过的，MT的.tar.gz文件解压成.tar文件后差不多是10MB */ tar jcvf /var/bak/www.tar.bz2 /var/www/ /*创建.tar.bz2文件，压缩率高*/ tar xjf www.tar.bz2 /*解压tar.bz2格式*/ gzip -d ge.tar.gz /* 解压.tar.gz文件为.tar文件 */ unzip phpbb.zip /* 解压zip文件，windows下要压缩出一个.tar.gz格式的文件还是有点麻烦的 */ ","date":"2012-10-30","objectID":"/vps-memo/:7:0","tags":["VPS"],"title":"VPS 命令备忘","uri":"/vps-memo/"},{"categories":["学习备忘"],"content":"下载： wget http://soft.vpser.net/web/nginx/nginx-0.8.0.tar.gz /*下载远程服务器上的文件到自己的服务器，连上传都省了，服务器不是100M就是1000M的带宽，下载一个2-3兆的MT还不是几十秒的事 */ wget -c http://soft.vpser.net/web/nginx/nginx-0.8.0.tar.gz /* 继续下载上次未下载完的文件 */ ","date":"2012-10-30","objectID":"/vps-memo/:8:0","tags":["VPS"],"title":"VPS 命令备忘","uri":"/vps-memo/"},{"categories":["学习备忘"],"content":"进程管理： ps -aux /*ps 进程状态查询命令*/ ps命令输出字段的含义： [list] [*]USER，进程所有者的用户名。 [*]PID，进程号，可以唯一标识该进程。 [*]%CPU，进程自最近一次刷新以来所占用的CPU时间和总时间的百分比。 [*]%MEM，进程使用内存的百分比。 [*]VSZ，进程使用的虚拟内存大小，以K为单位。 [*]RSS，进程占用的物理内存的总数量，以K为单位。 [*]TTY，进程相关的终端名。 [*]STAT，进程状态，用(R--运行或准备运行；S--睡眠状态；I--空闲；Z--冻结；D--不间断睡眠；W-进程没有驻留页；T停止或跟踪。)这些字母来表示。 [*]START，进程开始运行时间。 [*]TIME，进程使用的总CPU时间。 [*]COMMAND，被执行的命令行。 [/list] ps -aux | grep nginx /*在所有进程中，查找nginx的进程*/ ","date":"2012-10-30","objectID":"/vps-memo/:9:0","tags":["VPS"],"title":"VPS 命令备忘","uri":"/vps-memo/"},{"categories":["游戏娱乐"],"content":"金甲虫2代","date":"2012-10-04","objectID":"/new-mouse/","tags":["鼠标"],"title":"金甲虫2代","uri":"/new-mouse/"},{"categories":["游戏娱乐"],"content":"前段时间和朋友玩游戏的时候发现手上的鼠标飘得很，经常误点击，而且拿鼠标本来就小，握着很不习惯，顺口抱怨了下，朋友听了也打算换个鼠标，于是直接在某dota解说X宝店买个2个金甲虫2代，事实上我也不玩dota，买这个纯粹是它比较大，造型也奇葩。 今天到货了，拆开试了一下，还算凑合，大小还满意，就是重量123g对我来说还是太轻了。 四档dpi设置，500~2000，我个人习惯是1000，回报率：125HZ-500HZ-1000HZ。 插上usb接口试了一下，左右按键声音好脆，好像经不起狂点击的样子。中间滚轮搓起来比以前那个好，以前的每转一圈就会卡住一下。 好像不能关掉那个侧边的透光，大晚上不开灯的话，绿幽幽看着不怎么舒服。 包装盒里面居然还有解说的签名照，囧，男的就懒得贴了。 mouse mouse mouse mouse ","date":"2012-10-04","objectID":"/new-mouse/:0:0","tags":["鼠标"],"title":"金甲虫2代","uri":"/new-mouse/"},{"categories":["学习备忘"],"content":"VPS 小折腾","date":"2012-09-30","objectID":"/freevps/","tags":["VPS"],"title":"VPS 小折腾","uri":"/freevps/"},{"categories":["学习备忘"],"content":"FreeVPS 中秋节回家上上网，前段时间值班时候无聊申请的freevps开通邮件到了，准备这几天有时间极限压榨下这个性能极其低下的vps，为了练练手，过段时间年付个便宜vps，性能烂无所谓，反正不放站，要求也不高，能搭个梯子自用，偶尔折腾玩玩就行。 说说这个免费的吧，128内存，5G硬盘，500G流量，知道的一猜就知道是哪个了。配置很低，但练手足够了，编译lnmp花了差不多一个小时。先扔着吧，过两天有时间，网上多翻翻资料，折腾一下，差不多了就入手个够自己用的。 下面是测试数据，算是悲剧。 ","date":"2012-09-30","objectID":"/freevps/:1:0","tags":["VPS"],"title":"VPS 小折腾","uri":"/freevps/"},{"categories":["学习备忘"],"content":"VPS 参数 ","date":"2012-09-30","objectID":"/freevps/:2:0","tags":["VPS"],"title":"VPS 小折腾","uri":"/freevps/"},{"categories":["学习备忘"],"content":"内存 total used free shared buffers cached Mem: 128 84 43 0 0 61 -/+ buffers/cache: 22 105 Swap: 128 26 101\u003c/div\u003e ","date":"2012-09-30","objectID":"/freevps/:2:1","tags":["VPS"],"title":"VPS 小折腾","uri":"/freevps/"},{"categories":["学习备忘"],"content":"下载测试 wget http://cachefly.cachefly.net/100mb.test 信息 –2012-09-30 14:11:16– http://cachefly.cachefly.net/100mb.test Resolving cachefly.cachefly.net… 205.234.175.175 Connecting to cachefly.cachefly.net|205.234.175.175|:80… connected. HTTP request sent, awaiting response… 200 OK Length: 104857600 (100M) [application/octet-stream] Saving to: ?.00mb.test? 100%[================================================\u003e] 104,857,600 14.5M/s in 10s 2012-09-30 14:11:27 (9.82 MB/s) - ?.00mb.test?.saved [104857600/104857600] ","date":"2012-09-30","objectID":"/freevps/:2:2","tags":["VPS"],"title":"VPS 小折腾","uri":"/freevps/"},{"categories":["学习备忘"],"content":"CPU cat /proc/cpuinfo 信息 processor : 0 vendor_id : AuthenticAMD cpu family : 16 model : 2 model name : AMD Opteron(tm) Processor 6172 stepping : 3 cpu MHz : 2100.025 cache size : 512 KB physical id : 0 siblings : 4 core id : 0 cpu cores : 4 apicid : 0 initial apicid : 0 fpu : yes fpu_exception : yes cpuid level : 5 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt rdtscp lm 3dnowext 3dnow constant_tsc rep_good tsc_reliable nonstop_tsc unfair_spinlock pni cx16 popcnt hypervisor lahf_lm extapic abm sse4a misalignsse 3dnowprefetch osvw bogomips : 4200.05 TLB size : 1024 4K pages clflush size : 64 cache_alignment : 64 address sizes : 40 bits physical, 48 bits virtual power management: ","date":"2012-09-30","objectID":"/freevps/:2:3","tags":["VPS"],"title":"VPS 小折腾","uri":"/freevps/"},{"categories":["学习备忘"],"content":"硬盘性能 太差了~ dd if=/dev/zero of=test bs=64k count=512 oflag=dsync\u003c/pre\u003e 卡住好久，懒得贴了。 ","date":"2012-09-30","objectID":"/freevps/:2:4","tags":["VPS"],"title":"VPS 小折腾","uri":"/freevps/"},{"categories":["学习备忘"],"content":"ping 最快：美国堪萨斯[海外] 34 毫秒 最慢：陕西西安[电信] 639 毫秒 电信平均： 422 毫秒 联通平均： 387 毫秒 ","date":"2012-09-30","objectID":"/freevps/:2:5","tags":["VPS"],"title":"VPS 小折腾","uri":"/freevps/"},{"categories":["生活点滴"],"content":"最近","date":"2012-09-14","objectID":"/recently/","tags":["生活"],"title":"最近","uri":"/recently/"},{"categories":["生活点滴"],"content":"意料之中，“它们”害怕的一切意识形态内容自然不敢直视。 一群骗子高呼口号，发起运动，一群傻子蜂拥而上，结果显而易见，骗子洋洋得意，傻子流血街头。 重读《成都，今夜请将我遗忘》，和 10 年前感受不一样，如豆瓣书评所说，作者在书中发泄了不满，留下了一群颓废厌世的读者。 记忆力越来越差，原因我自己很清楚。尽管如此，《神探亨特张》里的一句：“不要和戒烟成功的男人交朋友”还是让我笑出声来。 《鉴宝疑云》这段时间一直再看，手机电脑看书真的很累，每当这个时候就想买个 Kindle。 域名好像快到期了，看着续费价格好像比去年还少点，过两天抽空续了吧。 TBBT 似乎在 9 月 27 号开播，还有十多天，安心等待。 是挺流水账的，其实也不知道想说什么。正如《simple simon》中的台词： 比起人类，我更加的喜欢圆。圆是沒有终点的重复着，可人类卻是复杂而难以理解的。 ","date":"2012-09-14","objectID":"/recently/:0:0","tags":["生活"],"title":"最近","uri":"/recently/"},{"categories":["生活点滴"],"content":"无题","date":"2012-08-26","objectID":"/untitled/","tags":["无题"],"title":"无题","uri":"/untitled/"},{"categories":["生活点滴"],"content":"深夜上推，是一天中最充实的时刻。 上网环境不便，基本上都是手机通过 sshtunne l翻的，经常等着等着TL刷新就睡着了。 今天看到@LivinChanel的一句： 當你發現別人對你的態度變了，很有可能是那個人終於認識你了。 深有感触，有些东西，别想太多。失落的时候还是多学点东西，有东西沉迷就会忘掉很多不开心的事。 翻出布满灰尘的书，不知道还有没有当年的热情去看完。突然想给艾婶发封邮件，索取一粒葵花籽，放在身上，低落时握在手心，鼓起勇气面对。 顺带，今天 site 了下域名，某些搜索引擎的流氓蜘蛛又无视 robots.txt 抓取内容了，不在乎了，这就扔在一个免空上面，什么时候消失了都还不一定呢。 ","date":"2012-08-26","objectID":"/untitled/:0:0","tags":["无题"],"title":"无题","uri":"/untitled/"},{"categories":["乱七八糟"],"content":"德国新教马丁·尼莫拉牧师的忏悔诗","date":"2009-07-29","objectID":"/martinniemoller/","tags":["马丁尼莫拉"],"title":"德国新教马丁·尼莫拉牧师的忏悔诗","uri":"/martinniemoller/"},{"categories":["乱七八糟"],"content":" 引用 在德国，起初他们追杀共产主义者，我没有说话———因为我不是共产主义者。 接着他们追杀犹太人，我没有说话———因为我不是犹太人。 后来他们追杀工会成员，我没有说话———因为我不是工会成员。 此后他们追杀天主教徒，我没有说话———因为我是新教教徒。 最后他们奔我而来，却再也没有人站出来为我说话了。 ————马丁·尼莫拉牧师 ","date":"2009-07-29","objectID":"/martinniemoller/:0:0","tags":["马丁尼莫拉"],"title":"德国新教马丁·尼莫拉牧师的忏悔诗","uri":"/martinniemoller/"},{"categories":["乱七八糟"],"content":"Hello World","date":"2009-07-27","objectID":"/hello-world/","tags":["Hello World"],"title":"Hello World","uri":"/hello-world/"},{"categories":["乱七八糟"],"content":"　欢迎使用 WordPress 。这是系统自动生成的演示文章。编辑或者删除它，开始您的博客！ ","date":"2009-07-27","objectID":"/hello-world/:0:0","tags":["Hello World"],"title":"Hello World","uri":"/hello-world/"},{"categories":null,"content":"关于我 关于我 80 后，男。 不感兴趣但非要做的事情，做得很差，努力改正中，为了将来。 感兴趣的事情，熬到多晚就就会折腾，为了那一丝成就感，哪怕这成就感在别人眼中多么的微不足道。 大学财务管理专业，但对不住老师，经常逃课在图书馆呆一整天看杂书，虽然所学到的对现在没什么帮助，但我常常怀念那段日子，认为图书馆窗里窗外是两个不同的世界。 ","date":"0001-01-01","objectID":"/about/:1:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"关于这里 建站记录 2005 – 2009 年大学期间，沉迷网络，网吧通宵的时候误入一个讨论免费虚拟主机的论坛，Google 了半天，终于上传了一个 index.html，从此混迹于各种资源论坛，学到很多，但学得很杂，半吊子水平。 2009 年大学毕业，删除所有免费虚拟主机的数据，注册域名 LLT.NAME 用 Wordpress 搭建了这里，大多是胡言乱语。 2010 – 2011 年，长期不更新，停掉了，数据备份在邮箱。 2012 – 2013 年，某个值班晚上心血来潮翻出邮箱备份的数据，注册域名 CLEARSKY.ME 重新搭建这里，程序由 Wordpress 换成 Typecho，同时把虚拟主机换成 VPS。 2014 年，程序再次换回 Wordpress，同年 5 月数据丢失，一切从头开始。 2014 年 9 月，在一个古老的网盘找到 2009 年到 2010 年的数据并导入。 2016 年 1 月，迁移至 Hexo，托管在 GitHub Pages 和 GitCafe Pages。 2016 年 4 月，GitCafe 被 Coding 收购并开始收费，博客只部署到 GitHub Pages。 2017 年 6 月，迁移至 BandwagonHost VPS （ KVM 架构）。 2017 年 6 月 – 2021 年 8 月，长期不更新,托管在 GitHub Pages。 2021 年 8 月，心血来潮把博客系统迁移到 Hugo，随缘更新。 2022 年，未来在继续。。。 2023 年，未来还在继续。。。 免责声明 请注意，这是个人站点，在这里发表的评论将被记录，所以请不要张贴任何隐私的信息，并且发表言论请遵守中华人民共和国及其它国家和地区的相关法律法规。 本站可能存在引用、摘录或转载来自第三方的文字、图片、视频等内容，使用这些第三方内容是出于传递更多信息之目的，并不意味着赞同其观点或认可其真实性。亦不保证内容的准确性、安全性和完整性，请您在阅读、下载及使用过程中自行确认，本站亦不承担上述资源对您或您的网站造成的任何形式的损失或伤害。 版权声明 除特殊声明外，本站遵循 CC BY-NC 4.0 协议。您可以自由地共享以及演绎，但是必须署名并以相同方式共享。 ","date":"0001-01-01","objectID":"/about/:2:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"联系方式 联系方式 极少使用即时通讯软件与陌生人交流，原因可以看看知乎上的这个问答：为什么很多人用电子邮件交流，而不是即时通讯软件（如 QQ 、MSN 等）？ 看完了，那么我的邮箱主页可以找到。 ","date":"0001-01-01","objectID":"/about/:3:0","tags":null,"title":"关于","uri":"/about/"},{"categories":null,"content":"我的家乡 目前我生活在家乡，一个小县城，如果有缘路过或者想来，我请你吃螺蛳粉。 ","date":"0001-01-01","objectID":"/about/:4:0","tags":null,"title":"关于","uri":"/about/"}]